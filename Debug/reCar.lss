
reCar.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006196  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000108  00800060  00006196  0000622a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000024  00800168  00800168  00006332  2**0
                  ALLOC
  3 .stab         000030cc  00000000  00000000  00006334  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000144d  00000000  00000000  00009400  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000220  00000000  00000000  0000a84d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000275  00000000  00000000  0000aa6d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00003510  00000000  00000000  0000ace2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001823  00000000  00000000  0000e1f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000179c  00000000  00000000  0000fa15  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000240  00000000  00000000  000111b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000003b7  00000000  00000000  000113f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00002420  00000000  00000000  000117ab  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000080  00000000  00000000  00013bcb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 66 2a 	jmp	0x54cc	; 0x54cc <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 81 27 	jmp	0x4f02	; 0x4f02 <__vector_6>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a8 e6       	ldi	r26, 0x68	; 104
      64:	b1 e0       	ldi	r27, 0x01	; 1
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	ac 38       	cpi	r26, 0x8C	; 140
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
      70:	11 e0       	ldi	r17, 0x01	; 1
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	e6 e9       	ldi	r30, 0x96	; 150
      78:	f1 e6       	ldi	r31, 0x61	; 97
      7a:	02 c0       	rjmp	.+4      	; 0x80 <.do_copy_data_start>

0000007c <.do_copy_data_loop>:
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0

00000080 <.do_copy_data_start>:
      80:	a8 36       	cpi	r26, 0x68	; 104
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <.do_copy_data_loop>
      86:	0e 94 e3 27 	call	0x4fc6	; 0x4fc6 <main>
      8a:	0c 94 c9 30 	jmp	0x6192	; 0x6192 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 82 11 	call	0x2304	; 0x2304 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 4e 0f 	call	0x1e9c	; 0x1e9c <__subsf3>
      be:	0e 94 e2 11 	call	0x23c4	; 0x23c4 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 e2 11 	call	0x23c4	; 0x23c4 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <__fixunssfdi>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 92 30 	jmp	0x6124	; 0x6124 <__prologue_saves__>
      f6:	7b 01       	movw	r14, r22
      f8:	8c 01       	movw	r16, r24
      fa:	20 e0       	ldi	r18, 0x00	; 0
      fc:	30 e0       	ldi	r19, 0x00	; 0
      fe:	40 e8       	ldi	r20, 0x80	; 128
     100:	5f e3       	ldi	r21, 0x3F	; 63
     102:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
     106:	88 23       	and	r24, r24
     108:	4c f4       	brge	.+18     	; 0x11c <__fixunssfdi+0x32>
     10a:	aa 24       	eor	r10, r10
     10c:	bb 24       	eor	r11, r11
     10e:	cc 24       	eor	r12, r12
     110:	dd 24       	eor	r13, r13
     112:	ee 24       	eor	r14, r14
     114:	ff 24       	eor	r15, r15
     116:	00 e0       	ldi	r16, 0x00	; 0
     118:	10 e0       	ldi	r17, 0x00	; 0
     11a:	86 c0       	rjmp	.+268    	; 0x228 <__fixunssfdi+0x13e>
     11c:	c8 01       	movw	r24, r16
     11e:	b7 01       	movw	r22, r14
     120:	20 e0       	ldi	r18, 0x00	; 0
     122:	30 e0       	ldi	r19, 0x00	; 0
     124:	40 e8       	ldi	r20, 0x80	; 128
     126:	5f e4       	ldi	r21, 0x4F	; 79
     128:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
     12c:	88 23       	and	r24, r24
     12e:	54 f4       	brge	.+20     	; 0x144 <__fixunssfdi+0x5a>
     130:	c8 01       	movw	r24, r16
     132:	b7 01       	movw	r22, r14
     134:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     138:	5b 01       	movw	r10, r22
     13a:	6c 01       	movw	r12, r24
     13c:	ee 24       	eor	r14, r14
     13e:	ff 24       	eor	r15, r15
     140:	87 01       	movw	r16, r14
     142:	72 c0       	rjmp	.+228    	; 0x228 <__fixunssfdi+0x13e>
     144:	c8 01       	movw	r24, r16
     146:	b7 01       	movw	r22, r14
     148:	20 e0       	ldi	r18, 0x00	; 0
     14a:	30 e0       	ldi	r19, 0x00	; 0
     14c:	40 e8       	ldi	r20, 0x80	; 128
     14e:	5f e5       	ldi	r21, 0x5F	; 95
     150:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
     154:	87 fd       	sbrc	r24, 7
     156:	0f c0       	rjmp	.+30     	; 0x176 <__fixunssfdi+0x8c>
     158:	aa 24       	eor	r10, r10
     15a:	aa 94       	dec	r10
     15c:	bb 24       	eor	r11, r11
     15e:	ba 94       	dec	r11
     160:	cc 24       	eor	r12, r12
     162:	ca 94       	dec	r12
     164:	dd 24       	eor	r13, r13
     166:	da 94       	dec	r13
     168:	ee 24       	eor	r14, r14
     16a:	ea 94       	dec	r14
     16c:	ff 24       	eor	r15, r15
     16e:	fa 94       	dec	r15
     170:	0f ef       	ldi	r16, 0xFF	; 255
     172:	1f ef       	ldi	r17, 0xFF	; 255
     174:	59 c0       	rjmp	.+178    	; 0x228 <__fixunssfdi+0x13e>
     176:	c8 01       	movw	r24, r16
     178:	b7 01       	movw	r22, r14
     17a:	20 e0       	ldi	r18, 0x00	; 0
     17c:	30 e0       	ldi	r19, 0x00	; 0
     17e:	40 e8       	ldi	r20, 0x80	; 128
     180:	5f e2       	ldi	r21, 0x2F	; 47
     182:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
     186:	7b 01       	movw	r14, r22
     188:	8c 01       	movw	r16, r24
     18a:	22 24       	eor	r2, r2
     18c:	33 24       	eor	r3, r3
     18e:	21 01       	movw	r4, r2
     190:	90 e1       	ldi	r25, 0x10	; 16
     192:	a9 2e       	mov	r10, r25
     194:	b1 2c       	mov	r11, r1
     196:	c1 2c       	mov	r12, r1
     198:	d1 2c       	mov	r13, r1
     19a:	c0 e0       	ldi	r28, 0x00	; 0
     19c:	d0 e0       	ldi	r29, 0x00	; 0
     19e:	61 e0       	ldi	r22, 0x01	; 1
     1a0:	70 e0       	ldi	r23, 0x00	; 0
     1a2:	80 e0       	ldi	r24, 0x00	; 0
     1a4:	90 e0       	ldi	r25, 0x00	; 0
     1a6:	0a 2c       	mov	r0, r10
     1a8:	04 c0       	rjmp	.+8      	; 0x1b2 <__fixunssfdi+0xc8>
     1aa:	66 0f       	add	r22, r22
     1ac:	77 1f       	adc	r23, r23
     1ae:	88 1f       	adc	r24, r24
     1b0:	99 1f       	adc	r25, r25
     1b2:	0a 94       	dec	r0
     1b4:	d2 f7       	brpl	.-12     	; 0x1aa <__fixunssfdi+0xc0>
     1b6:	0e 94 36 12 	call	0x246c	; 0x246c <__floatunsisf>
     1ba:	3b 01       	movw	r6, r22
     1bc:	4c 01       	movw	r8, r24
     1be:	c8 01       	movw	r24, r16
     1c0:	b7 01       	movw	r22, r14
     1c2:	a4 01       	movw	r20, r8
     1c4:	93 01       	movw	r18, r6
     1c6:	0e 94 82 11 	call	0x2304	; 0x2304 <__gesf2>
     1ca:	88 23       	and	r24, r24
     1cc:	64 f0       	brlt	.+24     	; 0x1e6 <__fixunssfdi+0xfc>
     1ce:	2a 28       	or	r2, r10
     1d0:	3b 28       	or	r3, r11
     1d2:	4c 28       	or	r4, r12
     1d4:	5d 28       	or	r5, r13
     1d6:	c8 01       	movw	r24, r16
     1d8:	b7 01       	movw	r22, r14
     1da:	a4 01       	movw	r20, r8
     1dc:	93 01       	movw	r18, r6
     1de:	0e 94 a6 10 	call	0x214c	; 0x214c <__divsf3>
     1e2:	7b 01       	movw	r14, r22
     1e4:	8c 01       	movw	r16, r24
     1e6:	d6 94       	lsr	r13
     1e8:	c7 94       	ror	r12
     1ea:	b7 94       	ror	r11
     1ec:	a7 94       	ror	r10
     1ee:	21 96       	adiw	r28, 0x01	; 1
     1f0:	c5 30       	cpi	r28, 0x05	; 5
     1f2:	d1 05       	cpc	r29, r1
     1f4:	a1 f6       	brne	.-88     	; 0x19e <__fixunssfdi+0xb4>
     1f6:	c8 01       	movw	r24, r16
     1f8:	b7 01       	movw	r22, r14
     1fa:	20 e0       	ldi	r18, 0x00	; 0
     1fc:	30 e0       	ldi	r19, 0x00	; 0
     1fe:	40 e8       	ldi	r20, 0x80	; 128
     200:	5f e4       	ldi	r21, 0x4F	; 79
     202:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
     206:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     20a:	5b 01       	movw	r10, r22
     20c:	6c 01       	movw	r12, r24
     20e:	9b 01       	movw	r18, r22
     210:	a6 01       	movw	r20, r12
     212:	60 e0       	ldi	r22, 0x00	; 0
     214:	70 e0       	ldi	r23, 0x00	; 0
     216:	80 e0       	ldi	r24, 0x00	; 0
     218:	90 e0       	ldi	r25, 0x00	; 0
     21a:	02 2d       	mov	r16, r2
     21c:	0e 94 af 12 	call	0x255e	; 0x255e <__ashldi3>
     220:	59 01       	movw	r10, r18
     222:	6a 01       	movw	r12, r20
     224:	7b 01       	movw	r14, r22
     226:	8c 01       	movw	r16, r24
     228:	95 01       	movw	r18, r10
     22a:	a6 01       	movw	r20, r12
     22c:	b7 01       	movw	r22, r14
     22e:	c8 01       	movw	r24, r16
     230:	cd b7       	in	r28, 0x3d	; 61
     232:	de b7       	in	r29, 0x3e	; 62
     234:	e2 e1       	ldi	r30, 0x12	; 18
     236:	0c 94 ae 30 	jmp	0x615c	; 0x615c <__epilogue_restores__>

0000023a <__udivdi3>:
     23a:	ae e5       	ldi	r26, 0x5E	; 94
     23c:	b0 e0       	ldi	r27, 0x00	; 0
     23e:	e3 e2       	ldi	r30, 0x23	; 35
     240:	f1 e0       	ldi	r31, 0x01	; 1
     242:	0c 94 92 30 	jmp	0x6124	; 0x6124 <__prologue_saves__>
     246:	a8 e0       	ldi	r26, 0x08	; 8
     248:	4e 01       	movw	r8, r28
     24a:	08 94       	sec
     24c:	81 1c       	adc	r8, r1
     24e:	91 1c       	adc	r9, r1
     250:	f4 01       	movw	r30, r8
     252:	6a 2e       	mov	r6, r26
     254:	11 92       	st	Z+, r1
     256:	6a 94       	dec	r6
     258:	e9 f7       	brne	.-6      	; 0x254 <__udivdi3+0x1a>
     25a:	29 83       	std	Y+1, r18	; 0x01
     25c:	3a 83       	std	Y+2, r19	; 0x02
     25e:	4b 83       	std	Y+3, r20	; 0x03
     260:	5c 83       	std	Y+4, r21	; 0x04
     262:	6d 83       	std	Y+5, r22	; 0x05
     264:	7e 83       	std	Y+6, r23	; 0x06
     266:	8f 83       	std	Y+7, r24	; 0x07
     268:	98 87       	std	Y+8, r25	; 0x08
     26a:	ce 01       	movw	r24, r28
     26c:	09 96       	adiw	r24, 0x09	; 9
     26e:	fc 01       	movw	r30, r24
     270:	11 92       	st	Z+, r1
     272:	aa 95       	dec	r26
     274:	e9 f7       	brne	.-6      	; 0x270 <__udivdi3+0x36>
     276:	a9 86       	std	Y+9, r10	; 0x09
     278:	ba 86       	std	Y+10, r11	; 0x0a
     27a:	cb 86       	std	Y+11, r12	; 0x0b
     27c:	dc 86       	std	Y+12, r13	; 0x0c
     27e:	ed 86       	std	Y+13, r14	; 0x0d
     280:	fe 86       	std	Y+14, r15	; 0x0e
     282:	0f 87       	std	Y+15, r16	; 0x0f
     284:	18 8b       	std	Y+16, r17	; 0x10
     286:	29 84       	ldd	r2, Y+9	; 0x09
     288:	3a 84       	ldd	r3, Y+10	; 0x0a
     28a:	4b 84       	ldd	r4, Y+11	; 0x0b
     28c:	5c 84       	ldd	r5, Y+12	; 0x0c
     28e:	ed 84       	ldd	r14, Y+13	; 0x0d
     290:	fe 84       	ldd	r15, Y+14	; 0x0e
     292:	0f 85       	ldd	r16, Y+15	; 0x0f
     294:	18 89       	ldd	r17, Y+16	; 0x10
     296:	69 80       	ldd	r6, Y+1	; 0x01
     298:	7a 80       	ldd	r7, Y+2	; 0x02
     29a:	8b 80       	ldd	r8, Y+3	; 0x03
     29c:	9c 80       	ldd	r9, Y+4	; 0x04
     29e:	6d a6       	std	Y+45, r6	; 0x2d
     2a0:	7e a6       	std	Y+46, r7	; 0x2e
     2a2:	8f a6       	std	Y+47, r8	; 0x2f
     2a4:	98 aa       	std	Y+48, r9	; 0x30
     2a6:	6d 80       	ldd	r6, Y+5	; 0x05
     2a8:	7e 80       	ldd	r7, Y+6	; 0x06
     2aa:	8f 80       	ldd	r8, Y+7	; 0x07
     2ac:	98 84       	ldd	r9, Y+8	; 0x08
     2ae:	e1 14       	cp	r14, r1
     2b0:	f1 04       	cpc	r15, r1
     2b2:	01 05       	cpc	r16, r1
     2b4:	11 05       	cpc	r17, r1
     2b6:	09 f0       	breq	.+2      	; 0x2ba <__udivdi3+0x80>
     2b8:	b3 c3       	rjmp	.+1894   	; 0xa20 <__stack+0x1c1>
     2ba:	62 14       	cp	r6, r2
     2bc:	73 04       	cpc	r7, r3
     2be:	84 04       	cpc	r8, r4
     2c0:	95 04       	cpc	r9, r5
     2c2:	08 f0       	brcs	.+2      	; 0x2c6 <__udivdi3+0x8c>
     2c4:	3d c1       	rjmp	.+634    	; 0x540 <__udivdi3+0x306>
     2c6:	00 e0       	ldi	r16, 0x00	; 0
     2c8:	20 16       	cp	r2, r16
     2ca:	00 e0       	ldi	r16, 0x00	; 0
     2cc:	30 06       	cpc	r3, r16
     2ce:	01 e0       	ldi	r16, 0x01	; 1
     2d0:	40 06       	cpc	r4, r16
     2d2:	00 e0       	ldi	r16, 0x00	; 0
     2d4:	50 06       	cpc	r5, r16
     2d6:	88 f4       	brcc	.+34     	; 0x2fa <__udivdi3+0xc0>
     2d8:	1f ef       	ldi	r17, 0xFF	; 255
     2da:	21 16       	cp	r2, r17
     2dc:	31 04       	cpc	r3, r1
     2de:	41 04       	cpc	r4, r1
     2e0:	51 04       	cpc	r5, r1
     2e2:	39 f0       	breq	.+14     	; 0x2f2 <__udivdi3+0xb8>
     2e4:	30 f0       	brcs	.+12     	; 0x2f2 <__udivdi3+0xb8>
     2e6:	48 e0       	ldi	r20, 0x08	; 8
     2e8:	e4 2e       	mov	r14, r20
     2ea:	f1 2c       	mov	r15, r1
     2ec:	01 2d       	mov	r16, r1
     2ee:	11 2d       	mov	r17, r1
     2f0:	18 c0       	rjmp	.+48     	; 0x322 <__udivdi3+0xe8>
     2f2:	ee 24       	eor	r14, r14
     2f4:	ff 24       	eor	r15, r15
     2f6:	87 01       	movw	r16, r14
     2f8:	14 c0       	rjmp	.+40     	; 0x322 <__udivdi3+0xe8>
     2fa:	20 e0       	ldi	r18, 0x00	; 0
     2fc:	22 16       	cp	r2, r18
     2fe:	20 e0       	ldi	r18, 0x00	; 0
     300:	32 06       	cpc	r3, r18
     302:	20 e0       	ldi	r18, 0x00	; 0
     304:	42 06       	cpc	r4, r18
     306:	21 e0       	ldi	r18, 0x01	; 1
     308:	52 06       	cpc	r5, r18
     30a:	30 f0       	brcs	.+12     	; 0x318 <__udivdi3+0xde>
     30c:	38 e1       	ldi	r19, 0x18	; 24
     30e:	e3 2e       	mov	r14, r19
     310:	f1 2c       	mov	r15, r1
     312:	01 2d       	mov	r16, r1
     314:	11 2d       	mov	r17, r1
     316:	05 c0       	rjmp	.+10     	; 0x322 <__udivdi3+0xe8>
     318:	20 e1       	ldi	r18, 0x10	; 16
     31a:	e2 2e       	mov	r14, r18
     31c:	f1 2c       	mov	r15, r1
     31e:	01 2d       	mov	r16, r1
     320:	11 2d       	mov	r17, r1
     322:	d2 01       	movw	r26, r4
     324:	c1 01       	movw	r24, r2
     326:	0e 2c       	mov	r0, r14
     328:	04 c0       	rjmp	.+8      	; 0x332 <__udivdi3+0xf8>
     32a:	b6 95       	lsr	r27
     32c:	a7 95       	ror	r26
     32e:	97 95       	ror	r25
     330:	87 95       	ror	r24
     332:	0a 94       	dec	r0
     334:	d2 f7       	brpl	.-12     	; 0x32a <__udivdi3+0xf0>
     336:	88 59       	subi	r24, 0x98	; 152
     338:	9f 4f       	sbci	r25, 0xFF	; 255
     33a:	dc 01       	movw	r26, r24
     33c:	2c 91       	ld	r18, X
     33e:	80 e2       	ldi	r24, 0x20	; 32
     340:	90 e0       	ldi	r25, 0x00	; 0
     342:	a0 e0       	ldi	r26, 0x00	; 0
     344:	b0 e0       	ldi	r27, 0x00	; 0
     346:	8e 19       	sub	r24, r14
     348:	9f 09       	sbc	r25, r15
     34a:	a0 0b       	sbc	r26, r16
     34c:	b1 0b       	sbc	r27, r17
     34e:	7c 01       	movw	r14, r24
     350:	8d 01       	movw	r16, r26
     352:	e2 1a       	sub	r14, r18
     354:	f1 08       	sbc	r15, r1
     356:	01 09       	sbc	r16, r1
     358:	11 09       	sbc	r17, r1
     35a:	e1 14       	cp	r14, r1
     35c:	f1 04       	cpc	r15, r1
     35e:	01 05       	cpc	r16, r1
     360:	11 05       	cpc	r17, r1
     362:	a1 f1       	breq	.+104    	; 0x3cc <__udivdi3+0x192>
     364:	0e 2c       	mov	r0, r14
     366:	04 c0       	rjmp	.+8      	; 0x370 <__udivdi3+0x136>
     368:	22 0c       	add	r2, r2
     36a:	33 1c       	adc	r3, r3
     36c:	44 1c       	adc	r4, r4
     36e:	55 1c       	adc	r5, r5
     370:	0a 94       	dec	r0
     372:	d2 f7       	brpl	.-12     	; 0x368 <__udivdi3+0x12e>
     374:	a4 01       	movw	r20, r8
     376:	93 01       	movw	r18, r6
     378:	0e 2c       	mov	r0, r14
     37a:	04 c0       	rjmp	.+8      	; 0x384 <__udivdi3+0x14a>
     37c:	22 0f       	add	r18, r18
     37e:	33 1f       	adc	r19, r19
     380:	44 1f       	adc	r20, r20
     382:	55 1f       	adc	r21, r21
     384:	0a 94       	dec	r0
     386:	d2 f7       	brpl	.-12     	; 0x37c <__udivdi3+0x142>
     388:	80 e2       	ldi	r24, 0x20	; 32
     38a:	90 e0       	ldi	r25, 0x00	; 0
     38c:	8e 19       	sub	r24, r14
     38e:	9f 09       	sbc	r25, r15
     390:	6d a4       	ldd	r6, Y+45	; 0x2d
     392:	7e a4       	ldd	r7, Y+46	; 0x2e
     394:	8f a4       	ldd	r8, Y+47	; 0x2f
     396:	98 a8       	ldd	r9, Y+48	; 0x30
     398:	04 c0       	rjmp	.+8      	; 0x3a2 <__udivdi3+0x168>
     39a:	96 94       	lsr	r9
     39c:	87 94       	ror	r8
     39e:	77 94       	ror	r7
     3a0:	67 94       	ror	r6
     3a2:	8a 95       	dec	r24
     3a4:	d2 f7       	brpl	.-12     	; 0x39a <__udivdi3+0x160>
     3a6:	62 2a       	or	r6, r18
     3a8:	73 2a       	or	r7, r19
     3aa:	84 2a       	or	r8, r20
     3ac:	95 2a       	or	r9, r21
     3ae:	ad a4       	ldd	r10, Y+45	; 0x2d
     3b0:	be a4       	ldd	r11, Y+46	; 0x2e
     3b2:	cf a4       	ldd	r12, Y+47	; 0x2f
     3b4:	d8 a8       	ldd	r13, Y+48	; 0x30
     3b6:	04 c0       	rjmp	.+8      	; 0x3c0 <__udivdi3+0x186>
     3b8:	aa 0c       	add	r10, r10
     3ba:	bb 1c       	adc	r11, r11
     3bc:	cc 1c       	adc	r12, r12
     3be:	dd 1c       	adc	r13, r13
     3c0:	ea 94       	dec	r14
     3c2:	d2 f7       	brpl	.-12     	; 0x3b8 <__udivdi3+0x17e>
     3c4:	ad a6       	std	Y+45, r10	; 0x2d
     3c6:	be a6       	std	Y+46, r11	; 0x2e
     3c8:	cf a6       	std	Y+47, r12	; 0x2f
     3ca:	d8 aa       	std	Y+48, r13	; 0x30
     3cc:	62 01       	movw	r12, r4
     3ce:	ee 24       	eor	r14, r14
     3d0:	ff 24       	eor	r15, r15
     3d2:	cd aa       	std	Y+53, r12	; 0x35
     3d4:	de aa       	std	Y+54, r13	; 0x36
     3d6:	ef aa       	std	Y+55, r14	; 0x37
     3d8:	f8 ae       	std	Y+56, r15	; 0x38
     3da:	92 01       	movw	r18, r4
     3dc:	81 01       	movw	r16, r2
     3de:	20 70       	andi	r18, 0x00	; 0
     3e0:	30 70       	andi	r19, 0x00	; 0
     3e2:	09 af       	std	Y+57, r16	; 0x39
     3e4:	1a af       	std	Y+58, r17	; 0x3a
     3e6:	2b af       	std	Y+59, r18	; 0x3b
     3e8:	3c af       	std	Y+60, r19	; 0x3c
     3ea:	c4 01       	movw	r24, r8
     3ec:	b3 01       	movw	r22, r6
     3ee:	a7 01       	movw	r20, r14
     3f0:	96 01       	movw	r18, r12
     3f2:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
     3f6:	7b 01       	movw	r14, r22
     3f8:	8c 01       	movw	r16, r24
     3fa:	c4 01       	movw	r24, r8
     3fc:	b3 01       	movw	r22, r6
     3fe:	2d a9       	ldd	r18, Y+53	; 0x35
     400:	3e a9       	ldd	r19, Y+54	; 0x36
     402:	4f a9       	ldd	r20, Y+55	; 0x37
     404:	58 ad       	ldd	r21, Y+56	; 0x38
     406:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
     40a:	c9 01       	movw	r24, r18
     40c:	da 01       	movw	r26, r20
     40e:	3c 01       	movw	r6, r24
     410:	4d 01       	movw	r8, r26
     412:	c4 01       	movw	r24, r8
     414:	b3 01       	movw	r22, r6
     416:	29 ad       	ldd	r18, Y+57	; 0x39
     418:	3a ad       	ldd	r19, Y+58	; 0x3a
     41a:	4b ad       	ldd	r20, Y+59	; 0x3b
     41c:	5c ad       	ldd	r21, Y+60	; 0x3c
     41e:	0e 94 51 30 	call	0x60a2	; 0x60a2 <__mulsi3>
     422:	9b 01       	movw	r18, r22
     424:	ac 01       	movw	r20, r24
     426:	87 01       	movw	r16, r14
     428:	ff 24       	eor	r15, r15
     42a:	ee 24       	eor	r14, r14
     42c:	ad a4       	ldd	r10, Y+45	; 0x2d
     42e:	be a4       	ldd	r11, Y+46	; 0x2e
     430:	cf a4       	ldd	r12, Y+47	; 0x2f
     432:	d8 a8       	ldd	r13, Y+48	; 0x30
     434:	c6 01       	movw	r24, r12
     436:	aa 27       	eor	r26, r26
     438:	bb 27       	eor	r27, r27
     43a:	57 01       	movw	r10, r14
     43c:	68 01       	movw	r12, r16
     43e:	a8 2a       	or	r10, r24
     440:	b9 2a       	or	r11, r25
     442:	ca 2a       	or	r12, r26
     444:	db 2a       	or	r13, r27
     446:	a2 16       	cp	r10, r18
     448:	b3 06       	cpc	r11, r19
     44a:	c4 06       	cpc	r12, r20
     44c:	d5 06       	cpc	r13, r21
     44e:	e0 f4       	brcc	.+56     	; 0x488 <__udivdi3+0x24e>
     450:	08 94       	sec
     452:	61 08       	sbc	r6, r1
     454:	71 08       	sbc	r7, r1
     456:	81 08       	sbc	r8, r1
     458:	91 08       	sbc	r9, r1
     45a:	a2 0c       	add	r10, r2
     45c:	b3 1c       	adc	r11, r3
     45e:	c4 1c       	adc	r12, r4
     460:	d5 1c       	adc	r13, r5
     462:	a2 14       	cp	r10, r2
     464:	b3 04       	cpc	r11, r3
     466:	c4 04       	cpc	r12, r4
     468:	d5 04       	cpc	r13, r5
     46a:	70 f0       	brcs	.+28     	; 0x488 <__udivdi3+0x24e>
     46c:	a2 16       	cp	r10, r18
     46e:	b3 06       	cpc	r11, r19
     470:	c4 06       	cpc	r12, r20
     472:	d5 06       	cpc	r13, r21
     474:	48 f4       	brcc	.+18     	; 0x488 <__udivdi3+0x24e>
     476:	08 94       	sec
     478:	61 08       	sbc	r6, r1
     47a:	71 08       	sbc	r7, r1
     47c:	81 08       	sbc	r8, r1
     47e:	91 08       	sbc	r9, r1
     480:	a2 0c       	add	r10, r2
     482:	b3 1c       	adc	r11, r3
     484:	c4 1c       	adc	r12, r4
     486:	d5 1c       	adc	r13, r5
     488:	a2 1a       	sub	r10, r18
     48a:	b3 0a       	sbc	r11, r19
     48c:	c4 0a       	sbc	r12, r20
     48e:	d5 0a       	sbc	r13, r21
     490:	c6 01       	movw	r24, r12
     492:	b5 01       	movw	r22, r10
     494:	2d a9       	ldd	r18, Y+53	; 0x35
     496:	3e a9       	ldd	r19, Y+54	; 0x36
     498:	4f a9       	ldd	r20, Y+55	; 0x37
     49a:	58 ad       	ldd	r21, Y+56	; 0x38
     49c:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
     4a0:	7b 01       	movw	r14, r22
     4a2:	8c 01       	movw	r16, r24
     4a4:	c6 01       	movw	r24, r12
     4a6:	b5 01       	movw	r22, r10
     4a8:	2d a9       	ldd	r18, Y+53	; 0x35
     4aa:	3e a9       	ldd	r19, Y+54	; 0x36
     4ac:	4f a9       	ldd	r20, Y+55	; 0x37
     4ae:	58 ad       	ldd	r21, Y+56	; 0x38
     4b0:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
     4b4:	c9 01       	movw	r24, r18
     4b6:	da 01       	movw	r26, r20
     4b8:	5c 01       	movw	r10, r24
     4ba:	6d 01       	movw	r12, r26
     4bc:	c6 01       	movw	r24, r12
     4be:	b5 01       	movw	r22, r10
     4c0:	29 ad       	ldd	r18, Y+57	; 0x39
     4c2:	3a ad       	ldd	r19, Y+58	; 0x3a
     4c4:	4b ad       	ldd	r20, Y+59	; 0x3b
     4c6:	5c ad       	ldd	r21, Y+60	; 0x3c
     4c8:	0e 94 51 30 	call	0x60a2	; 0x60a2 <__mulsi3>
     4cc:	9b 01       	movw	r18, r22
     4ce:	ac 01       	movw	r20, r24
     4d0:	87 01       	movw	r16, r14
     4d2:	ff 24       	eor	r15, r15
     4d4:	ee 24       	eor	r14, r14
     4d6:	8d a5       	ldd	r24, Y+45	; 0x2d
     4d8:	9e a5       	ldd	r25, Y+46	; 0x2e
     4da:	af a5       	ldd	r26, Y+47	; 0x2f
     4dc:	b8 a9       	ldd	r27, Y+48	; 0x30
     4de:	a0 70       	andi	r26, 0x00	; 0
     4e0:	b0 70       	andi	r27, 0x00	; 0
     4e2:	e8 2a       	or	r14, r24
     4e4:	f9 2a       	or	r15, r25
     4e6:	0a 2b       	or	r16, r26
     4e8:	1b 2b       	or	r17, r27
     4ea:	e2 16       	cp	r14, r18
     4ec:	f3 06       	cpc	r15, r19
     4ee:	04 07       	cpc	r16, r20
     4f0:	15 07       	cpc	r17, r21
     4f2:	c0 f4       	brcc	.+48     	; 0x524 <__udivdi3+0x2ea>
     4f4:	08 94       	sec
     4f6:	a1 08       	sbc	r10, r1
     4f8:	b1 08       	sbc	r11, r1
     4fa:	c1 08       	sbc	r12, r1
     4fc:	d1 08       	sbc	r13, r1
     4fe:	e2 0c       	add	r14, r2
     500:	f3 1c       	adc	r15, r3
     502:	04 1d       	adc	r16, r4
     504:	15 1d       	adc	r17, r5
     506:	e2 14       	cp	r14, r2
     508:	f3 04       	cpc	r15, r3
     50a:	04 05       	cpc	r16, r4
     50c:	15 05       	cpc	r17, r5
     50e:	50 f0       	brcs	.+20     	; 0x524 <__udivdi3+0x2ea>
     510:	e2 16       	cp	r14, r18
     512:	f3 06       	cpc	r15, r19
     514:	04 07       	cpc	r16, r20
     516:	15 07       	cpc	r17, r21
     518:	28 f4       	brcc	.+10     	; 0x524 <__udivdi3+0x2ea>
     51a:	08 94       	sec
     51c:	a1 08       	sbc	r10, r1
     51e:	b1 08       	sbc	r11, r1
     520:	c1 08       	sbc	r12, r1
     522:	d1 08       	sbc	r13, r1
     524:	d3 01       	movw	r26, r6
     526:	99 27       	eor	r25, r25
     528:	88 27       	eor	r24, r24
     52a:	86 01       	movw	r16, r12
     52c:	75 01       	movw	r14, r10
     52e:	e8 2a       	or	r14, r24
     530:	f9 2a       	or	r15, r25
     532:	0a 2b       	or	r16, r26
     534:	1b 2b       	or	r17, r27
     536:	e9 aa       	std	Y+49, r14	; 0x31
     538:	fa aa       	std	Y+50, r15	; 0x32
     53a:	0b ab       	std	Y+51, r16	; 0x33
     53c:	1c ab       	std	Y+52, r17	; 0x34
     53e:	cf c4       	rjmp	.+2462   	; 0xede <__stack+0x67f>
     540:	21 14       	cp	r2, r1
     542:	31 04       	cpc	r3, r1
     544:	41 04       	cpc	r4, r1
     546:	51 04       	cpc	r5, r1
     548:	71 f4       	brne	.+28     	; 0x566 <__udivdi3+0x32c>
     54a:	61 e0       	ldi	r22, 0x01	; 1
     54c:	70 e0       	ldi	r23, 0x00	; 0
     54e:	80 e0       	ldi	r24, 0x00	; 0
     550:	90 e0       	ldi	r25, 0x00	; 0
     552:	20 e0       	ldi	r18, 0x00	; 0
     554:	30 e0       	ldi	r19, 0x00	; 0
     556:	40 e0       	ldi	r20, 0x00	; 0
     558:	50 e0       	ldi	r21, 0x00	; 0
     55a:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
     55e:	c9 01       	movw	r24, r18
     560:	da 01       	movw	r26, r20
     562:	1c 01       	movw	r2, r24
     564:	2d 01       	movw	r4, r26
     566:	00 e0       	ldi	r16, 0x00	; 0
     568:	20 16       	cp	r2, r16
     56a:	00 e0       	ldi	r16, 0x00	; 0
     56c:	30 06       	cpc	r3, r16
     56e:	01 e0       	ldi	r16, 0x01	; 1
     570:	40 06       	cpc	r4, r16
     572:	00 e0       	ldi	r16, 0x00	; 0
     574:	50 06       	cpc	r5, r16
     576:	88 f4       	brcc	.+34     	; 0x59a <__udivdi3+0x360>
     578:	1f ef       	ldi	r17, 0xFF	; 255
     57a:	21 16       	cp	r2, r17
     57c:	31 04       	cpc	r3, r1
     57e:	41 04       	cpc	r4, r1
     580:	51 04       	cpc	r5, r1
     582:	31 f0       	breq	.+12     	; 0x590 <__udivdi3+0x356>
     584:	28 f0       	brcs	.+10     	; 0x590 <__udivdi3+0x356>
     586:	48 e0       	ldi	r20, 0x08	; 8
     588:	50 e0       	ldi	r21, 0x00	; 0
     58a:	60 e0       	ldi	r22, 0x00	; 0
     58c:	70 e0       	ldi	r23, 0x00	; 0
     58e:	17 c0       	rjmp	.+46     	; 0x5be <__udivdi3+0x384>
     590:	40 e0       	ldi	r20, 0x00	; 0
     592:	50 e0       	ldi	r21, 0x00	; 0
     594:	60 e0       	ldi	r22, 0x00	; 0
     596:	70 e0       	ldi	r23, 0x00	; 0
     598:	12 c0       	rjmp	.+36     	; 0x5be <__udivdi3+0x384>
     59a:	20 e0       	ldi	r18, 0x00	; 0
     59c:	22 16       	cp	r2, r18
     59e:	20 e0       	ldi	r18, 0x00	; 0
     5a0:	32 06       	cpc	r3, r18
     5a2:	20 e0       	ldi	r18, 0x00	; 0
     5a4:	42 06       	cpc	r4, r18
     5a6:	21 e0       	ldi	r18, 0x01	; 1
     5a8:	52 06       	cpc	r5, r18
     5aa:	28 f0       	brcs	.+10     	; 0x5b6 <__udivdi3+0x37c>
     5ac:	48 e1       	ldi	r20, 0x18	; 24
     5ae:	50 e0       	ldi	r21, 0x00	; 0
     5b0:	60 e0       	ldi	r22, 0x00	; 0
     5b2:	70 e0       	ldi	r23, 0x00	; 0
     5b4:	04 c0       	rjmp	.+8      	; 0x5be <__udivdi3+0x384>
     5b6:	40 e1       	ldi	r20, 0x10	; 16
     5b8:	50 e0       	ldi	r21, 0x00	; 0
     5ba:	60 e0       	ldi	r22, 0x00	; 0
     5bc:	70 e0       	ldi	r23, 0x00	; 0
     5be:	d2 01       	movw	r26, r4
     5c0:	c1 01       	movw	r24, r2
     5c2:	04 2e       	mov	r0, r20
     5c4:	04 c0       	rjmp	.+8      	; 0x5ce <__udivdi3+0x394>
     5c6:	b6 95       	lsr	r27
     5c8:	a7 95       	ror	r26
     5ca:	97 95       	ror	r25
     5cc:	87 95       	ror	r24
     5ce:	0a 94       	dec	r0
     5d0:	d2 f7       	brpl	.-12     	; 0x5c6 <__udivdi3+0x38c>
     5d2:	88 59       	subi	r24, 0x98	; 152
     5d4:	9f 4f       	sbci	r25, 0xFF	; 255
     5d6:	dc 01       	movw	r26, r24
     5d8:	2c 91       	ld	r18, X
     5da:	e0 e2       	ldi	r30, 0x20	; 32
     5dc:	ee 2e       	mov	r14, r30
     5de:	f1 2c       	mov	r15, r1
     5e0:	01 2d       	mov	r16, r1
     5e2:	11 2d       	mov	r17, r1
     5e4:	d8 01       	movw	r26, r16
     5e6:	c7 01       	movw	r24, r14
     5e8:	84 1b       	sub	r24, r20
     5ea:	95 0b       	sbc	r25, r21
     5ec:	a6 0b       	sbc	r26, r22
     5ee:	b7 0b       	sbc	r27, r23
     5f0:	82 1b       	sub	r24, r18
     5f2:	91 09       	sbc	r25, r1
     5f4:	a1 09       	sbc	r26, r1
     5f6:	b1 09       	sbc	r27, r1
     5f8:	00 97       	sbiw	r24, 0x00	; 0
     5fa:	a1 05       	cpc	r26, r1
     5fc:	b1 05       	cpc	r27, r1
     5fe:	61 f4       	brne	.+24     	; 0x618 <__udivdi3+0x3de>
     600:	64 01       	movw	r12, r8
     602:	53 01       	movw	r10, r6
     604:	a2 18       	sub	r10, r2
     606:	b3 08       	sbc	r11, r3
     608:	c4 08       	sbc	r12, r4
     60a:	d5 08       	sbc	r13, r5
     60c:	31 e0       	ldi	r19, 0x01	; 1
     60e:	63 2e       	mov	r6, r19
     610:	71 2c       	mov	r7, r1
     612:	81 2c       	mov	r8, r1
     614:	91 2c       	mov	r9, r1
     616:	1e c1       	rjmp	.+572    	; 0x854 <__udivdi3+0x61a>
     618:	6f 96       	adiw	r28, 0x1f	; 31
     61a:	8f af       	std	Y+63, r24	; 0x3f
     61c:	6f 97       	sbiw	r28, 0x1f	; 31
     61e:	08 2e       	mov	r0, r24
     620:	04 c0       	rjmp	.+8      	; 0x62a <__udivdi3+0x3f0>
     622:	22 0c       	add	r2, r2
     624:	33 1c       	adc	r3, r3
     626:	44 1c       	adc	r4, r4
     628:	55 1c       	adc	r5, r5
     62a:	0a 94       	dec	r0
     62c:	d2 f7       	brpl	.-12     	; 0x622 <__udivdi3+0x3e8>
     62e:	ee 2d       	mov	r30, r14
     630:	e8 1b       	sub	r30, r24
     632:	64 01       	movw	r12, r8
     634:	53 01       	movw	r10, r6
     636:	0e 2e       	mov	r0, r30
     638:	04 c0       	rjmp	.+8      	; 0x642 <__udivdi3+0x408>
     63a:	d6 94       	lsr	r13
     63c:	c7 94       	ror	r12
     63e:	b7 94       	ror	r11
     640:	a7 94       	ror	r10
     642:	0a 94       	dec	r0
     644:	d2 f7       	brpl	.-12     	; 0x63a <__udivdi3+0x400>
     646:	a4 01       	movw	r20, r8
     648:	93 01       	movw	r18, r6
     64a:	6f 96       	adiw	r28, 0x1f	; 31
     64c:	0f ac       	ldd	r0, Y+63	; 0x3f
     64e:	6f 97       	sbiw	r28, 0x1f	; 31
     650:	04 c0       	rjmp	.+8      	; 0x65a <__udivdi3+0x420>
     652:	22 0f       	add	r18, r18
     654:	33 1f       	adc	r19, r19
     656:	44 1f       	adc	r20, r20
     658:	55 1f       	adc	r21, r21
     65a:	0a 94       	dec	r0
     65c:	d2 f7       	brpl	.-12     	; 0x652 <__udivdi3+0x418>
     65e:	6d a4       	ldd	r6, Y+45	; 0x2d
     660:	7e a4       	ldd	r7, Y+46	; 0x2e
     662:	8f a4       	ldd	r8, Y+47	; 0x2f
     664:	98 a8       	ldd	r9, Y+48	; 0x30
     666:	0e 2e       	mov	r0, r30
     668:	04 c0       	rjmp	.+8      	; 0x672 <__udivdi3+0x438>
     66a:	96 94       	lsr	r9
     66c:	87 94       	ror	r8
     66e:	77 94       	ror	r7
     670:	67 94       	ror	r6
     672:	0a 94       	dec	r0
     674:	d2 f7       	brpl	.-12     	; 0x66a <__udivdi3+0x430>
     676:	84 01       	movw	r16, r8
     678:	73 01       	movw	r14, r6
     67a:	e2 2a       	or	r14, r18
     67c:	f3 2a       	or	r15, r19
     67e:	04 2b       	or	r16, r20
     680:	15 2b       	or	r17, r21
     682:	e9 a6       	std	Y+41, r14	; 0x29
     684:	fa a6       	std	Y+42, r15	; 0x2a
     686:	0b a7       	std	Y+43, r16	; 0x2b
     688:	1c a7       	std	Y+44, r17	; 0x2c
     68a:	32 01       	movw	r6, r4
     68c:	88 24       	eor	r8, r8
     68e:	99 24       	eor	r9, r9
     690:	92 01       	movw	r18, r4
     692:	81 01       	movw	r16, r2
     694:	20 70       	andi	r18, 0x00	; 0
     696:	30 70       	andi	r19, 0x00	; 0
     698:	21 96       	adiw	r28, 0x01	; 1
     69a:	0c af       	std	Y+60, r16	; 0x3c
     69c:	1d af       	std	Y+61, r17	; 0x3d
     69e:	2e af       	std	Y+62, r18	; 0x3e
     6a0:	3f af       	std	Y+63, r19	; 0x3f
     6a2:	21 97       	sbiw	r28, 0x01	; 1
     6a4:	c6 01       	movw	r24, r12
     6a6:	b5 01       	movw	r22, r10
     6a8:	a4 01       	movw	r20, r8
     6aa:	93 01       	movw	r18, r6
     6ac:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
     6b0:	7b 01       	movw	r14, r22
     6b2:	8c 01       	movw	r16, r24
     6b4:	c6 01       	movw	r24, r12
     6b6:	b5 01       	movw	r22, r10
     6b8:	a4 01       	movw	r20, r8
     6ba:	93 01       	movw	r18, r6
     6bc:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
     6c0:	c9 01       	movw	r24, r18
     6c2:	da 01       	movw	r26, r20
     6c4:	25 96       	adiw	r28, 0x05	; 5
     6c6:	8c af       	std	Y+60, r24	; 0x3c
     6c8:	9d af       	std	Y+61, r25	; 0x3d
     6ca:	ae af       	std	Y+62, r26	; 0x3e
     6cc:	bf af       	std	Y+63, r27	; 0x3f
     6ce:	25 97       	sbiw	r28, 0x05	; 5
     6d0:	bc 01       	movw	r22, r24
     6d2:	cd 01       	movw	r24, r26
     6d4:	21 96       	adiw	r28, 0x01	; 1
     6d6:	2c ad       	ldd	r18, Y+60	; 0x3c
     6d8:	3d ad       	ldd	r19, Y+61	; 0x3d
     6da:	4e ad       	ldd	r20, Y+62	; 0x3e
     6dc:	5f ad       	ldd	r21, Y+63	; 0x3f
     6de:	21 97       	sbiw	r28, 0x01	; 1
     6e0:	0e 94 51 30 	call	0x60a2	; 0x60a2 <__mulsi3>
     6e4:	9b 01       	movw	r18, r22
     6e6:	ac 01       	movw	r20, r24
     6e8:	87 01       	movw	r16, r14
     6ea:	ff 24       	eor	r15, r15
     6ec:	ee 24       	eor	r14, r14
     6ee:	a9 a4       	ldd	r10, Y+41	; 0x29
     6f0:	ba a4       	ldd	r11, Y+42	; 0x2a
     6f2:	cb a4       	ldd	r12, Y+43	; 0x2b
     6f4:	dc a4       	ldd	r13, Y+44	; 0x2c
     6f6:	c6 01       	movw	r24, r12
     6f8:	aa 27       	eor	r26, r26
     6fa:	bb 27       	eor	r27, r27
     6fc:	5c 01       	movw	r10, r24
     6fe:	6d 01       	movw	r12, r26
     700:	ae 28       	or	r10, r14
     702:	bf 28       	or	r11, r15
     704:	c0 2a       	or	r12, r16
     706:	d1 2a       	or	r13, r17
     708:	a2 16       	cp	r10, r18
     70a:	b3 06       	cpc	r11, r19
     70c:	c4 06       	cpc	r12, r20
     70e:	d5 06       	cpc	r13, r21
     710:	60 f5       	brcc	.+88     	; 0x76a <__udivdi3+0x530>
     712:	25 96       	adiw	r28, 0x05	; 5
     714:	6c ad       	ldd	r22, Y+60	; 0x3c
     716:	7d ad       	ldd	r23, Y+61	; 0x3d
     718:	8e ad       	ldd	r24, Y+62	; 0x3e
     71a:	9f ad       	ldd	r25, Y+63	; 0x3f
     71c:	25 97       	sbiw	r28, 0x05	; 5
     71e:	61 50       	subi	r22, 0x01	; 1
     720:	70 40       	sbci	r23, 0x00	; 0
     722:	80 40       	sbci	r24, 0x00	; 0
     724:	90 40       	sbci	r25, 0x00	; 0
     726:	25 96       	adiw	r28, 0x05	; 5
     728:	6c af       	std	Y+60, r22	; 0x3c
     72a:	7d af       	std	Y+61, r23	; 0x3d
     72c:	8e af       	std	Y+62, r24	; 0x3e
     72e:	9f af       	std	Y+63, r25	; 0x3f
     730:	25 97       	sbiw	r28, 0x05	; 5
     732:	a2 0c       	add	r10, r2
     734:	b3 1c       	adc	r11, r3
     736:	c4 1c       	adc	r12, r4
     738:	d5 1c       	adc	r13, r5
     73a:	a2 14       	cp	r10, r2
     73c:	b3 04       	cpc	r11, r3
     73e:	c4 04       	cpc	r12, r4
     740:	d5 04       	cpc	r13, r5
     742:	98 f0       	brcs	.+38     	; 0x76a <__udivdi3+0x530>
     744:	a2 16       	cp	r10, r18
     746:	b3 06       	cpc	r11, r19
     748:	c4 06       	cpc	r12, r20
     74a:	d5 06       	cpc	r13, r21
     74c:	70 f4       	brcc	.+28     	; 0x76a <__udivdi3+0x530>
     74e:	61 50       	subi	r22, 0x01	; 1
     750:	70 40       	sbci	r23, 0x00	; 0
     752:	80 40       	sbci	r24, 0x00	; 0
     754:	90 40       	sbci	r25, 0x00	; 0
     756:	25 96       	adiw	r28, 0x05	; 5
     758:	6c af       	std	Y+60, r22	; 0x3c
     75a:	7d af       	std	Y+61, r23	; 0x3d
     75c:	8e af       	std	Y+62, r24	; 0x3e
     75e:	9f af       	std	Y+63, r25	; 0x3f
     760:	25 97       	sbiw	r28, 0x05	; 5
     762:	a2 0c       	add	r10, r2
     764:	b3 1c       	adc	r11, r3
     766:	c4 1c       	adc	r12, r4
     768:	d5 1c       	adc	r13, r5
     76a:	a2 1a       	sub	r10, r18
     76c:	b3 0a       	sbc	r11, r19
     76e:	c4 0a       	sbc	r12, r20
     770:	d5 0a       	sbc	r13, r21
     772:	c6 01       	movw	r24, r12
     774:	b5 01       	movw	r22, r10
     776:	a4 01       	movw	r20, r8
     778:	93 01       	movw	r18, r6
     77a:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
     77e:	7b 01       	movw	r14, r22
     780:	8c 01       	movw	r16, r24
     782:	c6 01       	movw	r24, r12
     784:	b5 01       	movw	r22, r10
     786:	a4 01       	movw	r20, r8
     788:	93 01       	movw	r18, r6
     78a:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
     78e:	c9 01       	movw	r24, r18
     790:	da 01       	movw	r26, r20
     792:	3c 01       	movw	r6, r24
     794:	4d 01       	movw	r8, r26
     796:	c4 01       	movw	r24, r8
     798:	b3 01       	movw	r22, r6
     79a:	21 96       	adiw	r28, 0x01	; 1
     79c:	2c ad       	ldd	r18, Y+60	; 0x3c
     79e:	3d ad       	ldd	r19, Y+61	; 0x3d
     7a0:	4e ad       	ldd	r20, Y+62	; 0x3e
     7a2:	5f ad       	ldd	r21, Y+63	; 0x3f
     7a4:	21 97       	sbiw	r28, 0x01	; 1
     7a6:	0e 94 51 30 	call	0x60a2	; 0x60a2 <__mulsi3>
     7aa:	9b 01       	movw	r18, r22
     7ac:	ac 01       	movw	r20, r24
     7ae:	87 01       	movw	r16, r14
     7b0:	ff 24       	eor	r15, r15
     7b2:	ee 24       	eor	r14, r14
     7b4:	89 a5       	ldd	r24, Y+41	; 0x29
     7b6:	9a a5       	ldd	r25, Y+42	; 0x2a
     7b8:	ab a5       	ldd	r26, Y+43	; 0x2b
     7ba:	bc a5       	ldd	r27, Y+44	; 0x2c
     7bc:	a0 70       	andi	r26, 0x00	; 0
     7be:	b0 70       	andi	r27, 0x00	; 0
     7c0:	57 01       	movw	r10, r14
     7c2:	68 01       	movw	r12, r16
     7c4:	a8 2a       	or	r10, r24
     7c6:	b9 2a       	or	r11, r25
     7c8:	ca 2a       	or	r12, r26
     7ca:	db 2a       	or	r13, r27
     7cc:	a2 16       	cp	r10, r18
     7ce:	b3 06       	cpc	r11, r19
     7d0:	c4 06       	cpc	r12, r20
     7d2:	d5 06       	cpc	r13, r21
     7d4:	e0 f4       	brcc	.+56     	; 0x80e <__udivdi3+0x5d4>
     7d6:	08 94       	sec
     7d8:	61 08       	sbc	r6, r1
     7da:	71 08       	sbc	r7, r1
     7dc:	81 08       	sbc	r8, r1
     7de:	91 08       	sbc	r9, r1
     7e0:	a2 0c       	add	r10, r2
     7e2:	b3 1c       	adc	r11, r3
     7e4:	c4 1c       	adc	r12, r4
     7e6:	d5 1c       	adc	r13, r5
     7e8:	a2 14       	cp	r10, r2
     7ea:	b3 04       	cpc	r11, r3
     7ec:	c4 04       	cpc	r12, r4
     7ee:	d5 04       	cpc	r13, r5
     7f0:	70 f0       	brcs	.+28     	; 0x80e <__udivdi3+0x5d4>
     7f2:	a2 16       	cp	r10, r18
     7f4:	b3 06       	cpc	r11, r19
     7f6:	c4 06       	cpc	r12, r20
     7f8:	d5 06       	cpc	r13, r21
     7fa:	48 f4       	brcc	.+18     	; 0x80e <__udivdi3+0x5d4>
     7fc:	08 94       	sec
     7fe:	61 08       	sbc	r6, r1
     800:	71 08       	sbc	r7, r1
     802:	81 08       	sbc	r8, r1
     804:	91 08       	sbc	r9, r1
     806:	a2 0c       	add	r10, r2
     808:	b3 1c       	adc	r11, r3
     80a:	c4 1c       	adc	r12, r4
     80c:	d5 1c       	adc	r13, r5
     80e:	8d a5       	ldd	r24, Y+45	; 0x2d
     810:	9e a5       	ldd	r25, Y+46	; 0x2e
     812:	af a5       	ldd	r26, Y+47	; 0x2f
     814:	b8 a9       	ldd	r27, Y+48	; 0x30
     816:	6f 96       	adiw	r28, 0x1f	; 31
     818:	0f ac       	ldd	r0, Y+63	; 0x3f
     81a:	6f 97       	sbiw	r28, 0x1f	; 31
     81c:	04 c0       	rjmp	.+8      	; 0x826 <__udivdi3+0x5ec>
     81e:	88 0f       	add	r24, r24
     820:	99 1f       	adc	r25, r25
     822:	aa 1f       	adc	r26, r26
     824:	bb 1f       	adc	r27, r27
     826:	0a 94       	dec	r0
     828:	d2 f7       	brpl	.-12     	; 0x81e <__udivdi3+0x5e4>
     82a:	8d a7       	std	Y+45, r24	; 0x2d
     82c:	9e a7       	std	Y+46, r25	; 0x2e
     82e:	af a7       	std	Y+47, r26	; 0x2f
     830:	b8 ab       	std	Y+48, r27	; 0x30
     832:	a2 1a       	sub	r10, r18
     834:	b3 0a       	sbc	r11, r19
     836:	c4 0a       	sbc	r12, r20
     838:	d5 0a       	sbc	r13, r21
     83a:	25 96       	adiw	r28, 0x05	; 5
     83c:	ec ac       	ldd	r14, Y+60	; 0x3c
     83e:	fd ac       	ldd	r15, Y+61	; 0x3d
     840:	0e ad       	ldd	r16, Y+62	; 0x3e
     842:	1f ad       	ldd	r17, Y+63	; 0x3f
     844:	25 97       	sbiw	r28, 0x05	; 5
     846:	d7 01       	movw	r26, r14
     848:	99 27       	eor	r25, r25
     84a:	88 27       	eor	r24, r24
     84c:	68 2a       	or	r6, r24
     84e:	79 2a       	or	r7, r25
     850:	8a 2a       	or	r8, r26
     852:	9b 2a       	or	r9, r27
     854:	82 01       	movw	r16, r4
     856:	22 27       	eor	r18, r18
     858:	33 27       	eor	r19, r19
     85a:	29 96       	adiw	r28, 0x09	; 9
     85c:	0c af       	std	Y+60, r16	; 0x3c
     85e:	1d af       	std	Y+61, r17	; 0x3d
     860:	2e af       	std	Y+62, r18	; 0x3e
     862:	3f af       	std	Y+63, r19	; 0x3f
     864:	29 97       	sbiw	r28, 0x09	; 9
     866:	a2 01       	movw	r20, r4
     868:	91 01       	movw	r18, r2
     86a:	40 70       	andi	r20, 0x00	; 0
     86c:	50 70       	andi	r21, 0x00	; 0
     86e:	2d 96       	adiw	r28, 0x0d	; 13
     870:	2c af       	std	Y+60, r18	; 0x3c
     872:	3d af       	std	Y+61, r19	; 0x3d
     874:	4e af       	std	Y+62, r20	; 0x3e
     876:	5f af       	std	Y+63, r21	; 0x3f
     878:	2d 97       	sbiw	r28, 0x0d	; 13
     87a:	c6 01       	movw	r24, r12
     87c:	b5 01       	movw	r22, r10
     87e:	29 96       	adiw	r28, 0x09	; 9
     880:	2c ad       	ldd	r18, Y+60	; 0x3c
     882:	3d ad       	ldd	r19, Y+61	; 0x3d
     884:	4e ad       	ldd	r20, Y+62	; 0x3e
     886:	5f ad       	ldd	r21, Y+63	; 0x3f
     888:	29 97       	sbiw	r28, 0x09	; 9
     88a:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
     88e:	7b 01       	movw	r14, r22
     890:	8c 01       	movw	r16, r24
     892:	c6 01       	movw	r24, r12
     894:	b5 01       	movw	r22, r10
     896:	29 96       	adiw	r28, 0x09	; 9
     898:	2c ad       	ldd	r18, Y+60	; 0x3c
     89a:	3d ad       	ldd	r19, Y+61	; 0x3d
     89c:	4e ad       	ldd	r20, Y+62	; 0x3e
     89e:	5f ad       	ldd	r21, Y+63	; 0x3f
     8a0:	29 97       	sbiw	r28, 0x09	; 9
     8a2:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
     8a6:	c9 01       	movw	r24, r18
     8a8:	da 01       	movw	r26, r20
     8aa:	61 96       	adiw	r28, 0x11	; 17
     8ac:	8c af       	std	Y+60, r24	; 0x3c
     8ae:	9d af       	std	Y+61, r25	; 0x3d
     8b0:	ae af       	std	Y+62, r26	; 0x3e
     8b2:	bf af       	std	Y+63, r27	; 0x3f
     8b4:	61 97       	sbiw	r28, 0x11	; 17
     8b6:	bc 01       	movw	r22, r24
     8b8:	cd 01       	movw	r24, r26
     8ba:	2d 96       	adiw	r28, 0x0d	; 13
     8bc:	2c ad       	ldd	r18, Y+60	; 0x3c
     8be:	3d ad       	ldd	r19, Y+61	; 0x3d
     8c0:	4e ad       	ldd	r20, Y+62	; 0x3e
     8c2:	5f ad       	ldd	r21, Y+63	; 0x3f
     8c4:	2d 97       	sbiw	r28, 0x0d	; 13
     8c6:	0e 94 51 30 	call	0x60a2	; 0x60a2 <__mulsi3>
     8ca:	9b 01       	movw	r18, r22
     8cc:	ac 01       	movw	r20, r24
     8ce:	87 01       	movw	r16, r14
     8d0:	ff 24       	eor	r15, r15
     8d2:	ee 24       	eor	r14, r14
     8d4:	ad a4       	ldd	r10, Y+45	; 0x2d
     8d6:	be a4       	ldd	r11, Y+46	; 0x2e
     8d8:	cf a4       	ldd	r12, Y+47	; 0x2f
     8da:	d8 a8       	ldd	r13, Y+48	; 0x30
     8dc:	c6 01       	movw	r24, r12
     8de:	aa 27       	eor	r26, r26
     8e0:	bb 27       	eor	r27, r27
     8e2:	57 01       	movw	r10, r14
     8e4:	68 01       	movw	r12, r16
     8e6:	a8 2a       	or	r10, r24
     8e8:	b9 2a       	or	r11, r25
     8ea:	ca 2a       	or	r12, r26
     8ec:	db 2a       	or	r13, r27
     8ee:	a2 16       	cp	r10, r18
     8f0:	b3 06       	cpc	r11, r19
     8f2:	c4 06       	cpc	r12, r20
     8f4:	d5 06       	cpc	r13, r21
     8f6:	60 f5       	brcc	.+88     	; 0x950 <__stack+0xf1>
     8f8:	61 96       	adiw	r28, 0x11	; 17
     8fa:	6c ad       	ldd	r22, Y+60	; 0x3c
     8fc:	7d ad       	ldd	r23, Y+61	; 0x3d
     8fe:	8e ad       	ldd	r24, Y+62	; 0x3e
     900:	9f ad       	ldd	r25, Y+63	; 0x3f
     902:	61 97       	sbiw	r28, 0x11	; 17
     904:	61 50       	subi	r22, 0x01	; 1
     906:	70 40       	sbci	r23, 0x00	; 0
     908:	80 40       	sbci	r24, 0x00	; 0
     90a:	90 40       	sbci	r25, 0x00	; 0
     90c:	61 96       	adiw	r28, 0x11	; 17
     90e:	6c af       	std	Y+60, r22	; 0x3c
     910:	7d af       	std	Y+61, r23	; 0x3d
     912:	8e af       	std	Y+62, r24	; 0x3e
     914:	9f af       	std	Y+63, r25	; 0x3f
     916:	61 97       	sbiw	r28, 0x11	; 17
     918:	a2 0c       	add	r10, r2
     91a:	b3 1c       	adc	r11, r3
     91c:	c4 1c       	adc	r12, r4
     91e:	d5 1c       	adc	r13, r5
     920:	a2 14       	cp	r10, r2
     922:	b3 04       	cpc	r11, r3
     924:	c4 04       	cpc	r12, r4
     926:	d5 04       	cpc	r13, r5
     928:	98 f0       	brcs	.+38     	; 0x950 <__stack+0xf1>
     92a:	a2 16       	cp	r10, r18
     92c:	b3 06       	cpc	r11, r19
     92e:	c4 06       	cpc	r12, r20
     930:	d5 06       	cpc	r13, r21
     932:	70 f4       	brcc	.+28     	; 0x950 <__stack+0xf1>
     934:	61 50       	subi	r22, 0x01	; 1
     936:	70 40       	sbci	r23, 0x00	; 0
     938:	80 40       	sbci	r24, 0x00	; 0
     93a:	90 40       	sbci	r25, 0x00	; 0
     93c:	61 96       	adiw	r28, 0x11	; 17
     93e:	6c af       	std	Y+60, r22	; 0x3c
     940:	7d af       	std	Y+61, r23	; 0x3d
     942:	8e af       	std	Y+62, r24	; 0x3e
     944:	9f af       	std	Y+63, r25	; 0x3f
     946:	61 97       	sbiw	r28, 0x11	; 17
     948:	a2 0c       	add	r10, r2
     94a:	b3 1c       	adc	r11, r3
     94c:	c4 1c       	adc	r12, r4
     94e:	d5 1c       	adc	r13, r5
     950:	a2 1a       	sub	r10, r18
     952:	b3 0a       	sbc	r11, r19
     954:	c4 0a       	sbc	r12, r20
     956:	d5 0a       	sbc	r13, r21
     958:	c6 01       	movw	r24, r12
     95a:	b5 01       	movw	r22, r10
     95c:	29 96       	adiw	r28, 0x09	; 9
     95e:	2c ad       	ldd	r18, Y+60	; 0x3c
     960:	3d ad       	ldd	r19, Y+61	; 0x3d
     962:	4e ad       	ldd	r20, Y+62	; 0x3e
     964:	5f ad       	ldd	r21, Y+63	; 0x3f
     966:	29 97       	sbiw	r28, 0x09	; 9
     968:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
     96c:	7b 01       	movw	r14, r22
     96e:	8c 01       	movw	r16, r24
     970:	c6 01       	movw	r24, r12
     972:	b5 01       	movw	r22, r10
     974:	29 96       	adiw	r28, 0x09	; 9
     976:	2c ad       	ldd	r18, Y+60	; 0x3c
     978:	3d ad       	ldd	r19, Y+61	; 0x3d
     97a:	4e ad       	ldd	r20, Y+62	; 0x3e
     97c:	5f ad       	ldd	r21, Y+63	; 0x3f
     97e:	29 97       	sbiw	r28, 0x09	; 9
     980:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
     984:	c9 01       	movw	r24, r18
     986:	da 01       	movw	r26, r20
     988:	5c 01       	movw	r10, r24
     98a:	6d 01       	movw	r12, r26
     98c:	c6 01       	movw	r24, r12
     98e:	b5 01       	movw	r22, r10
     990:	2d 96       	adiw	r28, 0x0d	; 13
     992:	2c ad       	ldd	r18, Y+60	; 0x3c
     994:	3d ad       	ldd	r19, Y+61	; 0x3d
     996:	4e ad       	ldd	r20, Y+62	; 0x3e
     998:	5f ad       	ldd	r21, Y+63	; 0x3f
     99a:	2d 97       	sbiw	r28, 0x0d	; 13
     99c:	0e 94 51 30 	call	0x60a2	; 0x60a2 <__mulsi3>
     9a0:	9b 01       	movw	r18, r22
     9a2:	ac 01       	movw	r20, r24
     9a4:	87 01       	movw	r16, r14
     9a6:	ff 24       	eor	r15, r15
     9a8:	ee 24       	eor	r14, r14
     9aa:	8d a5       	ldd	r24, Y+45	; 0x2d
     9ac:	9e a5       	ldd	r25, Y+46	; 0x2e
     9ae:	af a5       	ldd	r26, Y+47	; 0x2f
     9b0:	b8 a9       	ldd	r27, Y+48	; 0x30
     9b2:	a0 70       	andi	r26, 0x00	; 0
     9b4:	b0 70       	andi	r27, 0x00	; 0
     9b6:	e8 2a       	or	r14, r24
     9b8:	f9 2a       	or	r15, r25
     9ba:	0a 2b       	or	r16, r26
     9bc:	1b 2b       	or	r17, r27
     9be:	e2 16       	cp	r14, r18
     9c0:	f3 06       	cpc	r15, r19
     9c2:	04 07       	cpc	r16, r20
     9c4:	15 07       	cpc	r17, r21
     9c6:	c0 f4       	brcc	.+48     	; 0x9f8 <__stack+0x199>
     9c8:	08 94       	sec
     9ca:	a1 08       	sbc	r10, r1
     9cc:	b1 08       	sbc	r11, r1
     9ce:	c1 08       	sbc	r12, r1
     9d0:	d1 08       	sbc	r13, r1
     9d2:	e2 0c       	add	r14, r2
     9d4:	f3 1c       	adc	r15, r3
     9d6:	04 1d       	adc	r16, r4
     9d8:	15 1d       	adc	r17, r5
     9da:	e2 14       	cp	r14, r2
     9dc:	f3 04       	cpc	r15, r3
     9de:	04 05       	cpc	r16, r4
     9e0:	15 05       	cpc	r17, r5
     9e2:	50 f0       	brcs	.+20     	; 0x9f8 <__stack+0x199>
     9e4:	e2 16       	cp	r14, r18
     9e6:	f3 06       	cpc	r15, r19
     9e8:	04 07       	cpc	r16, r20
     9ea:	15 07       	cpc	r17, r21
     9ec:	28 f4       	brcc	.+10     	; 0x9f8 <__stack+0x199>
     9ee:	08 94       	sec
     9f0:	a1 08       	sbc	r10, r1
     9f2:	b1 08       	sbc	r11, r1
     9f4:	c1 08       	sbc	r12, r1
     9f6:	d1 08       	sbc	r13, r1
     9f8:	61 96       	adiw	r28, 0x11	; 17
     9fa:	ec ac       	ldd	r14, Y+60	; 0x3c
     9fc:	fd ac       	ldd	r15, Y+61	; 0x3d
     9fe:	0e ad       	ldd	r16, Y+62	; 0x3e
     a00:	1f ad       	ldd	r17, Y+63	; 0x3f
     a02:	61 97       	sbiw	r28, 0x11	; 17
     a04:	d7 01       	movw	r26, r14
     a06:	99 27       	eor	r25, r25
     a08:	88 27       	eor	r24, r24
     a0a:	96 01       	movw	r18, r12
     a0c:	85 01       	movw	r16, r10
     a0e:	08 2b       	or	r16, r24
     a10:	19 2b       	or	r17, r25
     a12:	2a 2b       	or	r18, r26
     a14:	3b 2b       	or	r19, r27
     a16:	09 ab       	std	Y+49, r16	; 0x31
     a18:	1a ab       	std	Y+50, r17	; 0x32
     a1a:	2b ab       	std	Y+51, r18	; 0x33
     a1c:	3c ab       	std	Y+52, r19	; 0x34
     a1e:	62 c2       	rjmp	.+1220   	; 0xee4 <__stack+0x685>
     a20:	6e 14       	cp	r6, r14
     a22:	7f 04       	cpc	r7, r15
     a24:	80 06       	cpc	r8, r16
     a26:	91 06       	cpc	r9, r17
     a28:	08 f4       	brcc	.+2      	; 0xa2c <__stack+0x1cd>
     a2a:	51 c2       	rjmp	.+1186   	; 0xece <__stack+0x66f>
     a2c:	20 e0       	ldi	r18, 0x00	; 0
     a2e:	e2 16       	cp	r14, r18
     a30:	20 e0       	ldi	r18, 0x00	; 0
     a32:	f2 06       	cpc	r15, r18
     a34:	21 e0       	ldi	r18, 0x01	; 1
     a36:	02 07       	cpc	r16, r18
     a38:	20 e0       	ldi	r18, 0x00	; 0
     a3a:	12 07       	cpc	r17, r18
     a3c:	88 f4       	brcc	.+34     	; 0xa60 <__stack+0x201>
     a3e:	3f ef       	ldi	r19, 0xFF	; 255
     a40:	e3 16       	cp	r14, r19
     a42:	f1 04       	cpc	r15, r1
     a44:	01 05       	cpc	r16, r1
     a46:	11 05       	cpc	r17, r1
     a48:	31 f0       	breq	.+12     	; 0xa56 <__stack+0x1f7>
     a4a:	28 f0       	brcs	.+10     	; 0xa56 <__stack+0x1f7>
     a4c:	48 e0       	ldi	r20, 0x08	; 8
     a4e:	50 e0       	ldi	r21, 0x00	; 0
     a50:	60 e0       	ldi	r22, 0x00	; 0
     a52:	70 e0       	ldi	r23, 0x00	; 0
     a54:	17 c0       	rjmp	.+46     	; 0xa84 <__stack+0x225>
     a56:	40 e0       	ldi	r20, 0x00	; 0
     a58:	50 e0       	ldi	r21, 0x00	; 0
     a5a:	60 e0       	ldi	r22, 0x00	; 0
     a5c:	70 e0       	ldi	r23, 0x00	; 0
     a5e:	12 c0       	rjmp	.+36     	; 0xa84 <__stack+0x225>
     a60:	40 e0       	ldi	r20, 0x00	; 0
     a62:	e4 16       	cp	r14, r20
     a64:	40 e0       	ldi	r20, 0x00	; 0
     a66:	f4 06       	cpc	r15, r20
     a68:	40 e0       	ldi	r20, 0x00	; 0
     a6a:	04 07       	cpc	r16, r20
     a6c:	41 e0       	ldi	r20, 0x01	; 1
     a6e:	14 07       	cpc	r17, r20
     a70:	28 f0       	brcs	.+10     	; 0xa7c <__stack+0x21d>
     a72:	48 e1       	ldi	r20, 0x18	; 24
     a74:	50 e0       	ldi	r21, 0x00	; 0
     a76:	60 e0       	ldi	r22, 0x00	; 0
     a78:	70 e0       	ldi	r23, 0x00	; 0
     a7a:	04 c0       	rjmp	.+8      	; 0xa84 <__stack+0x225>
     a7c:	40 e1       	ldi	r20, 0x10	; 16
     a7e:	50 e0       	ldi	r21, 0x00	; 0
     a80:	60 e0       	ldi	r22, 0x00	; 0
     a82:	70 e0       	ldi	r23, 0x00	; 0
     a84:	d8 01       	movw	r26, r16
     a86:	c7 01       	movw	r24, r14
     a88:	04 2e       	mov	r0, r20
     a8a:	04 c0       	rjmp	.+8      	; 0xa94 <__stack+0x235>
     a8c:	b6 95       	lsr	r27
     a8e:	a7 95       	ror	r26
     a90:	97 95       	ror	r25
     a92:	87 95       	ror	r24
     a94:	0a 94       	dec	r0
     a96:	d2 f7       	brpl	.-12     	; 0xa8c <__stack+0x22d>
     a98:	88 59       	subi	r24, 0x98	; 152
     a9a:	9f 4f       	sbci	r25, 0xFF	; 255
     a9c:	dc 01       	movw	r26, r24
     a9e:	2c 91       	ld	r18, X
     aa0:	30 e2       	ldi	r19, 0x20	; 32
     aa2:	a3 2e       	mov	r10, r19
     aa4:	b1 2c       	mov	r11, r1
     aa6:	c1 2c       	mov	r12, r1
     aa8:	d1 2c       	mov	r13, r1
     aaa:	d6 01       	movw	r26, r12
     aac:	c5 01       	movw	r24, r10
     aae:	84 1b       	sub	r24, r20
     ab0:	95 0b       	sbc	r25, r21
     ab2:	a6 0b       	sbc	r26, r22
     ab4:	b7 0b       	sbc	r27, r23
     ab6:	82 1b       	sub	r24, r18
     ab8:	91 09       	sbc	r25, r1
     aba:	a1 09       	sbc	r26, r1
     abc:	b1 09       	sbc	r27, r1
     abe:	00 97       	sbiw	r24, 0x00	; 0
     ac0:	a1 05       	cpc	r26, r1
     ac2:	b1 05       	cpc	r27, r1
     ac4:	89 f4       	brne	.+34     	; 0xae8 <__stack+0x289>
     ac6:	e6 14       	cp	r14, r6
     ac8:	f7 04       	cpc	r15, r7
     aca:	08 05       	cpc	r16, r8
     acc:	19 05       	cpc	r17, r9
     ace:	08 f4       	brcc	.+2      	; 0xad2 <__stack+0x273>
     ad0:	f2 c1       	rjmp	.+996    	; 0xeb6 <__stack+0x657>
     ad2:	6d a4       	ldd	r6, Y+45	; 0x2d
     ad4:	7e a4       	ldd	r7, Y+46	; 0x2e
     ad6:	8f a4       	ldd	r8, Y+47	; 0x2f
     ad8:	98 a8       	ldd	r9, Y+48	; 0x30
     ada:	62 14       	cp	r6, r2
     adc:	73 04       	cpc	r7, r3
     ade:	84 04       	cpc	r8, r4
     ae0:	95 04       	cpc	r9, r5
     ae2:	08 f0       	brcs	.+2      	; 0xae6 <__stack+0x287>
     ae4:	e8 c1       	rjmp	.+976    	; 0xeb6 <__stack+0x657>
     ae6:	f3 c1       	rjmp	.+998    	; 0xece <__stack+0x66f>
     ae8:	6e 96       	adiw	r28, 0x1e	; 30
     aea:	8f af       	std	Y+63, r24	; 0x3f
     aec:	6e 97       	sbiw	r28, 0x1e	; 30
     aee:	08 2e       	mov	r0, r24
     af0:	04 c0       	rjmp	.+8      	; 0xafa <__stack+0x29b>
     af2:	ee 0c       	add	r14, r14
     af4:	ff 1c       	adc	r15, r15
     af6:	00 1f       	adc	r16, r16
     af8:	11 1f       	adc	r17, r17
     afa:	0a 94       	dec	r0
     afc:	d2 f7       	brpl	.-12     	; 0xaf2 <__stack+0x293>
     afe:	6a 2d       	mov	r22, r10
     b00:	68 1b       	sub	r22, r24
     b02:	d2 01       	movw	r26, r4
     b04:	c1 01       	movw	r24, r2
     b06:	06 2e       	mov	r0, r22
     b08:	04 c0       	rjmp	.+8      	; 0xb12 <__stack+0x2b3>
     b0a:	b6 95       	lsr	r27
     b0c:	a7 95       	ror	r26
     b0e:	97 95       	ror	r25
     b10:	87 95       	ror	r24
     b12:	0a 94       	dec	r0
     b14:	d2 f7       	brpl	.-12     	; 0xb0a <__stack+0x2ab>
     b16:	5c 01       	movw	r10, r24
     b18:	6d 01       	movw	r12, r26
     b1a:	ae 28       	or	r10, r14
     b1c:	bf 28       	or	r11, r15
     b1e:	c0 2a       	or	r12, r16
     b20:	d1 2a       	or	r13, r17
     b22:	ad a2       	std	Y+37, r10	; 0x25
     b24:	be a2       	std	Y+38, r11	; 0x26
     b26:	cf a2       	std	Y+39, r12	; 0x27
     b28:	d8 a6       	std	Y+40, r13	; 0x28
     b2a:	72 01       	movw	r14, r4
     b2c:	61 01       	movw	r12, r2
     b2e:	6e 96       	adiw	r28, 0x1e	; 30
     b30:	0f ac       	ldd	r0, Y+63	; 0x3f
     b32:	6e 97       	sbiw	r28, 0x1e	; 30
     b34:	04 c0       	rjmp	.+8      	; 0xb3e <__stack+0x2df>
     b36:	cc 0c       	add	r12, r12
     b38:	dd 1c       	adc	r13, r13
     b3a:	ee 1c       	adc	r14, r14
     b3c:	ff 1c       	adc	r15, r15
     b3e:	0a 94       	dec	r0
     b40:	d2 f7       	brpl	.-12     	; 0xb36 <__stack+0x2d7>
     b42:	c9 a2       	std	Y+33, r12	; 0x21
     b44:	da a2       	std	Y+34, r13	; 0x22
     b46:	eb a2       	std	Y+35, r14	; 0x23
     b48:	fc a2       	std	Y+36, r15	; 0x24
     b4a:	64 01       	movw	r12, r8
     b4c:	53 01       	movw	r10, r6
     b4e:	06 2e       	mov	r0, r22
     b50:	04 c0       	rjmp	.+8      	; 0xb5a <__stack+0x2fb>
     b52:	d6 94       	lsr	r13
     b54:	c7 94       	ror	r12
     b56:	b7 94       	ror	r11
     b58:	a7 94       	ror	r10
     b5a:	0a 94       	dec	r0
     b5c:	d2 f7       	brpl	.-12     	; 0xb52 <__stack+0x2f3>
     b5e:	d4 01       	movw	r26, r8
     b60:	c3 01       	movw	r24, r6
     b62:	6e 96       	adiw	r28, 0x1e	; 30
     b64:	0f ac       	ldd	r0, Y+63	; 0x3f
     b66:	6e 97       	sbiw	r28, 0x1e	; 30
     b68:	04 c0       	rjmp	.+8      	; 0xb72 <__stack+0x313>
     b6a:	88 0f       	add	r24, r24
     b6c:	99 1f       	adc	r25, r25
     b6e:	aa 1f       	adc	r26, r26
     b70:	bb 1f       	adc	r27, r27
     b72:	0a 94       	dec	r0
     b74:	d2 f7       	brpl	.-12     	; 0xb6a <__stack+0x30b>
     b76:	ed a4       	ldd	r14, Y+45	; 0x2d
     b78:	fe a4       	ldd	r15, Y+46	; 0x2e
     b7a:	0f a5       	ldd	r16, Y+47	; 0x2f
     b7c:	18 a9       	ldd	r17, Y+48	; 0x30
     b7e:	04 c0       	rjmp	.+8      	; 0xb88 <__stack+0x329>
     b80:	16 95       	lsr	r17
     b82:	07 95       	ror	r16
     b84:	f7 94       	ror	r15
     b86:	e7 94       	ror	r14
     b88:	6a 95       	dec	r22
     b8a:	d2 f7       	brpl	.-12     	; 0xb80 <__stack+0x321>
     b8c:	37 01       	movw	r6, r14
     b8e:	48 01       	movw	r8, r16
     b90:	68 2a       	or	r6, r24
     b92:	79 2a       	or	r7, r25
     b94:	8a 2a       	or	r8, r26
     b96:	9b 2a       	or	r9, r27
     b98:	6d 8e       	std	Y+29, r6	; 0x1d
     b9a:	7e 8e       	std	Y+30, r7	; 0x1e
     b9c:	8f 8e       	std	Y+31, r8	; 0x1f
     b9e:	98 a2       	std	Y+32, r9	; 0x20
     ba0:	ed a0       	ldd	r14, Y+37	; 0x25
     ba2:	fe a0       	ldd	r15, Y+38	; 0x26
     ba4:	0f a1       	ldd	r16, Y+39	; 0x27
     ba6:	18 a5       	ldd	r17, Y+40	; 0x28
     ba8:	38 01       	movw	r6, r16
     baa:	88 24       	eor	r8, r8
     bac:	99 24       	eor	r9, r9
     bae:	98 01       	movw	r18, r16
     bb0:	87 01       	movw	r16, r14
     bb2:	20 70       	andi	r18, 0x00	; 0
     bb4:	30 70       	andi	r19, 0x00	; 0
     bb6:	65 96       	adiw	r28, 0x15	; 21
     bb8:	0c af       	std	Y+60, r16	; 0x3c
     bba:	1d af       	std	Y+61, r17	; 0x3d
     bbc:	2e af       	std	Y+62, r18	; 0x3e
     bbe:	3f af       	std	Y+63, r19	; 0x3f
     bc0:	65 97       	sbiw	r28, 0x15	; 21
     bc2:	c6 01       	movw	r24, r12
     bc4:	b5 01       	movw	r22, r10
     bc6:	a4 01       	movw	r20, r8
     bc8:	93 01       	movw	r18, r6
     bca:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
     bce:	7b 01       	movw	r14, r22
     bd0:	8c 01       	movw	r16, r24
     bd2:	c6 01       	movw	r24, r12
     bd4:	b5 01       	movw	r22, r10
     bd6:	a4 01       	movw	r20, r8
     bd8:	93 01       	movw	r18, r6
     bda:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
     bde:	c9 01       	movw	r24, r18
     be0:	da 01       	movw	r26, r20
     be2:	1c 01       	movw	r2, r24
     be4:	2d 01       	movw	r4, r26
     be6:	c2 01       	movw	r24, r4
     be8:	b1 01       	movw	r22, r2
     bea:	65 96       	adiw	r28, 0x15	; 21
     bec:	2c ad       	ldd	r18, Y+60	; 0x3c
     bee:	3d ad       	ldd	r19, Y+61	; 0x3d
     bf0:	4e ad       	ldd	r20, Y+62	; 0x3e
     bf2:	5f ad       	ldd	r21, Y+63	; 0x3f
     bf4:	65 97       	sbiw	r28, 0x15	; 21
     bf6:	0e 94 51 30 	call	0x60a2	; 0x60a2 <__mulsi3>
     bfa:	9b 01       	movw	r18, r22
     bfc:	ac 01       	movw	r20, r24
     bfe:	87 01       	movw	r16, r14
     c00:	ff 24       	eor	r15, r15
     c02:	ee 24       	eor	r14, r14
     c04:	ad 8c       	ldd	r10, Y+29	; 0x1d
     c06:	be 8c       	ldd	r11, Y+30	; 0x1e
     c08:	cf 8c       	ldd	r12, Y+31	; 0x1f
     c0a:	d8 a0       	ldd	r13, Y+32	; 0x20
     c0c:	c6 01       	movw	r24, r12
     c0e:	aa 27       	eor	r26, r26
     c10:	bb 27       	eor	r27, r27
     c12:	57 01       	movw	r10, r14
     c14:	68 01       	movw	r12, r16
     c16:	a8 2a       	or	r10, r24
     c18:	b9 2a       	or	r11, r25
     c1a:	ca 2a       	or	r12, r26
     c1c:	db 2a       	or	r13, r27
     c1e:	a2 16       	cp	r10, r18
     c20:	b3 06       	cpc	r11, r19
     c22:	c4 06       	cpc	r12, r20
     c24:	d5 06       	cpc	r13, r21
     c26:	00 f5       	brcc	.+64     	; 0xc68 <__stack+0x409>
     c28:	08 94       	sec
     c2a:	21 08       	sbc	r2, r1
     c2c:	31 08       	sbc	r3, r1
     c2e:	41 08       	sbc	r4, r1
     c30:	51 08       	sbc	r5, r1
     c32:	ed a0       	ldd	r14, Y+37	; 0x25
     c34:	fe a0       	ldd	r15, Y+38	; 0x26
     c36:	0f a1       	ldd	r16, Y+39	; 0x27
     c38:	18 a5       	ldd	r17, Y+40	; 0x28
     c3a:	ae 0c       	add	r10, r14
     c3c:	bf 1c       	adc	r11, r15
     c3e:	c0 1e       	adc	r12, r16
     c40:	d1 1e       	adc	r13, r17
     c42:	ae 14       	cp	r10, r14
     c44:	bf 04       	cpc	r11, r15
     c46:	c0 06       	cpc	r12, r16
     c48:	d1 06       	cpc	r13, r17
     c4a:	70 f0       	brcs	.+28     	; 0xc68 <__stack+0x409>
     c4c:	a2 16       	cp	r10, r18
     c4e:	b3 06       	cpc	r11, r19
     c50:	c4 06       	cpc	r12, r20
     c52:	d5 06       	cpc	r13, r21
     c54:	48 f4       	brcc	.+18     	; 0xc68 <__stack+0x409>
     c56:	08 94       	sec
     c58:	21 08       	sbc	r2, r1
     c5a:	31 08       	sbc	r3, r1
     c5c:	41 08       	sbc	r4, r1
     c5e:	51 08       	sbc	r5, r1
     c60:	ae 0c       	add	r10, r14
     c62:	bf 1c       	adc	r11, r15
     c64:	c0 1e       	adc	r12, r16
     c66:	d1 1e       	adc	r13, r17
     c68:	a2 1a       	sub	r10, r18
     c6a:	b3 0a       	sbc	r11, r19
     c6c:	c4 0a       	sbc	r12, r20
     c6e:	d5 0a       	sbc	r13, r21
     c70:	c6 01       	movw	r24, r12
     c72:	b5 01       	movw	r22, r10
     c74:	a4 01       	movw	r20, r8
     c76:	93 01       	movw	r18, r6
     c78:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
     c7c:	7b 01       	movw	r14, r22
     c7e:	8c 01       	movw	r16, r24
     c80:	c6 01       	movw	r24, r12
     c82:	b5 01       	movw	r22, r10
     c84:	a4 01       	movw	r20, r8
     c86:	93 01       	movw	r18, r6
     c88:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
     c8c:	c9 01       	movw	r24, r18
     c8e:	da 01       	movw	r26, r20
     c90:	3c 01       	movw	r6, r24
     c92:	4d 01       	movw	r8, r26
     c94:	c4 01       	movw	r24, r8
     c96:	b3 01       	movw	r22, r6
     c98:	65 96       	adiw	r28, 0x15	; 21
     c9a:	2c ad       	ldd	r18, Y+60	; 0x3c
     c9c:	3d ad       	ldd	r19, Y+61	; 0x3d
     c9e:	4e ad       	ldd	r20, Y+62	; 0x3e
     ca0:	5f ad       	ldd	r21, Y+63	; 0x3f
     ca2:	65 97       	sbiw	r28, 0x15	; 21
     ca4:	0e 94 51 30 	call	0x60a2	; 0x60a2 <__mulsi3>
     ca8:	9b 01       	movw	r18, r22
     caa:	ac 01       	movw	r20, r24
     cac:	87 01       	movw	r16, r14
     cae:	ff 24       	eor	r15, r15
     cb0:	ee 24       	eor	r14, r14
     cb2:	8d 8d       	ldd	r24, Y+29	; 0x1d
     cb4:	9e 8d       	ldd	r25, Y+30	; 0x1e
     cb6:	af 8d       	ldd	r26, Y+31	; 0x1f
     cb8:	b8 a1       	ldd	r27, Y+32	; 0x20
     cba:	a0 70       	andi	r26, 0x00	; 0
     cbc:	b0 70       	andi	r27, 0x00	; 0
     cbe:	57 01       	movw	r10, r14
     cc0:	68 01       	movw	r12, r16
     cc2:	a8 2a       	or	r10, r24
     cc4:	b9 2a       	or	r11, r25
     cc6:	ca 2a       	or	r12, r26
     cc8:	db 2a       	or	r13, r27
     cca:	a2 16       	cp	r10, r18
     ccc:	b3 06       	cpc	r11, r19
     cce:	c4 06       	cpc	r12, r20
     cd0:	d5 06       	cpc	r13, r21
     cd2:	00 f5       	brcc	.+64     	; 0xd14 <__stack+0x4b5>
     cd4:	08 94       	sec
     cd6:	61 08       	sbc	r6, r1
     cd8:	71 08       	sbc	r7, r1
     cda:	81 08       	sbc	r8, r1
     cdc:	91 08       	sbc	r9, r1
     cde:	6d a1       	ldd	r22, Y+37	; 0x25
     ce0:	7e a1       	ldd	r23, Y+38	; 0x26
     ce2:	8f a1       	ldd	r24, Y+39	; 0x27
     ce4:	98 a5       	ldd	r25, Y+40	; 0x28
     ce6:	a6 0e       	add	r10, r22
     ce8:	b7 1e       	adc	r11, r23
     cea:	c8 1e       	adc	r12, r24
     cec:	d9 1e       	adc	r13, r25
     cee:	a6 16       	cp	r10, r22
     cf0:	b7 06       	cpc	r11, r23
     cf2:	c8 06       	cpc	r12, r24
     cf4:	d9 06       	cpc	r13, r25
     cf6:	70 f0       	brcs	.+28     	; 0xd14 <__stack+0x4b5>
     cf8:	a2 16       	cp	r10, r18
     cfa:	b3 06       	cpc	r11, r19
     cfc:	c4 06       	cpc	r12, r20
     cfe:	d5 06       	cpc	r13, r21
     d00:	48 f4       	brcc	.+18     	; 0xd14 <__stack+0x4b5>
     d02:	08 94       	sec
     d04:	61 08       	sbc	r6, r1
     d06:	71 08       	sbc	r7, r1
     d08:	81 08       	sbc	r8, r1
     d0a:	91 08       	sbc	r9, r1
     d0c:	a6 0e       	add	r10, r22
     d0e:	b7 1e       	adc	r11, r23
     d10:	c8 1e       	adc	r12, r24
     d12:	d9 1e       	adc	r13, r25
     d14:	d6 01       	movw	r26, r12
     d16:	c5 01       	movw	r24, r10
     d18:	82 1b       	sub	r24, r18
     d1a:	93 0b       	sbc	r25, r19
     d1c:	a4 0b       	sbc	r26, r20
     d1e:	b5 0b       	sbc	r27, r21
     d20:	89 8f       	std	Y+25, r24	; 0x19
     d22:	9a 8f       	std	Y+26, r25	; 0x1a
     d24:	ab 8f       	std	Y+27, r26	; 0x1b
     d26:	bc 8f       	std	Y+28, r27	; 0x1c
     d28:	d1 01       	movw	r26, r2
     d2a:	99 27       	eor	r25, r25
     d2c:	88 27       	eor	r24, r24
     d2e:	64 01       	movw	r12, r8
     d30:	53 01       	movw	r10, r6
     d32:	a8 2a       	or	r10, r24
     d34:	b9 2a       	or	r11, r25
     d36:	ca 2a       	or	r12, r26
     d38:	db 2a       	or	r13, r27
     d3a:	a9 aa       	std	Y+49, r10	; 0x31
     d3c:	ba aa       	std	Y+50, r11	; 0x32
     d3e:	cb aa       	std	Y+51, r12	; 0x33
     d40:	dc aa       	std	Y+52, r13	; 0x34
     d42:	86 01       	movw	r16, r12
     d44:	75 01       	movw	r14, r10
     d46:	2f ef       	ldi	r18, 0xFF	; 255
     d48:	3f ef       	ldi	r19, 0xFF	; 255
     d4a:	40 e0       	ldi	r20, 0x00	; 0
     d4c:	50 e0       	ldi	r21, 0x00	; 0
     d4e:	e2 22       	and	r14, r18
     d50:	f3 22       	and	r15, r19
     d52:	04 23       	and	r16, r20
     d54:	15 23       	and	r17, r21
     d56:	a6 01       	movw	r20, r12
     d58:	66 27       	eor	r22, r22
     d5a:	77 27       	eor	r23, r23
     d5c:	6d 96       	adiw	r28, 0x1d	; 29
     d5e:	4c af       	std	Y+60, r20	; 0x3c
     d60:	5d af       	std	Y+61, r21	; 0x3d
     d62:	6e af       	std	Y+62, r22	; 0x3e
     d64:	7f af       	std	Y+63, r23	; 0x3f
     d66:	6d 97       	sbiw	r28, 0x1d	; 29
     d68:	a9 a0       	ldd	r10, Y+33	; 0x21
     d6a:	ba a0       	ldd	r11, Y+34	; 0x22
     d6c:	cb a0       	ldd	r12, Y+35	; 0x23
     d6e:	dc a0       	ldd	r13, Y+36	; 0x24
     d70:	6f ef       	ldi	r22, 0xFF	; 255
     d72:	7f ef       	ldi	r23, 0xFF	; 255
     d74:	80 e0       	ldi	r24, 0x00	; 0
     d76:	90 e0       	ldi	r25, 0x00	; 0
     d78:	a6 22       	and	r10, r22
     d7a:	b7 22       	and	r11, r23
     d7c:	c8 22       	and	r12, r24
     d7e:	d9 22       	and	r13, r25
     d80:	89 a1       	ldd	r24, Y+33	; 0x21
     d82:	9a a1       	ldd	r25, Y+34	; 0x22
     d84:	ab a1       	ldd	r26, Y+35	; 0x23
     d86:	bc a1       	ldd	r27, Y+36	; 0x24
     d88:	1d 01       	movw	r2, r26
     d8a:	44 24       	eor	r4, r4
     d8c:	55 24       	eor	r5, r5
     d8e:	c8 01       	movw	r24, r16
     d90:	b7 01       	movw	r22, r14
     d92:	a6 01       	movw	r20, r12
     d94:	95 01       	movw	r18, r10
     d96:	0e 94 51 30 	call	0x60a2	; 0x60a2 <__mulsi3>
     d9a:	69 96       	adiw	r28, 0x19	; 25
     d9c:	6c af       	std	Y+60, r22	; 0x3c
     d9e:	7d af       	std	Y+61, r23	; 0x3d
     da0:	8e af       	std	Y+62, r24	; 0x3e
     da2:	9f af       	std	Y+63, r25	; 0x3f
     da4:	69 97       	sbiw	r28, 0x19	; 25
     da6:	c8 01       	movw	r24, r16
     da8:	b7 01       	movw	r22, r14
     daa:	a2 01       	movw	r20, r4
     dac:	91 01       	movw	r18, r2
     dae:	0e 94 51 30 	call	0x60a2	; 0x60a2 <__mulsi3>
     db2:	3b 01       	movw	r6, r22
     db4:	4c 01       	movw	r8, r24
     db6:	6d 96       	adiw	r28, 0x1d	; 29
     db8:	6c ad       	ldd	r22, Y+60	; 0x3c
     dba:	7d ad       	ldd	r23, Y+61	; 0x3d
     dbc:	8e ad       	ldd	r24, Y+62	; 0x3e
     dbe:	9f ad       	ldd	r25, Y+63	; 0x3f
     dc0:	6d 97       	sbiw	r28, 0x1d	; 29
     dc2:	a6 01       	movw	r20, r12
     dc4:	95 01       	movw	r18, r10
     dc6:	0e 94 51 30 	call	0x60a2	; 0x60a2 <__mulsi3>
     dca:	7b 01       	movw	r14, r22
     dcc:	8c 01       	movw	r16, r24
     dce:	6d 96       	adiw	r28, 0x1d	; 29
     dd0:	6c ad       	ldd	r22, Y+60	; 0x3c
     dd2:	7d ad       	ldd	r23, Y+61	; 0x3d
     dd4:	8e ad       	ldd	r24, Y+62	; 0x3e
     dd6:	9f ad       	ldd	r25, Y+63	; 0x3f
     dd8:	6d 97       	sbiw	r28, 0x1d	; 29
     dda:	a2 01       	movw	r20, r4
     ddc:	91 01       	movw	r18, r2
     dde:	0e 94 51 30 	call	0x60a2	; 0x60a2 <__mulsi3>
     de2:	5b 01       	movw	r10, r22
     de4:	6c 01       	movw	r12, r24
     de6:	a8 01       	movw	r20, r16
     de8:	97 01       	movw	r18, r14
     dea:	26 0d       	add	r18, r6
     dec:	37 1d       	adc	r19, r7
     dee:	48 1d       	adc	r20, r8
     df0:	59 1d       	adc	r21, r9
     df2:	69 96       	adiw	r28, 0x19	; 25
     df4:	6c ac       	ldd	r6, Y+60	; 0x3c
     df6:	7d ac       	ldd	r7, Y+61	; 0x3d
     df8:	8e ac       	ldd	r8, Y+62	; 0x3e
     dfa:	9f ac       	ldd	r9, Y+63	; 0x3f
     dfc:	69 97       	sbiw	r28, 0x19	; 25
     dfe:	c4 01       	movw	r24, r8
     e00:	aa 27       	eor	r26, r26
     e02:	bb 27       	eor	r27, r27
     e04:	28 0f       	add	r18, r24
     e06:	39 1f       	adc	r19, r25
     e08:	4a 1f       	adc	r20, r26
     e0a:	5b 1f       	adc	r21, r27
     e0c:	2e 15       	cp	r18, r14
     e0e:	3f 05       	cpc	r19, r15
     e10:	40 07       	cpc	r20, r16
     e12:	51 07       	cpc	r21, r17
     e14:	48 f4       	brcc	.+18     	; 0xe28 <__stack+0x5c9>
     e16:	e1 2c       	mov	r14, r1
     e18:	f1 2c       	mov	r15, r1
     e1a:	61 e0       	ldi	r22, 0x01	; 1
     e1c:	06 2f       	mov	r16, r22
     e1e:	11 2d       	mov	r17, r1
     e20:	ae 0c       	add	r10, r14
     e22:	bf 1c       	adc	r11, r15
     e24:	c0 1e       	adc	r12, r16
     e26:	d1 1e       	adc	r13, r17
     e28:	ca 01       	movw	r24, r20
     e2a:	aa 27       	eor	r26, r26
     e2c:	bb 27       	eor	r27, r27
     e2e:	bc 01       	movw	r22, r24
     e30:	cd 01       	movw	r24, r26
     e32:	6a 0d       	add	r22, r10
     e34:	7b 1d       	adc	r23, r11
     e36:	8c 1d       	adc	r24, r12
     e38:	9d 1d       	adc	r25, r13
     e3a:	69 8c       	ldd	r6, Y+25	; 0x19
     e3c:	7a 8c       	ldd	r7, Y+26	; 0x1a
     e3e:	8b 8c       	ldd	r8, Y+27	; 0x1b
     e40:	9c 8c       	ldd	r9, Y+28	; 0x1c
     e42:	66 16       	cp	r6, r22
     e44:	77 06       	cpc	r7, r23
     e46:	88 06       	cpc	r8, r24
     e48:	99 06       	cpc	r9, r25
     e4a:	40 f1       	brcs	.+80     	; 0xe9c <__stack+0x63d>
     e4c:	66 15       	cp	r22, r6
     e4e:	77 05       	cpc	r23, r7
     e50:	88 05       	cpc	r24, r8
     e52:	99 05       	cpc	r25, r9
     e54:	09 f0       	breq	.+2      	; 0xe58 <__stack+0x5f9>
     e56:	43 c0       	rjmp	.+134    	; 0xede <__stack+0x67f>
     e58:	d9 01       	movw	r26, r18
     e5a:	99 27       	eor	r25, r25
     e5c:	88 27       	eor	r24, r24
     e5e:	69 96       	adiw	r28, 0x19	; 25
     e60:	2c ad       	ldd	r18, Y+60	; 0x3c
     e62:	3d ad       	ldd	r19, Y+61	; 0x3d
     e64:	4e ad       	ldd	r20, Y+62	; 0x3e
     e66:	5f ad       	ldd	r21, Y+63	; 0x3f
     e68:	69 97       	sbiw	r28, 0x19	; 25
     e6a:	40 70       	andi	r20, 0x00	; 0
     e6c:	50 70       	andi	r21, 0x00	; 0
     e6e:	82 0f       	add	r24, r18
     e70:	93 1f       	adc	r25, r19
     e72:	a4 1f       	adc	r26, r20
     e74:	b5 1f       	adc	r27, r21
     e76:	2d a5       	ldd	r18, Y+45	; 0x2d
     e78:	3e a5       	ldd	r19, Y+46	; 0x2e
     e7a:	4f a5       	ldd	r20, Y+47	; 0x2f
     e7c:	58 a9       	ldd	r21, Y+48	; 0x30
     e7e:	6e 96       	adiw	r28, 0x1e	; 30
     e80:	0f ac       	ldd	r0, Y+63	; 0x3f
     e82:	6e 97       	sbiw	r28, 0x1e	; 30
     e84:	04 c0       	rjmp	.+8      	; 0xe8e <__stack+0x62f>
     e86:	22 0f       	add	r18, r18
     e88:	33 1f       	adc	r19, r19
     e8a:	44 1f       	adc	r20, r20
     e8c:	55 1f       	adc	r21, r21
     e8e:	0a 94       	dec	r0
     e90:	d2 f7       	brpl	.-12     	; 0xe86 <__stack+0x627>
     e92:	28 17       	cp	r18, r24
     e94:	39 07       	cpc	r19, r25
     e96:	4a 07       	cpc	r20, r26
     e98:	5b 07       	cpc	r21, r27
     e9a:	08 f5       	brcc	.+66     	; 0xede <__stack+0x67f>
     e9c:	09 a9       	ldd	r16, Y+49	; 0x31
     e9e:	1a a9       	ldd	r17, Y+50	; 0x32
     ea0:	2b a9       	ldd	r18, Y+51	; 0x33
     ea2:	3c a9       	ldd	r19, Y+52	; 0x34
     ea4:	01 50       	subi	r16, 0x01	; 1
     ea6:	10 40       	sbci	r17, 0x00	; 0
     ea8:	20 40       	sbci	r18, 0x00	; 0
     eaa:	30 40       	sbci	r19, 0x00	; 0
     eac:	09 ab       	std	Y+49, r16	; 0x31
     eae:	1a ab       	std	Y+50, r17	; 0x32
     eb0:	2b ab       	std	Y+51, r18	; 0x33
     eb2:	3c ab       	std	Y+52, r19	; 0x34
     eb4:	14 c0       	rjmp	.+40     	; 0xede <__stack+0x67f>
     eb6:	66 24       	eor	r6, r6
     eb8:	77 24       	eor	r7, r7
     eba:	43 01       	movw	r8, r6
     ebc:	21 e0       	ldi	r18, 0x01	; 1
     ebe:	30 e0       	ldi	r19, 0x00	; 0
     ec0:	40 e0       	ldi	r20, 0x00	; 0
     ec2:	50 e0       	ldi	r21, 0x00	; 0
     ec4:	29 ab       	std	Y+49, r18	; 0x31
     ec6:	3a ab       	std	Y+50, r19	; 0x32
     ec8:	4b ab       	std	Y+51, r20	; 0x33
     eca:	5c ab       	std	Y+52, r21	; 0x34
     ecc:	0b c0       	rjmp	.+22     	; 0xee4 <__stack+0x685>
     ece:	66 24       	eor	r6, r6
     ed0:	77 24       	eor	r7, r7
     ed2:	43 01       	movw	r8, r6
     ed4:	19 aa       	std	Y+49, r1	; 0x31
     ed6:	1a aa       	std	Y+50, r1	; 0x32
     ed8:	1b aa       	std	Y+51, r1	; 0x33
     eda:	1c aa       	std	Y+52, r1	; 0x34
     edc:	03 c0       	rjmp	.+6      	; 0xee4 <__stack+0x685>
     ede:	66 24       	eor	r6, r6
     ee0:	77 24       	eor	r7, r7
     ee2:	43 01       	movw	r8, r6
     ee4:	fe 01       	movw	r30, r28
     ee6:	71 96       	adiw	r30, 0x11	; 17
     ee8:	88 e0       	ldi	r24, 0x08	; 8
     eea:	df 01       	movw	r26, r30
     eec:	1d 92       	st	X+, r1
     eee:	8a 95       	dec	r24
     ef0:	e9 f7       	brne	.-6      	; 0xeec <__stack+0x68d>
     ef2:	a9 a8       	ldd	r10, Y+49	; 0x31
     ef4:	ba a8       	ldd	r11, Y+50	; 0x32
     ef6:	cb a8       	ldd	r12, Y+51	; 0x33
     ef8:	dc a8       	ldd	r13, Y+52	; 0x34
     efa:	a9 8a       	std	Y+17, r10	; 0x11
     efc:	ba 8a       	std	Y+18, r11	; 0x12
     efe:	cb 8a       	std	Y+19, r12	; 0x13
     f00:	dc 8a       	std	Y+20, r13	; 0x14
     f02:	6d 8a       	std	Y+21, r6	; 0x15
     f04:	7e 8a       	std	Y+22, r7	; 0x16
     f06:	8f 8a       	std	Y+23, r8	; 0x17
     f08:	98 8e       	std	Y+24, r9	; 0x18
     f0a:	29 a9       	ldd	r18, Y+49	; 0x31
     f0c:	3a 89       	ldd	r19, Y+18	; 0x12
     f0e:	4b 89       	ldd	r20, Y+19	; 0x13
     f10:	5c 89       	ldd	r21, Y+20	; 0x14
     f12:	66 2d       	mov	r22, r6
     f14:	7e 89       	ldd	r23, Y+22	; 0x16
     f16:	8f 89       	ldd	r24, Y+23	; 0x17
     f18:	98 8d       	ldd	r25, Y+24	; 0x18
     f1a:	c2 5a       	subi	r28, 0xA2	; 162
     f1c:	df 4f       	sbci	r29, 0xFF	; 255
     f1e:	e2 e1       	ldi	r30, 0x12	; 18
     f20:	0c 94 ae 30 	jmp	0x615c	; 0x615c <__epilogue_restores__>

00000f24 <__umoddi3>:
     f24:	ab e5       	ldi	r26, 0x5B	; 91
     f26:	b0 e0       	ldi	r27, 0x00	; 0
     f28:	e8 e9       	ldi	r30, 0x98	; 152
     f2a:	f7 e0       	ldi	r31, 0x07	; 7
     f2c:	0c 94 92 30 	jmp	0x6124	; 0x6124 <__prologue_saves__>
     f30:	a8 e0       	ldi	r26, 0x08	; 8
     f32:	4e 01       	movw	r8, r28
     f34:	08 94       	sec
     f36:	81 1c       	adc	r8, r1
     f38:	91 1c       	adc	r9, r1
     f3a:	f4 01       	movw	r30, r8
     f3c:	6a 2e       	mov	r6, r26
     f3e:	11 92       	st	Z+, r1
     f40:	6a 94       	dec	r6
     f42:	e9 f7       	brne	.-6      	; 0xf3e <__umoddi3+0x1a>
     f44:	29 83       	std	Y+1, r18	; 0x01
     f46:	3a 83       	std	Y+2, r19	; 0x02
     f48:	4b 83       	std	Y+3, r20	; 0x03
     f4a:	5c 83       	std	Y+4, r21	; 0x04
     f4c:	6d 83       	std	Y+5, r22	; 0x05
     f4e:	7e 83       	std	Y+6, r23	; 0x06
     f50:	8f 83       	std	Y+7, r24	; 0x07
     f52:	98 87       	std	Y+8, r25	; 0x08
     f54:	ce 01       	movw	r24, r28
     f56:	09 96       	adiw	r24, 0x09	; 9
     f58:	fc 01       	movw	r30, r24
     f5a:	11 92       	st	Z+, r1
     f5c:	aa 95       	dec	r26
     f5e:	e9 f7       	brne	.-6      	; 0xf5a <__umoddi3+0x36>
     f60:	a9 86       	std	Y+9, r10	; 0x09
     f62:	ba 86       	std	Y+10, r11	; 0x0a
     f64:	cb 86       	std	Y+11, r12	; 0x0b
     f66:	dc 86       	std	Y+12, r13	; 0x0c
     f68:	ed 86       	std	Y+13, r14	; 0x0d
     f6a:	fe 86       	std	Y+14, r15	; 0x0e
     f6c:	0f 87       	std	Y+15, r16	; 0x0f
     f6e:	18 8b       	std	Y+16, r17	; 0x10
     f70:	29 84       	ldd	r2, Y+9	; 0x09
     f72:	3a 84       	ldd	r3, Y+10	; 0x0a
     f74:	4b 84       	ldd	r4, Y+11	; 0x0b
     f76:	5c 84       	ldd	r5, Y+12	; 0x0c
     f78:	ad 84       	ldd	r10, Y+13	; 0x0d
     f7a:	be 84       	ldd	r11, Y+14	; 0x0e
     f7c:	cf 84       	ldd	r12, Y+15	; 0x0f
     f7e:	d8 88       	ldd	r13, Y+16	; 0x10
     f80:	29 81       	ldd	r18, Y+1	; 0x01
     f82:	3a 81       	ldd	r19, Y+2	; 0x02
     f84:	4b 81       	ldd	r20, Y+3	; 0x03
     f86:	5c 81       	ldd	r21, Y+4	; 0x04
     f88:	69 96       	adiw	r28, 0x19	; 25
     f8a:	2f af       	std	Y+63, r18	; 0x3f
     f8c:	69 97       	sbiw	r28, 0x19	; 25
     f8e:	6a 96       	adiw	r28, 0x1a	; 26
     f90:	3f af       	std	Y+63, r19	; 0x3f
     f92:	6a 97       	sbiw	r28, 0x1a	; 26
     f94:	6b 96       	adiw	r28, 0x1b	; 27
     f96:	4f af       	std	Y+63, r20	; 0x3f
     f98:	6b 97       	sbiw	r28, 0x1b	; 27
     f9a:	6c 96       	adiw	r28, 0x1c	; 28
     f9c:	5f af       	std	Y+63, r21	; 0x3f
     f9e:	6c 97       	sbiw	r28, 0x1c	; 28
     fa0:	6c 96       	adiw	r28, 0x1c	; 28
     fa2:	6c ac       	ldd	r6, Y+60	; 0x3c
     fa4:	7d ac       	ldd	r7, Y+61	; 0x3d
     fa6:	8e ac       	ldd	r8, Y+62	; 0x3e
     fa8:	9f ac       	ldd	r9, Y+63	; 0x3f
     faa:	6c 97       	sbiw	r28, 0x1c	; 28
     fac:	69 aa       	std	Y+49, r6	; 0x31
     fae:	7a aa       	std	Y+50, r7	; 0x32
     fb0:	8b aa       	std	Y+51, r8	; 0x33
     fb2:	9c aa       	std	Y+52, r9	; 0x34
     fb4:	6d 81       	ldd	r22, Y+5	; 0x05
     fb6:	7e 81       	ldd	r23, Y+6	; 0x06
     fb8:	8f 81       	ldd	r24, Y+7	; 0x07
     fba:	98 85       	ldd	r25, Y+8	; 0x08
     fbc:	3b 01       	movw	r6, r22
     fbe:	4c 01       	movw	r8, r24
     fc0:	6d aa       	std	Y+53, r6	; 0x35
     fc2:	7e aa       	std	Y+54, r7	; 0x36
     fc4:	8f aa       	std	Y+55, r8	; 0x37
     fc6:	98 ae       	std	Y+56, r9	; 0x38
     fc8:	a1 14       	cp	r10, r1
     fca:	b1 04       	cpc	r11, r1
     fcc:	c1 04       	cpc	r12, r1
     fce:	d1 04       	cpc	r13, r1
     fd0:	09 f0       	breq	.+2      	; 0xfd4 <__umoddi3+0xb0>
     fd2:	04 c3       	rjmp	.+1544   	; 0x15dc <__umoddi3+0x6b8>
     fd4:	62 14       	cp	r6, r2
     fd6:	73 04       	cpc	r7, r3
     fd8:	84 04       	cpc	r8, r4
     fda:	95 04       	cpc	r9, r5
     fdc:	08 f0       	brcs	.+2      	; 0xfe0 <__umoddi3+0xbc>
     fde:	00 c1       	rjmp	.+512    	; 0x11e0 <__umoddi3+0x2bc>
     fe0:	00 e0       	ldi	r16, 0x00	; 0
     fe2:	20 16       	cp	r2, r16
     fe4:	00 e0       	ldi	r16, 0x00	; 0
     fe6:	30 06       	cpc	r3, r16
     fe8:	01 e0       	ldi	r16, 0x01	; 1
     fea:	40 06       	cpc	r4, r16
     fec:	00 e0       	ldi	r16, 0x00	; 0
     fee:	50 06       	cpc	r5, r16
     ff0:	88 f4       	brcc	.+34     	; 0x1014 <__umoddi3+0xf0>
     ff2:	1f ef       	ldi	r17, 0xFF	; 255
     ff4:	21 16       	cp	r2, r17
     ff6:	31 04       	cpc	r3, r1
     ff8:	41 04       	cpc	r4, r1
     ffa:	51 04       	cpc	r5, r1
     ffc:	39 f0       	breq	.+14     	; 0x100c <__umoddi3+0xe8>
     ffe:	30 f0       	brcs	.+12     	; 0x100c <__umoddi3+0xe8>
    1000:	88 e0       	ldi	r24, 0x08	; 8
    1002:	e8 2e       	mov	r14, r24
    1004:	f1 2c       	mov	r15, r1
    1006:	01 2d       	mov	r16, r1
    1008:	11 2d       	mov	r17, r1
    100a:	18 c0       	rjmp	.+48     	; 0x103c <__umoddi3+0x118>
    100c:	ee 24       	eor	r14, r14
    100e:	ff 24       	eor	r15, r15
    1010:	87 01       	movw	r16, r14
    1012:	14 c0       	rjmp	.+40     	; 0x103c <__umoddi3+0x118>
    1014:	40 e0       	ldi	r20, 0x00	; 0
    1016:	24 16       	cp	r2, r20
    1018:	40 e0       	ldi	r20, 0x00	; 0
    101a:	34 06       	cpc	r3, r20
    101c:	40 e0       	ldi	r20, 0x00	; 0
    101e:	44 06       	cpc	r4, r20
    1020:	41 e0       	ldi	r20, 0x01	; 1
    1022:	54 06       	cpc	r5, r20
    1024:	30 f0       	brcs	.+12     	; 0x1032 <__umoddi3+0x10e>
    1026:	b8 e1       	ldi	r27, 0x18	; 24
    1028:	eb 2e       	mov	r14, r27
    102a:	f1 2c       	mov	r15, r1
    102c:	01 2d       	mov	r16, r1
    102e:	11 2d       	mov	r17, r1
    1030:	05 c0       	rjmp	.+10     	; 0x103c <__umoddi3+0x118>
    1032:	a0 e1       	ldi	r26, 0x10	; 16
    1034:	ea 2e       	mov	r14, r26
    1036:	f1 2c       	mov	r15, r1
    1038:	01 2d       	mov	r16, r1
    103a:	11 2d       	mov	r17, r1
    103c:	d2 01       	movw	r26, r4
    103e:	c1 01       	movw	r24, r2
    1040:	0e 2c       	mov	r0, r14
    1042:	04 c0       	rjmp	.+8      	; 0x104c <__umoddi3+0x128>
    1044:	b6 95       	lsr	r27
    1046:	a7 95       	ror	r26
    1048:	97 95       	ror	r25
    104a:	87 95       	ror	r24
    104c:	0a 94       	dec	r0
    104e:	d2 f7       	brpl	.-12     	; 0x1044 <__umoddi3+0x120>
    1050:	88 59       	subi	r24, 0x98	; 152
    1052:	9f 4f       	sbci	r25, 0xFF	; 255
    1054:	dc 01       	movw	r26, r24
    1056:	2c 91       	ld	r18, X
    1058:	80 e2       	ldi	r24, 0x20	; 32
    105a:	90 e0       	ldi	r25, 0x00	; 0
    105c:	a0 e0       	ldi	r26, 0x00	; 0
    105e:	b0 e0       	ldi	r27, 0x00	; 0
    1060:	8e 19       	sub	r24, r14
    1062:	9f 09       	sbc	r25, r15
    1064:	a0 0b       	sbc	r26, r16
    1066:	b1 0b       	sbc	r27, r17
    1068:	5c 01       	movw	r10, r24
    106a:	6d 01       	movw	r12, r26
    106c:	a2 1a       	sub	r10, r18
    106e:	b1 08       	sbc	r11, r1
    1070:	c1 08       	sbc	r12, r1
    1072:	d1 08       	sbc	r13, r1
    1074:	a9 ae       	std	Y+57, r10	; 0x39
    1076:	ba ae       	std	Y+58, r11	; 0x3a
    1078:	cb ae       	std	Y+59, r12	; 0x3b
    107a:	dc ae       	std	Y+60, r13	; 0x3c
    107c:	a1 14       	cp	r10, r1
    107e:	b1 04       	cpc	r11, r1
    1080:	c1 04       	cpc	r12, r1
    1082:	d1 04       	cpc	r13, r1
    1084:	09 f4       	brne	.+2      	; 0x1088 <__umoddi3+0x164>
    1086:	3f c0       	rjmp	.+126    	; 0x1106 <__umoddi3+0x1e2>
    1088:	69 ad       	ldd	r22, Y+57	; 0x39
    108a:	06 2e       	mov	r0, r22
    108c:	04 c0       	rjmp	.+8      	; 0x1096 <__umoddi3+0x172>
    108e:	22 0c       	add	r2, r2
    1090:	33 1c       	adc	r3, r3
    1092:	44 1c       	adc	r4, r4
    1094:	55 1c       	adc	r5, r5
    1096:	0a 94       	dec	r0
    1098:	d2 f7       	brpl	.-12     	; 0x108e <__umoddi3+0x16a>
    109a:	a4 01       	movw	r20, r8
    109c:	93 01       	movw	r18, r6
    109e:	06 2e       	mov	r0, r22
    10a0:	04 c0       	rjmp	.+8      	; 0x10aa <__umoddi3+0x186>
    10a2:	22 0f       	add	r18, r18
    10a4:	33 1f       	adc	r19, r19
    10a6:	44 1f       	adc	r20, r20
    10a8:	55 1f       	adc	r21, r21
    10aa:	0a 94       	dec	r0
    10ac:	d2 f7       	brpl	.-12     	; 0x10a2 <__umoddi3+0x17e>
    10ae:	80 e2       	ldi	r24, 0x20	; 32
    10b0:	90 e0       	ldi	r25, 0x00	; 0
    10b2:	8a 19       	sub	r24, r10
    10b4:	9b 09       	sbc	r25, r11
    10b6:	6c 96       	adiw	r28, 0x1c	; 28
    10b8:	cc ac       	ldd	r12, Y+60	; 0x3c
    10ba:	dd ac       	ldd	r13, Y+61	; 0x3d
    10bc:	ee ac       	ldd	r14, Y+62	; 0x3e
    10be:	ff ac       	ldd	r15, Y+63	; 0x3f
    10c0:	6c 97       	sbiw	r28, 0x1c	; 28
    10c2:	04 c0       	rjmp	.+8      	; 0x10cc <__umoddi3+0x1a8>
    10c4:	f6 94       	lsr	r15
    10c6:	e7 94       	ror	r14
    10c8:	d7 94       	ror	r13
    10ca:	c7 94       	ror	r12
    10cc:	8a 95       	dec	r24
    10ce:	d2 f7       	brpl	.-12     	; 0x10c4 <__umoddi3+0x1a0>
    10d0:	87 01       	movw	r16, r14
    10d2:	76 01       	movw	r14, r12
    10d4:	e2 2a       	or	r14, r18
    10d6:	f3 2a       	or	r15, r19
    10d8:	04 2b       	or	r16, r20
    10da:	15 2b       	or	r17, r21
    10dc:	ed aa       	std	Y+53, r14	; 0x35
    10de:	fe aa       	std	Y+54, r15	; 0x36
    10e0:	0f ab       	std	Y+55, r16	; 0x37
    10e2:	18 af       	std	Y+56, r17	; 0x38
    10e4:	6c 96       	adiw	r28, 0x1c	; 28
    10e6:	8c ad       	ldd	r24, Y+60	; 0x3c
    10e8:	9d ad       	ldd	r25, Y+61	; 0x3d
    10ea:	ae ad       	ldd	r26, Y+62	; 0x3e
    10ec:	bf ad       	ldd	r27, Y+63	; 0x3f
    10ee:	6c 97       	sbiw	r28, 0x1c	; 28
    10f0:	04 c0       	rjmp	.+8      	; 0x10fa <__umoddi3+0x1d6>
    10f2:	88 0f       	add	r24, r24
    10f4:	99 1f       	adc	r25, r25
    10f6:	aa 1f       	adc	r26, r26
    10f8:	bb 1f       	adc	r27, r27
    10fa:	6a 95       	dec	r22
    10fc:	d2 f7       	brpl	.-12     	; 0x10f2 <__umoddi3+0x1ce>
    10fe:	89 ab       	std	Y+49, r24	; 0x31
    1100:	9a ab       	std	Y+50, r25	; 0x32
    1102:	ab ab       	std	Y+51, r26	; 0x33
    1104:	bc ab       	std	Y+52, r27	; 0x34
    1106:	32 01       	movw	r6, r4
    1108:	88 24       	eor	r8, r8
    110a:	99 24       	eor	r9, r9
    110c:	b2 01       	movw	r22, r4
    110e:	a1 01       	movw	r20, r2
    1110:	60 70       	andi	r22, 0x00	; 0
    1112:	70 70       	andi	r23, 0x00	; 0
    1114:	21 96       	adiw	r28, 0x01	; 1
    1116:	4c af       	std	Y+60, r20	; 0x3c
    1118:	5d af       	std	Y+61, r21	; 0x3d
    111a:	6e af       	std	Y+62, r22	; 0x3e
    111c:	7f af       	std	Y+63, r23	; 0x3f
    111e:	21 97       	sbiw	r28, 0x01	; 1
    1120:	6d a9       	ldd	r22, Y+53	; 0x35
    1122:	7e a9       	ldd	r23, Y+54	; 0x36
    1124:	8f a9       	ldd	r24, Y+55	; 0x37
    1126:	98 ad       	ldd	r25, Y+56	; 0x38
    1128:	a4 01       	movw	r20, r8
    112a:	93 01       	movw	r18, r6
    112c:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
    1130:	7b 01       	movw	r14, r22
    1132:	8c 01       	movw	r16, r24
    1134:	6d a9       	ldd	r22, Y+53	; 0x35
    1136:	7e a9       	ldd	r23, Y+54	; 0x36
    1138:	8f a9       	ldd	r24, Y+55	; 0x37
    113a:	98 ad       	ldd	r25, Y+56	; 0x38
    113c:	a4 01       	movw	r20, r8
    113e:	93 01       	movw	r18, r6
    1140:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
    1144:	ca 01       	movw	r24, r20
    1146:	b9 01       	movw	r22, r18
    1148:	21 96       	adiw	r28, 0x01	; 1
    114a:	2c ad       	ldd	r18, Y+60	; 0x3c
    114c:	3d ad       	ldd	r19, Y+61	; 0x3d
    114e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1150:	5f ad       	ldd	r21, Y+63	; 0x3f
    1152:	21 97       	sbiw	r28, 0x01	; 1
    1154:	0e 94 51 30 	call	0x60a2	; 0x60a2 <__mulsi3>
    1158:	9b 01       	movw	r18, r22
    115a:	ac 01       	movw	r20, r24
    115c:	87 01       	movw	r16, r14
    115e:	ff 24       	eor	r15, r15
    1160:	ee 24       	eor	r14, r14
    1162:	a9 a8       	ldd	r10, Y+49	; 0x31
    1164:	ba a8       	ldd	r11, Y+50	; 0x32
    1166:	cb a8       	ldd	r12, Y+51	; 0x33
    1168:	dc a8       	ldd	r13, Y+52	; 0x34
    116a:	c6 01       	movw	r24, r12
    116c:	aa 27       	eor	r26, r26
    116e:	bb 27       	eor	r27, r27
    1170:	57 01       	movw	r10, r14
    1172:	68 01       	movw	r12, r16
    1174:	a8 2a       	or	r10, r24
    1176:	b9 2a       	or	r11, r25
    1178:	ca 2a       	or	r12, r26
    117a:	db 2a       	or	r13, r27
    117c:	a2 16       	cp	r10, r18
    117e:	b3 06       	cpc	r11, r19
    1180:	c4 06       	cpc	r12, r20
    1182:	d5 06       	cpc	r13, r21
    1184:	90 f4       	brcc	.+36     	; 0x11aa <__umoddi3+0x286>
    1186:	a2 0c       	add	r10, r2
    1188:	b3 1c       	adc	r11, r3
    118a:	c4 1c       	adc	r12, r4
    118c:	d5 1c       	adc	r13, r5
    118e:	a2 14       	cp	r10, r2
    1190:	b3 04       	cpc	r11, r3
    1192:	c4 04       	cpc	r12, r4
    1194:	d5 04       	cpc	r13, r5
    1196:	48 f0       	brcs	.+18     	; 0x11aa <__umoddi3+0x286>
    1198:	a2 16       	cp	r10, r18
    119a:	b3 06       	cpc	r11, r19
    119c:	c4 06       	cpc	r12, r20
    119e:	d5 06       	cpc	r13, r21
    11a0:	20 f4       	brcc	.+8      	; 0x11aa <__umoddi3+0x286>
    11a2:	a2 0c       	add	r10, r2
    11a4:	b3 1c       	adc	r11, r3
    11a6:	c4 1c       	adc	r12, r4
    11a8:	d5 1c       	adc	r13, r5
    11aa:	a2 1a       	sub	r10, r18
    11ac:	b3 0a       	sbc	r11, r19
    11ae:	c4 0a       	sbc	r12, r20
    11b0:	d5 0a       	sbc	r13, r21
    11b2:	c6 01       	movw	r24, r12
    11b4:	b5 01       	movw	r22, r10
    11b6:	a4 01       	movw	r20, r8
    11b8:	93 01       	movw	r18, r6
    11ba:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
    11be:	7b 01       	movw	r14, r22
    11c0:	8c 01       	movw	r16, r24
    11c2:	c6 01       	movw	r24, r12
    11c4:	b5 01       	movw	r22, r10
    11c6:	a4 01       	movw	r20, r8
    11c8:	93 01       	movw	r18, r6
    11ca:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
    11ce:	ca 01       	movw	r24, r20
    11d0:	b9 01       	movw	r22, r18
    11d2:	21 96       	adiw	r28, 0x01	; 1
    11d4:	2c ad       	ldd	r18, Y+60	; 0x3c
    11d6:	3d ad       	ldd	r19, Y+61	; 0x3d
    11d8:	4e ad       	ldd	r20, Y+62	; 0x3e
    11da:	5f ad       	ldd	r21, Y+63	; 0x3f
    11dc:	21 97       	sbiw	r28, 0x01	; 1
    11de:	ba c1       	rjmp	.+884    	; 0x1554 <__umoddi3+0x630>
    11e0:	21 14       	cp	r2, r1
    11e2:	31 04       	cpc	r3, r1
    11e4:	41 04       	cpc	r4, r1
    11e6:	51 04       	cpc	r5, r1
    11e8:	71 f4       	brne	.+28     	; 0x1206 <__umoddi3+0x2e2>
    11ea:	61 e0       	ldi	r22, 0x01	; 1
    11ec:	70 e0       	ldi	r23, 0x00	; 0
    11ee:	80 e0       	ldi	r24, 0x00	; 0
    11f0:	90 e0       	ldi	r25, 0x00	; 0
    11f2:	20 e0       	ldi	r18, 0x00	; 0
    11f4:	30 e0       	ldi	r19, 0x00	; 0
    11f6:	40 e0       	ldi	r20, 0x00	; 0
    11f8:	50 e0       	ldi	r21, 0x00	; 0
    11fa:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
    11fe:	c9 01       	movw	r24, r18
    1200:	da 01       	movw	r26, r20
    1202:	1c 01       	movw	r2, r24
    1204:	2d 01       	movw	r4, r26
    1206:	00 e0       	ldi	r16, 0x00	; 0
    1208:	20 16       	cp	r2, r16
    120a:	00 e0       	ldi	r16, 0x00	; 0
    120c:	30 06       	cpc	r3, r16
    120e:	01 e0       	ldi	r16, 0x01	; 1
    1210:	40 06       	cpc	r4, r16
    1212:	00 e0       	ldi	r16, 0x00	; 0
    1214:	50 06       	cpc	r5, r16
    1216:	88 f4       	brcc	.+34     	; 0x123a <__umoddi3+0x316>
    1218:	1f ef       	ldi	r17, 0xFF	; 255
    121a:	21 16       	cp	r2, r17
    121c:	31 04       	cpc	r3, r1
    121e:	41 04       	cpc	r4, r1
    1220:	51 04       	cpc	r5, r1
    1222:	39 f0       	breq	.+14     	; 0x1232 <__umoddi3+0x30e>
    1224:	30 f0       	brcs	.+12     	; 0x1232 <__umoddi3+0x30e>
    1226:	68 e0       	ldi	r22, 0x08	; 8
    1228:	e6 2e       	mov	r14, r22
    122a:	f1 2c       	mov	r15, r1
    122c:	01 2d       	mov	r16, r1
    122e:	11 2d       	mov	r17, r1
    1230:	18 c0       	rjmp	.+48     	; 0x1262 <__umoddi3+0x33e>
    1232:	ee 24       	eor	r14, r14
    1234:	ff 24       	eor	r15, r15
    1236:	87 01       	movw	r16, r14
    1238:	14 c0       	rjmp	.+40     	; 0x1262 <__umoddi3+0x33e>
    123a:	40 e0       	ldi	r20, 0x00	; 0
    123c:	24 16       	cp	r2, r20
    123e:	40 e0       	ldi	r20, 0x00	; 0
    1240:	34 06       	cpc	r3, r20
    1242:	40 e0       	ldi	r20, 0x00	; 0
    1244:	44 06       	cpc	r4, r20
    1246:	41 e0       	ldi	r20, 0x01	; 1
    1248:	54 06       	cpc	r5, r20
    124a:	30 f0       	brcs	.+12     	; 0x1258 <__umoddi3+0x334>
    124c:	58 e1       	ldi	r21, 0x18	; 24
    124e:	e5 2e       	mov	r14, r21
    1250:	f1 2c       	mov	r15, r1
    1252:	01 2d       	mov	r16, r1
    1254:	11 2d       	mov	r17, r1
    1256:	05 c0       	rjmp	.+10     	; 0x1262 <__umoddi3+0x33e>
    1258:	40 e1       	ldi	r20, 0x10	; 16
    125a:	e4 2e       	mov	r14, r20
    125c:	f1 2c       	mov	r15, r1
    125e:	01 2d       	mov	r16, r1
    1260:	11 2d       	mov	r17, r1
    1262:	d2 01       	movw	r26, r4
    1264:	c1 01       	movw	r24, r2
    1266:	0e 2c       	mov	r0, r14
    1268:	04 c0       	rjmp	.+8      	; 0x1272 <__umoddi3+0x34e>
    126a:	b6 95       	lsr	r27
    126c:	a7 95       	ror	r26
    126e:	97 95       	ror	r25
    1270:	87 95       	ror	r24
    1272:	0a 94       	dec	r0
    1274:	d2 f7       	brpl	.-12     	; 0x126a <__umoddi3+0x346>
    1276:	88 59       	subi	r24, 0x98	; 152
    1278:	9f 4f       	sbci	r25, 0xFF	; 255
    127a:	dc 01       	movw	r26, r24
    127c:	2c 91       	ld	r18, X
    127e:	30 e2       	ldi	r19, 0x20	; 32
    1280:	a3 2e       	mov	r10, r19
    1282:	b1 2c       	mov	r11, r1
    1284:	c1 2c       	mov	r12, r1
    1286:	d1 2c       	mov	r13, r1
    1288:	d6 01       	movw	r26, r12
    128a:	c5 01       	movw	r24, r10
    128c:	8e 19       	sub	r24, r14
    128e:	9f 09       	sbc	r25, r15
    1290:	a0 0b       	sbc	r26, r16
    1292:	b1 0b       	sbc	r27, r17
    1294:	7c 01       	movw	r14, r24
    1296:	8d 01       	movw	r16, r26
    1298:	e2 1a       	sub	r14, r18
    129a:	f1 08       	sbc	r15, r1
    129c:	01 09       	sbc	r16, r1
    129e:	11 09       	sbc	r17, r1
    12a0:	e9 ae       	std	Y+57, r14	; 0x39
    12a2:	fa ae       	std	Y+58, r15	; 0x3a
    12a4:	0b af       	std	Y+59, r16	; 0x3b
    12a6:	1c af       	std	Y+60, r17	; 0x3c
    12a8:	e1 14       	cp	r14, r1
    12aa:	f1 04       	cpc	r15, r1
    12ac:	01 05       	cpc	r16, r1
    12ae:	11 05       	cpc	r17, r1
    12b0:	39 f4       	brne	.+14     	; 0x12c0 <__umoddi3+0x39c>
    12b2:	64 01       	movw	r12, r8
    12b4:	53 01       	movw	r10, r6
    12b6:	a2 18       	sub	r10, r2
    12b8:	b3 08       	sbc	r11, r3
    12ba:	c4 08       	sbc	r12, r4
    12bc:	d5 08       	sbc	r13, r5
    12be:	e2 c0       	rjmp	.+452    	; 0x1484 <__umoddi3+0x560>
    12c0:	f9 ac       	ldd	r15, Y+57	; 0x39
    12c2:	68 96       	adiw	r28, 0x18	; 24
    12c4:	ff ae       	std	Y+63, r15	; 0x3f
    12c6:	68 97       	sbiw	r28, 0x18	; 24
    12c8:	0f 2c       	mov	r0, r15
    12ca:	04 c0       	rjmp	.+8      	; 0x12d4 <__umoddi3+0x3b0>
    12cc:	22 0c       	add	r2, r2
    12ce:	33 1c       	adc	r3, r3
    12d0:	44 1c       	adc	r4, r4
    12d2:	55 1c       	adc	r5, r5
    12d4:	0a 94       	dec	r0
    12d6:	d2 f7       	brpl	.-12     	; 0x12cc <__umoddi3+0x3a8>
    12d8:	8a 2d       	mov	r24, r10
    12da:	8f 19       	sub	r24, r15
    12dc:	64 01       	movw	r12, r8
    12de:	53 01       	movw	r10, r6
    12e0:	08 2e       	mov	r0, r24
    12e2:	04 c0       	rjmp	.+8      	; 0x12ec <__umoddi3+0x3c8>
    12e4:	d6 94       	lsr	r13
    12e6:	c7 94       	ror	r12
    12e8:	b7 94       	ror	r11
    12ea:	a7 94       	ror	r10
    12ec:	0a 94       	dec	r0
    12ee:	d2 f7       	brpl	.-12     	; 0x12e4 <__umoddi3+0x3c0>
    12f0:	a4 01       	movw	r20, r8
    12f2:	93 01       	movw	r18, r6
    12f4:	04 c0       	rjmp	.+8      	; 0x12fe <__umoddi3+0x3da>
    12f6:	22 0f       	add	r18, r18
    12f8:	33 1f       	adc	r19, r19
    12fa:	44 1f       	adc	r20, r20
    12fc:	55 1f       	adc	r21, r21
    12fe:	fa 94       	dec	r15
    1300:	d2 f7       	brpl	.-12     	; 0x12f6 <__umoddi3+0x3d2>
    1302:	6c 96       	adiw	r28, 0x1c	; 28
    1304:	6c ac       	ldd	r6, Y+60	; 0x3c
    1306:	7d ac       	ldd	r7, Y+61	; 0x3d
    1308:	8e ac       	ldd	r8, Y+62	; 0x3e
    130a:	9f ac       	ldd	r9, Y+63	; 0x3f
    130c:	6c 97       	sbiw	r28, 0x1c	; 28
    130e:	04 c0       	rjmp	.+8      	; 0x1318 <__umoddi3+0x3f4>
    1310:	96 94       	lsr	r9
    1312:	87 94       	ror	r8
    1314:	77 94       	ror	r7
    1316:	67 94       	ror	r6
    1318:	8a 95       	dec	r24
    131a:	d2 f7       	brpl	.-12     	; 0x1310 <__umoddi3+0x3ec>
    131c:	84 01       	movw	r16, r8
    131e:	73 01       	movw	r14, r6
    1320:	e2 2a       	or	r14, r18
    1322:	f3 2a       	or	r15, r19
    1324:	04 2b       	or	r16, r20
    1326:	15 2b       	or	r17, r21
    1328:	ed a6       	std	Y+45, r14	; 0x2d
    132a:	fe a6       	std	Y+46, r15	; 0x2e
    132c:	0f a7       	std	Y+47, r16	; 0x2f
    132e:	18 ab       	std	Y+48, r17	; 0x30
    1330:	32 01       	movw	r6, r4
    1332:	88 24       	eor	r8, r8
    1334:	99 24       	eor	r9, r9
    1336:	b2 01       	movw	r22, r4
    1338:	a1 01       	movw	r20, r2
    133a:	60 70       	andi	r22, 0x00	; 0
    133c:	70 70       	andi	r23, 0x00	; 0
    133e:	25 96       	adiw	r28, 0x05	; 5
    1340:	4c af       	std	Y+60, r20	; 0x3c
    1342:	5d af       	std	Y+61, r21	; 0x3d
    1344:	6e af       	std	Y+62, r22	; 0x3e
    1346:	7f af       	std	Y+63, r23	; 0x3f
    1348:	25 97       	sbiw	r28, 0x05	; 5
    134a:	c6 01       	movw	r24, r12
    134c:	b5 01       	movw	r22, r10
    134e:	a4 01       	movw	r20, r8
    1350:	93 01       	movw	r18, r6
    1352:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
    1356:	7b 01       	movw	r14, r22
    1358:	8c 01       	movw	r16, r24
    135a:	c6 01       	movw	r24, r12
    135c:	b5 01       	movw	r22, r10
    135e:	a4 01       	movw	r20, r8
    1360:	93 01       	movw	r18, r6
    1362:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
    1366:	ca 01       	movw	r24, r20
    1368:	b9 01       	movw	r22, r18
    136a:	25 96       	adiw	r28, 0x05	; 5
    136c:	2c ad       	ldd	r18, Y+60	; 0x3c
    136e:	3d ad       	ldd	r19, Y+61	; 0x3d
    1370:	4e ad       	ldd	r20, Y+62	; 0x3e
    1372:	5f ad       	ldd	r21, Y+63	; 0x3f
    1374:	25 97       	sbiw	r28, 0x05	; 5
    1376:	0e 94 51 30 	call	0x60a2	; 0x60a2 <__mulsi3>
    137a:	9b 01       	movw	r18, r22
    137c:	ac 01       	movw	r20, r24
    137e:	87 01       	movw	r16, r14
    1380:	ff 24       	eor	r15, r15
    1382:	ee 24       	eor	r14, r14
    1384:	ad a4       	ldd	r10, Y+45	; 0x2d
    1386:	be a4       	ldd	r11, Y+46	; 0x2e
    1388:	cf a4       	ldd	r12, Y+47	; 0x2f
    138a:	d8 a8       	ldd	r13, Y+48	; 0x30
    138c:	c6 01       	movw	r24, r12
    138e:	aa 27       	eor	r26, r26
    1390:	bb 27       	eor	r27, r27
    1392:	5c 01       	movw	r10, r24
    1394:	6d 01       	movw	r12, r26
    1396:	ae 28       	or	r10, r14
    1398:	bf 28       	or	r11, r15
    139a:	c0 2a       	or	r12, r16
    139c:	d1 2a       	or	r13, r17
    139e:	a2 16       	cp	r10, r18
    13a0:	b3 06       	cpc	r11, r19
    13a2:	c4 06       	cpc	r12, r20
    13a4:	d5 06       	cpc	r13, r21
    13a6:	90 f4       	brcc	.+36     	; 0x13cc <__umoddi3+0x4a8>
    13a8:	a2 0c       	add	r10, r2
    13aa:	b3 1c       	adc	r11, r3
    13ac:	c4 1c       	adc	r12, r4
    13ae:	d5 1c       	adc	r13, r5
    13b0:	a2 14       	cp	r10, r2
    13b2:	b3 04       	cpc	r11, r3
    13b4:	c4 04       	cpc	r12, r4
    13b6:	d5 04       	cpc	r13, r5
    13b8:	48 f0       	brcs	.+18     	; 0x13cc <__umoddi3+0x4a8>
    13ba:	a2 16       	cp	r10, r18
    13bc:	b3 06       	cpc	r11, r19
    13be:	c4 06       	cpc	r12, r20
    13c0:	d5 06       	cpc	r13, r21
    13c2:	20 f4       	brcc	.+8      	; 0x13cc <__umoddi3+0x4a8>
    13c4:	a2 0c       	add	r10, r2
    13c6:	b3 1c       	adc	r11, r3
    13c8:	c4 1c       	adc	r12, r4
    13ca:	d5 1c       	adc	r13, r5
    13cc:	a2 1a       	sub	r10, r18
    13ce:	b3 0a       	sbc	r11, r19
    13d0:	c4 0a       	sbc	r12, r20
    13d2:	d5 0a       	sbc	r13, r21
    13d4:	c6 01       	movw	r24, r12
    13d6:	b5 01       	movw	r22, r10
    13d8:	a4 01       	movw	r20, r8
    13da:	93 01       	movw	r18, r6
    13dc:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
    13e0:	7b 01       	movw	r14, r22
    13e2:	8c 01       	movw	r16, r24
    13e4:	c6 01       	movw	r24, r12
    13e6:	b5 01       	movw	r22, r10
    13e8:	a4 01       	movw	r20, r8
    13ea:	93 01       	movw	r18, r6
    13ec:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
    13f0:	ca 01       	movw	r24, r20
    13f2:	b9 01       	movw	r22, r18
    13f4:	25 96       	adiw	r28, 0x05	; 5
    13f6:	2c ad       	ldd	r18, Y+60	; 0x3c
    13f8:	3d ad       	ldd	r19, Y+61	; 0x3d
    13fa:	4e ad       	ldd	r20, Y+62	; 0x3e
    13fc:	5f ad       	ldd	r21, Y+63	; 0x3f
    13fe:	25 97       	sbiw	r28, 0x05	; 5
    1400:	0e 94 51 30 	call	0x60a2	; 0x60a2 <__mulsi3>
    1404:	9b 01       	movw	r18, r22
    1406:	ac 01       	movw	r20, r24
    1408:	87 01       	movw	r16, r14
    140a:	ff 24       	eor	r15, r15
    140c:	ee 24       	eor	r14, r14
    140e:	8d a5       	ldd	r24, Y+45	; 0x2d
    1410:	9e a5       	ldd	r25, Y+46	; 0x2e
    1412:	af a5       	ldd	r26, Y+47	; 0x2f
    1414:	b8 a9       	ldd	r27, Y+48	; 0x30
    1416:	a0 70       	andi	r26, 0x00	; 0
    1418:	b0 70       	andi	r27, 0x00	; 0
    141a:	57 01       	movw	r10, r14
    141c:	68 01       	movw	r12, r16
    141e:	a8 2a       	or	r10, r24
    1420:	b9 2a       	or	r11, r25
    1422:	ca 2a       	or	r12, r26
    1424:	db 2a       	or	r13, r27
    1426:	a2 16       	cp	r10, r18
    1428:	b3 06       	cpc	r11, r19
    142a:	c4 06       	cpc	r12, r20
    142c:	d5 06       	cpc	r13, r21
    142e:	90 f4       	brcc	.+36     	; 0x1454 <__umoddi3+0x530>
    1430:	a2 0c       	add	r10, r2
    1432:	b3 1c       	adc	r11, r3
    1434:	c4 1c       	adc	r12, r4
    1436:	d5 1c       	adc	r13, r5
    1438:	a2 14       	cp	r10, r2
    143a:	b3 04       	cpc	r11, r3
    143c:	c4 04       	cpc	r12, r4
    143e:	d5 04       	cpc	r13, r5
    1440:	48 f0       	brcs	.+18     	; 0x1454 <__umoddi3+0x530>
    1442:	a2 16       	cp	r10, r18
    1444:	b3 06       	cpc	r11, r19
    1446:	c4 06       	cpc	r12, r20
    1448:	d5 06       	cpc	r13, r21
    144a:	20 f4       	brcc	.+8      	; 0x1454 <__umoddi3+0x530>
    144c:	a2 0c       	add	r10, r2
    144e:	b3 1c       	adc	r11, r3
    1450:	c4 1c       	adc	r12, r4
    1452:	d5 1c       	adc	r13, r5
    1454:	6c 96       	adiw	r28, 0x1c	; 28
    1456:	ec ac       	ldd	r14, Y+60	; 0x3c
    1458:	fd ac       	ldd	r15, Y+61	; 0x3d
    145a:	0e ad       	ldd	r16, Y+62	; 0x3e
    145c:	1f ad       	ldd	r17, Y+63	; 0x3f
    145e:	6c 97       	sbiw	r28, 0x1c	; 28
    1460:	68 96       	adiw	r28, 0x18	; 24
    1462:	0f ac       	ldd	r0, Y+63	; 0x3f
    1464:	68 97       	sbiw	r28, 0x18	; 24
    1466:	04 c0       	rjmp	.+8      	; 0x1470 <__umoddi3+0x54c>
    1468:	ee 0c       	add	r14, r14
    146a:	ff 1c       	adc	r15, r15
    146c:	00 1f       	adc	r16, r16
    146e:	11 1f       	adc	r17, r17
    1470:	0a 94       	dec	r0
    1472:	d2 f7       	brpl	.-12     	; 0x1468 <__umoddi3+0x544>
    1474:	e9 aa       	std	Y+49, r14	; 0x31
    1476:	fa aa       	std	Y+50, r15	; 0x32
    1478:	0b ab       	std	Y+51, r16	; 0x33
    147a:	1c ab       	std	Y+52, r17	; 0x34
    147c:	a2 1a       	sub	r10, r18
    147e:	b3 0a       	sbc	r11, r19
    1480:	c4 0a       	sbc	r12, r20
    1482:	d5 0a       	sbc	r13, r21
    1484:	32 01       	movw	r6, r4
    1486:	88 24       	eor	r8, r8
    1488:	99 24       	eor	r9, r9
    148a:	b2 01       	movw	r22, r4
    148c:	a1 01       	movw	r20, r2
    148e:	60 70       	andi	r22, 0x00	; 0
    1490:	70 70       	andi	r23, 0x00	; 0
    1492:	29 96       	adiw	r28, 0x09	; 9
    1494:	4c af       	std	Y+60, r20	; 0x3c
    1496:	5d af       	std	Y+61, r21	; 0x3d
    1498:	6e af       	std	Y+62, r22	; 0x3e
    149a:	7f af       	std	Y+63, r23	; 0x3f
    149c:	29 97       	sbiw	r28, 0x09	; 9
    149e:	c6 01       	movw	r24, r12
    14a0:	b5 01       	movw	r22, r10
    14a2:	a4 01       	movw	r20, r8
    14a4:	93 01       	movw	r18, r6
    14a6:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
    14aa:	7b 01       	movw	r14, r22
    14ac:	8c 01       	movw	r16, r24
    14ae:	c6 01       	movw	r24, r12
    14b0:	b5 01       	movw	r22, r10
    14b2:	a4 01       	movw	r20, r8
    14b4:	93 01       	movw	r18, r6
    14b6:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
    14ba:	ca 01       	movw	r24, r20
    14bc:	b9 01       	movw	r22, r18
    14be:	29 96       	adiw	r28, 0x09	; 9
    14c0:	2c ad       	ldd	r18, Y+60	; 0x3c
    14c2:	3d ad       	ldd	r19, Y+61	; 0x3d
    14c4:	4e ad       	ldd	r20, Y+62	; 0x3e
    14c6:	5f ad       	ldd	r21, Y+63	; 0x3f
    14c8:	29 97       	sbiw	r28, 0x09	; 9
    14ca:	0e 94 51 30 	call	0x60a2	; 0x60a2 <__mulsi3>
    14ce:	9b 01       	movw	r18, r22
    14d0:	ac 01       	movw	r20, r24
    14d2:	87 01       	movw	r16, r14
    14d4:	ff 24       	eor	r15, r15
    14d6:	ee 24       	eor	r14, r14
    14d8:	a9 a8       	ldd	r10, Y+49	; 0x31
    14da:	ba a8       	ldd	r11, Y+50	; 0x32
    14dc:	cb a8       	ldd	r12, Y+51	; 0x33
    14de:	dc a8       	ldd	r13, Y+52	; 0x34
    14e0:	c6 01       	movw	r24, r12
    14e2:	aa 27       	eor	r26, r26
    14e4:	bb 27       	eor	r27, r27
    14e6:	57 01       	movw	r10, r14
    14e8:	68 01       	movw	r12, r16
    14ea:	a8 2a       	or	r10, r24
    14ec:	b9 2a       	or	r11, r25
    14ee:	ca 2a       	or	r12, r26
    14f0:	db 2a       	or	r13, r27
    14f2:	a2 16       	cp	r10, r18
    14f4:	b3 06       	cpc	r11, r19
    14f6:	c4 06       	cpc	r12, r20
    14f8:	d5 06       	cpc	r13, r21
    14fa:	90 f4       	brcc	.+36     	; 0x1520 <__umoddi3+0x5fc>
    14fc:	a2 0c       	add	r10, r2
    14fe:	b3 1c       	adc	r11, r3
    1500:	c4 1c       	adc	r12, r4
    1502:	d5 1c       	adc	r13, r5
    1504:	a2 14       	cp	r10, r2
    1506:	b3 04       	cpc	r11, r3
    1508:	c4 04       	cpc	r12, r4
    150a:	d5 04       	cpc	r13, r5
    150c:	48 f0       	brcs	.+18     	; 0x1520 <__umoddi3+0x5fc>
    150e:	a2 16       	cp	r10, r18
    1510:	b3 06       	cpc	r11, r19
    1512:	c4 06       	cpc	r12, r20
    1514:	d5 06       	cpc	r13, r21
    1516:	20 f4       	brcc	.+8      	; 0x1520 <__umoddi3+0x5fc>
    1518:	a2 0c       	add	r10, r2
    151a:	b3 1c       	adc	r11, r3
    151c:	c4 1c       	adc	r12, r4
    151e:	d5 1c       	adc	r13, r5
    1520:	a2 1a       	sub	r10, r18
    1522:	b3 0a       	sbc	r11, r19
    1524:	c4 0a       	sbc	r12, r20
    1526:	d5 0a       	sbc	r13, r21
    1528:	c6 01       	movw	r24, r12
    152a:	b5 01       	movw	r22, r10
    152c:	a4 01       	movw	r20, r8
    152e:	93 01       	movw	r18, r6
    1530:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
    1534:	7b 01       	movw	r14, r22
    1536:	8c 01       	movw	r16, r24
    1538:	c6 01       	movw	r24, r12
    153a:	b5 01       	movw	r22, r10
    153c:	a4 01       	movw	r20, r8
    153e:	93 01       	movw	r18, r6
    1540:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
    1544:	ca 01       	movw	r24, r20
    1546:	b9 01       	movw	r22, r18
    1548:	29 96       	adiw	r28, 0x09	; 9
    154a:	2c ad       	ldd	r18, Y+60	; 0x3c
    154c:	3d ad       	ldd	r19, Y+61	; 0x3d
    154e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1550:	5f ad       	ldd	r21, Y+63	; 0x3f
    1552:	29 97       	sbiw	r28, 0x09	; 9
    1554:	0e 94 51 30 	call	0x60a2	; 0x60a2 <__mulsi3>
    1558:	9b 01       	movw	r18, r22
    155a:	ac 01       	movw	r20, r24
    155c:	87 01       	movw	r16, r14
    155e:	ff 24       	eor	r15, r15
    1560:	ee 24       	eor	r14, r14
    1562:	89 a9       	ldd	r24, Y+49	; 0x31
    1564:	9a a9       	ldd	r25, Y+50	; 0x32
    1566:	ab a9       	ldd	r26, Y+51	; 0x33
    1568:	bc a9       	ldd	r27, Y+52	; 0x34
    156a:	a0 70       	andi	r26, 0x00	; 0
    156c:	b0 70       	andi	r27, 0x00	; 0
    156e:	e8 2a       	or	r14, r24
    1570:	f9 2a       	or	r15, r25
    1572:	0a 2b       	or	r16, r26
    1574:	1b 2b       	or	r17, r27
    1576:	e2 16       	cp	r14, r18
    1578:	f3 06       	cpc	r15, r19
    157a:	04 07       	cpc	r16, r20
    157c:	15 07       	cpc	r17, r21
    157e:	90 f4       	brcc	.+36     	; 0x15a4 <__umoddi3+0x680>
    1580:	e2 0c       	add	r14, r2
    1582:	f3 1c       	adc	r15, r3
    1584:	04 1d       	adc	r16, r4
    1586:	15 1d       	adc	r17, r5
    1588:	e2 14       	cp	r14, r2
    158a:	f3 04       	cpc	r15, r3
    158c:	04 05       	cpc	r16, r4
    158e:	15 05       	cpc	r17, r5
    1590:	48 f0       	brcs	.+18     	; 0x15a4 <__umoddi3+0x680>
    1592:	e2 16       	cp	r14, r18
    1594:	f3 06       	cpc	r15, r19
    1596:	04 07       	cpc	r16, r20
    1598:	15 07       	cpc	r17, r21
    159a:	20 f4       	brcc	.+8      	; 0x15a4 <__umoddi3+0x680>
    159c:	e2 0c       	add	r14, r2
    159e:	f3 1c       	adc	r15, r3
    15a0:	04 1d       	adc	r16, r4
    15a2:	15 1d       	adc	r17, r5
    15a4:	e2 1a       	sub	r14, r18
    15a6:	f3 0a       	sbc	r15, r19
    15a8:	04 0b       	sbc	r16, r20
    15aa:	15 0b       	sbc	r17, r21
    15ac:	d8 01       	movw	r26, r16
    15ae:	c7 01       	movw	r24, r14
    15b0:	09 ac       	ldd	r0, Y+57	; 0x39
    15b2:	04 c0       	rjmp	.+8      	; 0x15bc <__umoddi3+0x698>
    15b4:	b6 95       	lsr	r27
    15b6:	a7 95       	ror	r26
    15b8:	97 95       	ror	r25
    15ba:	87 95       	ror	r24
    15bc:	0a 94       	dec	r0
    15be:	d2 f7       	brpl	.-12     	; 0x15b4 <__umoddi3+0x690>
    15c0:	89 8b       	std	Y+17, r24	; 0x11
    15c2:	9a 8b       	std	Y+18, r25	; 0x12
    15c4:	ab 8b       	std	Y+19, r26	; 0x13
    15c6:	bc 8b       	std	Y+20, r27	; 0x14
    15c8:	1d 8a       	std	Y+21, r1	; 0x15
    15ca:	1e 8a       	std	Y+22, r1	; 0x16
    15cc:	1f 8a       	std	Y+23, r1	; 0x17
    15ce:	18 8e       	std	Y+24, r1	; 0x18
    15d0:	28 2f       	mov	r18, r24
    15d2:	3a 89       	ldd	r19, Y+18	; 0x12
    15d4:	4b 89       	ldd	r20, Y+19	; 0x13
    15d6:	5c 89       	ldd	r21, Y+20	; 0x14
    15d8:	6d 89       	ldd	r22, Y+21	; 0x15
    15da:	0c c3       	rjmp	.+1560   	; 0x1bf4 <__umoddi3+0xcd0>
    15dc:	6a 14       	cp	r6, r10
    15de:	7b 04       	cpc	r7, r11
    15e0:	8c 04       	cpc	r8, r12
    15e2:	9d 04       	cpc	r9, r13
    15e4:	08 f4       	brcc	.+2      	; 0x15e8 <__umoddi3+0x6c4>
    15e6:	09 c3       	rjmp	.+1554   	; 0x1bfa <__umoddi3+0xcd6>
    15e8:	00 e0       	ldi	r16, 0x00	; 0
    15ea:	a0 16       	cp	r10, r16
    15ec:	00 e0       	ldi	r16, 0x00	; 0
    15ee:	b0 06       	cpc	r11, r16
    15f0:	01 e0       	ldi	r16, 0x01	; 1
    15f2:	c0 06       	cpc	r12, r16
    15f4:	00 e0       	ldi	r16, 0x00	; 0
    15f6:	d0 06       	cpc	r13, r16
    15f8:	88 f4       	brcc	.+34     	; 0x161c <__umoddi3+0x6f8>
    15fa:	1f ef       	ldi	r17, 0xFF	; 255
    15fc:	a1 16       	cp	r10, r17
    15fe:	b1 04       	cpc	r11, r1
    1600:	c1 04       	cpc	r12, r1
    1602:	d1 04       	cpc	r13, r1
    1604:	39 f0       	breq	.+14     	; 0x1614 <__umoddi3+0x6f0>
    1606:	30 f0       	brcs	.+12     	; 0x1614 <__umoddi3+0x6f0>
    1608:	28 e0       	ldi	r18, 0x08	; 8
    160a:	e2 2e       	mov	r14, r18
    160c:	f1 2c       	mov	r15, r1
    160e:	01 2d       	mov	r16, r1
    1610:	11 2d       	mov	r17, r1
    1612:	18 c0       	rjmp	.+48     	; 0x1644 <__umoddi3+0x720>
    1614:	ee 24       	eor	r14, r14
    1616:	ff 24       	eor	r15, r15
    1618:	87 01       	movw	r16, r14
    161a:	14 c0       	rjmp	.+40     	; 0x1644 <__umoddi3+0x720>
    161c:	40 e0       	ldi	r20, 0x00	; 0
    161e:	a4 16       	cp	r10, r20
    1620:	40 e0       	ldi	r20, 0x00	; 0
    1622:	b4 06       	cpc	r11, r20
    1624:	40 e0       	ldi	r20, 0x00	; 0
    1626:	c4 06       	cpc	r12, r20
    1628:	41 e0       	ldi	r20, 0x01	; 1
    162a:	d4 06       	cpc	r13, r20
    162c:	30 f0       	brcs	.+12     	; 0x163a <__umoddi3+0x716>
    162e:	98 e1       	ldi	r25, 0x18	; 24
    1630:	e9 2e       	mov	r14, r25
    1632:	f1 2c       	mov	r15, r1
    1634:	01 2d       	mov	r16, r1
    1636:	11 2d       	mov	r17, r1
    1638:	05 c0       	rjmp	.+10     	; 0x1644 <__umoddi3+0x720>
    163a:	80 e1       	ldi	r24, 0x10	; 16
    163c:	e8 2e       	mov	r14, r24
    163e:	f1 2c       	mov	r15, r1
    1640:	01 2d       	mov	r16, r1
    1642:	11 2d       	mov	r17, r1
    1644:	d6 01       	movw	r26, r12
    1646:	c5 01       	movw	r24, r10
    1648:	0e 2c       	mov	r0, r14
    164a:	04 c0       	rjmp	.+8      	; 0x1654 <__umoddi3+0x730>
    164c:	b6 95       	lsr	r27
    164e:	a7 95       	ror	r26
    1650:	97 95       	ror	r25
    1652:	87 95       	ror	r24
    1654:	0a 94       	dec	r0
    1656:	d2 f7       	brpl	.-12     	; 0x164c <__umoddi3+0x728>
    1658:	88 59       	subi	r24, 0x98	; 152
    165a:	9f 4f       	sbci	r25, 0xFF	; 255
    165c:	dc 01       	movw	r26, r24
    165e:	2c 91       	ld	r18, X
    1660:	80 e2       	ldi	r24, 0x20	; 32
    1662:	90 e0       	ldi	r25, 0x00	; 0
    1664:	a0 e0       	ldi	r26, 0x00	; 0
    1666:	b0 e0       	ldi	r27, 0x00	; 0
    1668:	8e 19       	sub	r24, r14
    166a:	9f 09       	sbc	r25, r15
    166c:	a0 0b       	sbc	r26, r16
    166e:	b1 0b       	sbc	r27, r17
    1670:	82 1b       	sub	r24, r18
    1672:	91 09       	sbc	r25, r1
    1674:	a1 09       	sbc	r26, r1
    1676:	b1 09       	sbc	r27, r1
    1678:	00 97       	sbiw	r24, 0x00	; 0
    167a:	a1 05       	cpc	r26, r1
    167c:	b1 05       	cpc	r27, r1
    167e:	09 f0       	breq	.+2      	; 0x1682 <__umoddi3+0x75e>
    1680:	4f c0       	rjmp	.+158    	; 0x1720 <__umoddi3+0x7fc>
    1682:	a6 14       	cp	r10, r6
    1684:	b7 04       	cpc	r11, r7
    1686:	c8 04       	cpc	r12, r8
    1688:	d9 04       	cpc	r13, r9
    168a:	58 f0       	brcs	.+22     	; 0x16a2 <__umoddi3+0x77e>
    168c:	6c 96       	adiw	r28, 0x1c	; 28
    168e:	ec ac       	ldd	r14, Y+60	; 0x3c
    1690:	fd ac       	ldd	r15, Y+61	; 0x3d
    1692:	0e ad       	ldd	r16, Y+62	; 0x3e
    1694:	1f ad       	ldd	r17, Y+63	; 0x3f
    1696:	6c 97       	sbiw	r28, 0x1c	; 28
    1698:	e2 14       	cp	r14, r2
    169a:	f3 04       	cpc	r15, r3
    169c:	04 05       	cpc	r16, r4
    169e:	15 05       	cpc	r17, r5
    16a0:	68 f1       	brcs	.+90     	; 0x16fc <__umoddi3+0x7d8>
    16a2:	6c 96       	adiw	r28, 0x1c	; 28
    16a4:	ec ac       	ldd	r14, Y+60	; 0x3c
    16a6:	fd ac       	ldd	r15, Y+61	; 0x3d
    16a8:	0e ad       	ldd	r16, Y+62	; 0x3e
    16aa:	1f ad       	ldd	r17, Y+63	; 0x3f
    16ac:	6c 97       	sbiw	r28, 0x1c	; 28
    16ae:	e2 18       	sub	r14, r2
    16b0:	f3 08       	sbc	r15, r3
    16b2:	04 09       	sbc	r16, r4
    16b4:	15 09       	sbc	r17, r5
    16b6:	a4 01       	movw	r20, r8
    16b8:	93 01       	movw	r18, r6
    16ba:	2a 19       	sub	r18, r10
    16bc:	3b 09       	sbc	r19, r11
    16be:	4c 09       	sbc	r20, r12
    16c0:	5d 09       	sbc	r21, r13
    16c2:	aa 24       	eor	r10, r10
    16c4:	bb 24       	eor	r11, r11
    16c6:	65 01       	movw	r12, r10
    16c8:	6c 96       	adiw	r28, 0x1c	; 28
    16ca:	6c ad       	ldd	r22, Y+60	; 0x3c
    16cc:	7d ad       	ldd	r23, Y+61	; 0x3d
    16ce:	8e ad       	ldd	r24, Y+62	; 0x3e
    16d0:	9f ad       	ldd	r25, Y+63	; 0x3f
    16d2:	6c 97       	sbiw	r28, 0x1c	; 28
    16d4:	6e 15       	cp	r22, r14
    16d6:	7f 05       	cpc	r23, r15
    16d8:	80 07       	cpc	r24, r16
    16da:	91 07       	cpc	r25, r17
    16dc:	28 f4       	brcc	.+10     	; 0x16e8 <__umoddi3+0x7c4>
    16de:	b1 e0       	ldi	r27, 0x01	; 1
    16e0:	ab 2e       	mov	r10, r27
    16e2:	b1 2c       	mov	r11, r1
    16e4:	c1 2c       	mov	r12, r1
    16e6:	d1 2c       	mov	r13, r1
    16e8:	da 01       	movw	r26, r20
    16ea:	c9 01       	movw	r24, r18
    16ec:	8a 19       	sub	r24, r10
    16ee:	9b 09       	sbc	r25, r11
    16f0:	ac 09       	sbc	r26, r12
    16f2:	bd 09       	sbc	r27, r13
    16f4:	8d ab       	std	Y+53, r24	; 0x35
    16f6:	9e ab       	std	Y+54, r25	; 0x36
    16f8:	af ab       	std	Y+55, r26	; 0x37
    16fa:	b8 af       	std	Y+56, r27	; 0x38
    16fc:	e9 8a       	std	Y+17, r14	; 0x11
    16fe:	fa 8a       	std	Y+18, r15	; 0x12
    1700:	0b 8b       	std	Y+19, r16	; 0x13
    1702:	1c 8b       	std	Y+20, r17	; 0x14
    1704:	6d a8       	ldd	r6, Y+53	; 0x35
    1706:	7e a8       	ldd	r7, Y+54	; 0x36
    1708:	8f a8       	ldd	r8, Y+55	; 0x37
    170a:	98 ac       	ldd	r9, Y+56	; 0x38
    170c:	6d 8a       	std	Y+21, r6	; 0x15
    170e:	7e 8a       	std	Y+22, r7	; 0x16
    1710:	8f 8a       	std	Y+23, r8	; 0x17
    1712:	98 8e       	std	Y+24, r9	; 0x18
    1714:	2e 2d       	mov	r18, r14
    1716:	3a 89       	ldd	r19, Y+18	; 0x12
    1718:	4b 89       	ldd	r20, Y+19	; 0x13
    171a:	5c 89       	ldd	r21, Y+20	; 0x14
    171c:	6d a9       	ldd	r22, Y+53	; 0x35
    171e:	6a c2       	rjmp	.+1236   	; 0x1bf4 <__umoddi3+0xcd0>
    1720:	67 96       	adiw	r28, 0x17	; 23
    1722:	8f af       	std	Y+63, r24	; 0x3f
    1724:	67 97       	sbiw	r28, 0x17	; 23
    1726:	a6 01       	movw	r20, r12
    1728:	95 01       	movw	r18, r10
    172a:	08 2e       	mov	r0, r24
    172c:	04 c0       	rjmp	.+8      	; 0x1736 <__umoddi3+0x812>
    172e:	22 0f       	add	r18, r18
    1730:	33 1f       	adc	r19, r19
    1732:	44 1f       	adc	r20, r20
    1734:	55 1f       	adc	r21, r21
    1736:	0a 94       	dec	r0
    1738:	d2 f7       	brpl	.-12     	; 0x172e <__umoddi3+0x80a>
    173a:	a0 e2       	ldi	r26, 0x20	; 32
    173c:	aa 2e       	mov	r10, r26
    173e:	a8 1a       	sub	r10, r24
    1740:	66 96       	adiw	r28, 0x16	; 22
    1742:	af ae       	std	Y+63, r10	; 0x3f
    1744:	66 97       	sbiw	r28, 0x16	; 22
    1746:	d2 01       	movw	r26, r4
    1748:	c1 01       	movw	r24, r2
    174a:	04 c0       	rjmp	.+8      	; 0x1754 <__umoddi3+0x830>
    174c:	b6 95       	lsr	r27
    174e:	a7 95       	ror	r26
    1750:	97 95       	ror	r25
    1752:	87 95       	ror	r24
    1754:	aa 94       	dec	r10
    1756:	d2 f7       	brpl	.-12     	; 0x174c <__umoddi3+0x828>
    1758:	6c 01       	movw	r12, r24
    175a:	7d 01       	movw	r14, r26
    175c:	c2 2a       	or	r12, r18
    175e:	d3 2a       	or	r13, r19
    1760:	e4 2a       	or	r14, r20
    1762:	f5 2a       	or	r15, r21
    1764:	c9 a6       	std	Y+41, r12	; 0x29
    1766:	da a6       	std	Y+42, r13	; 0x2a
    1768:	eb a6       	std	Y+43, r14	; 0x2b
    176a:	fc a6       	std	Y+44, r15	; 0x2c
    176c:	82 01       	movw	r16, r4
    176e:	71 01       	movw	r14, r2
    1770:	67 96       	adiw	r28, 0x17	; 23
    1772:	0f ac       	ldd	r0, Y+63	; 0x3f
    1774:	67 97       	sbiw	r28, 0x17	; 23
    1776:	04 c0       	rjmp	.+8      	; 0x1780 <__umoddi3+0x85c>
    1778:	ee 0c       	add	r14, r14
    177a:	ff 1c       	adc	r15, r15
    177c:	00 1f       	adc	r16, r16
    177e:	11 1f       	adc	r17, r17
    1780:	0a 94       	dec	r0
    1782:	d2 f7       	brpl	.-12     	; 0x1778 <__umoddi3+0x854>
    1784:	ed a2       	std	Y+37, r14	; 0x25
    1786:	fe a2       	std	Y+38, r15	; 0x26
    1788:	0f a3       	std	Y+39, r16	; 0x27
    178a:	18 a7       	std	Y+40, r17	; 0x28
    178c:	64 01       	movw	r12, r8
    178e:	53 01       	movw	r10, r6
    1790:	66 96       	adiw	r28, 0x16	; 22
    1792:	0f ac       	ldd	r0, Y+63	; 0x3f
    1794:	66 97       	sbiw	r28, 0x16	; 22
    1796:	04 c0       	rjmp	.+8      	; 0x17a0 <__umoddi3+0x87c>
    1798:	d6 94       	lsr	r13
    179a:	c7 94       	ror	r12
    179c:	b7 94       	ror	r11
    179e:	a7 94       	ror	r10
    17a0:	0a 94       	dec	r0
    17a2:	d2 f7       	brpl	.-12     	; 0x1798 <__umoddi3+0x874>
    17a4:	a4 01       	movw	r20, r8
    17a6:	93 01       	movw	r18, r6
    17a8:	67 96       	adiw	r28, 0x17	; 23
    17aa:	0f ac       	ldd	r0, Y+63	; 0x3f
    17ac:	67 97       	sbiw	r28, 0x17	; 23
    17ae:	04 c0       	rjmp	.+8      	; 0x17b8 <__umoddi3+0x894>
    17b0:	22 0f       	add	r18, r18
    17b2:	33 1f       	adc	r19, r19
    17b4:	44 1f       	adc	r20, r20
    17b6:	55 1f       	adc	r21, r21
    17b8:	0a 94       	dec	r0
    17ba:	d2 f7       	brpl	.-12     	; 0x17b0 <__umoddi3+0x88c>
    17bc:	6c 96       	adiw	r28, 0x1c	; 28
    17be:	8c ad       	ldd	r24, Y+60	; 0x3c
    17c0:	9d ad       	ldd	r25, Y+61	; 0x3d
    17c2:	ae ad       	ldd	r26, Y+62	; 0x3e
    17c4:	bf ad       	ldd	r27, Y+63	; 0x3f
    17c6:	6c 97       	sbiw	r28, 0x1c	; 28
    17c8:	66 96       	adiw	r28, 0x16	; 22
    17ca:	0f ac       	ldd	r0, Y+63	; 0x3f
    17cc:	66 97       	sbiw	r28, 0x16	; 22
    17ce:	04 c0       	rjmp	.+8      	; 0x17d8 <__umoddi3+0x8b4>
    17d0:	b6 95       	lsr	r27
    17d2:	a7 95       	ror	r26
    17d4:	97 95       	ror	r25
    17d6:	87 95       	ror	r24
    17d8:	0a 94       	dec	r0
    17da:	d2 f7       	brpl	.-12     	; 0x17d0 <__umoddi3+0x8ac>
    17dc:	3c 01       	movw	r6, r24
    17de:	4d 01       	movw	r8, r26
    17e0:	62 2a       	or	r6, r18
    17e2:	73 2a       	or	r7, r19
    17e4:	84 2a       	or	r8, r20
    17e6:	95 2a       	or	r9, r21
    17e8:	69 a2       	std	Y+33, r6	; 0x21
    17ea:	7a a2       	std	Y+34, r7	; 0x22
    17ec:	8b a2       	std	Y+35, r8	; 0x23
    17ee:	9c a2       	std	Y+36, r9	; 0x24
    17f0:	6c 96       	adiw	r28, 0x1c	; 28
    17f2:	ec ac       	ldd	r14, Y+60	; 0x3c
    17f4:	fd ac       	ldd	r15, Y+61	; 0x3d
    17f6:	0e ad       	ldd	r16, Y+62	; 0x3e
    17f8:	1f ad       	ldd	r17, Y+63	; 0x3f
    17fa:	6c 97       	sbiw	r28, 0x1c	; 28
    17fc:	67 96       	adiw	r28, 0x17	; 23
    17fe:	0f ac       	ldd	r0, Y+63	; 0x3f
    1800:	67 97       	sbiw	r28, 0x17	; 23
    1802:	04 c0       	rjmp	.+8      	; 0x180c <__umoddi3+0x8e8>
    1804:	ee 0c       	add	r14, r14
    1806:	ff 1c       	adc	r15, r15
    1808:	00 1f       	adc	r16, r16
    180a:	11 1f       	adc	r17, r17
    180c:	0a 94       	dec	r0
    180e:	d2 f7       	brpl	.-12     	; 0x1804 <__umoddi3+0x8e0>
    1810:	ed 8e       	std	Y+29, r14	; 0x1d
    1812:	fe 8e       	std	Y+30, r15	; 0x1e
    1814:	0f 8f       	std	Y+31, r16	; 0x1f
    1816:	18 a3       	std	Y+32, r17	; 0x20
    1818:	49 a5       	ldd	r20, Y+41	; 0x29
    181a:	5a a5       	ldd	r21, Y+42	; 0x2a
    181c:	6b a5       	ldd	r22, Y+43	; 0x2b
    181e:	7c a5       	ldd	r23, Y+44	; 0x2c
    1820:	3b 01       	movw	r6, r22
    1822:	88 24       	eor	r8, r8
    1824:	99 24       	eor	r9, r9
    1826:	60 70       	andi	r22, 0x00	; 0
    1828:	70 70       	andi	r23, 0x00	; 0
    182a:	2d 96       	adiw	r28, 0x0d	; 13
    182c:	4c af       	std	Y+60, r20	; 0x3c
    182e:	5d af       	std	Y+61, r21	; 0x3d
    1830:	6e af       	std	Y+62, r22	; 0x3e
    1832:	7f af       	std	Y+63, r23	; 0x3f
    1834:	2d 97       	sbiw	r28, 0x0d	; 13
    1836:	c6 01       	movw	r24, r12
    1838:	b5 01       	movw	r22, r10
    183a:	a4 01       	movw	r20, r8
    183c:	93 01       	movw	r18, r6
    183e:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
    1842:	7b 01       	movw	r14, r22
    1844:	8c 01       	movw	r16, r24
    1846:	c6 01       	movw	r24, r12
    1848:	b5 01       	movw	r22, r10
    184a:	a4 01       	movw	r20, r8
    184c:	93 01       	movw	r18, r6
    184e:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
    1852:	c9 01       	movw	r24, r18
    1854:	da 01       	movw	r26, r20
    1856:	1c 01       	movw	r2, r24
    1858:	2d 01       	movw	r4, r26
    185a:	c2 01       	movw	r24, r4
    185c:	b1 01       	movw	r22, r2
    185e:	2d 96       	adiw	r28, 0x0d	; 13
    1860:	2c ad       	ldd	r18, Y+60	; 0x3c
    1862:	3d ad       	ldd	r19, Y+61	; 0x3d
    1864:	4e ad       	ldd	r20, Y+62	; 0x3e
    1866:	5f ad       	ldd	r21, Y+63	; 0x3f
    1868:	2d 97       	sbiw	r28, 0x0d	; 13
    186a:	0e 94 51 30 	call	0x60a2	; 0x60a2 <__mulsi3>
    186e:	9b 01       	movw	r18, r22
    1870:	ac 01       	movw	r20, r24
    1872:	87 01       	movw	r16, r14
    1874:	ff 24       	eor	r15, r15
    1876:	ee 24       	eor	r14, r14
    1878:	a9 a0       	ldd	r10, Y+33	; 0x21
    187a:	ba a0       	ldd	r11, Y+34	; 0x22
    187c:	cb a0       	ldd	r12, Y+35	; 0x23
    187e:	dc a0       	ldd	r13, Y+36	; 0x24
    1880:	c6 01       	movw	r24, r12
    1882:	aa 27       	eor	r26, r26
    1884:	bb 27       	eor	r27, r27
    1886:	57 01       	movw	r10, r14
    1888:	68 01       	movw	r12, r16
    188a:	a8 2a       	or	r10, r24
    188c:	b9 2a       	or	r11, r25
    188e:	ca 2a       	or	r12, r26
    1890:	db 2a       	or	r13, r27
    1892:	a2 16       	cp	r10, r18
    1894:	b3 06       	cpc	r11, r19
    1896:	c4 06       	cpc	r12, r20
    1898:	d5 06       	cpc	r13, r21
    189a:	00 f5       	brcc	.+64     	; 0x18dc <__umoddi3+0x9b8>
    189c:	08 94       	sec
    189e:	21 08       	sbc	r2, r1
    18a0:	31 08       	sbc	r3, r1
    18a2:	41 08       	sbc	r4, r1
    18a4:	51 08       	sbc	r5, r1
    18a6:	e9 a4       	ldd	r14, Y+41	; 0x29
    18a8:	fa a4       	ldd	r15, Y+42	; 0x2a
    18aa:	0b a5       	ldd	r16, Y+43	; 0x2b
    18ac:	1c a5       	ldd	r17, Y+44	; 0x2c
    18ae:	ae 0c       	add	r10, r14
    18b0:	bf 1c       	adc	r11, r15
    18b2:	c0 1e       	adc	r12, r16
    18b4:	d1 1e       	adc	r13, r17
    18b6:	ae 14       	cp	r10, r14
    18b8:	bf 04       	cpc	r11, r15
    18ba:	c0 06       	cpc	r12, r16
    18bc:	d1 06       	cpc	r13, r17
    18be:	70 f0       	brcs	.+28     	; 0x18dc <__umoddi3+0x9b8>
    18c0:	a2 16       	cp	r10, r18
    18c2:	b3 06       	cpc	r11, r19
    18c4:	c4 06       	cpc	r12, r20
    18c6:	d5 06       	cpc	r13, r21
    18c8:	48 f4       	brcc	.+18     	; 0x18dc <__umoddi3+0x9b8>
    18ca:	08 94       	sec
    18cc:	21 08       	sbc	r2, r1
    18ce:	31 08       	sbc	r3, r1
    18d0:	41 08       	sbc	r4, r1
    18d2:	51 08       	sbc	r5, r1
    18d4:	ae 0c       	add	r10, r14
    18d6:	bf 1c       	adc	r11, r15
    18d8:	c0 1e       	adc	r12, r16
    18da:	d1 1e       	adc	r13, r17
    18dc:	a2 1a       	sub	r10, r18
    18de:	b3 0a       	sbc	r11, r19
    18e0:	c4 0a       	sbc	r12, r20
    18e2:	d5 0a       	sbc	r13, r21
    18e4:	c6 01       	movw	r24, r12
    18e6:	b5 01       	movw	r22, r10
    18e8:	a4 01       	movw	r20, r8
    18ea:	93 01       	movw	r18, r6
    18ec:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
    18f0:	7b 01       	movw	r14, r22
    18f2:	8c 01       	movw	r16, r24
    18f4:	c6 01       	movw	r24, r12
    18f6:	b5 01       	movw	r22, r10
    18f8:	a4 01       	movw	r20, r8
    18fa:	93 01       	movw	r18, r6
    18fc:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__udivmodsi4>
    1900:	c9 01       	movw	r24, r18
    1902:	da 01       	movw	r26, r20
    1904:	3c 01       	movw	r6, r24
    1906:	4d 01       	movw	r8, r26
    1908:	c4 01       	movw	r24, r8
    190a:	b3 01       	movw	r22, r6
    190c:	2d 96       	adiw	r28, 0x0d	; 13
    190e:	2c ad       	ldd	r18, Y+60	; 0x3c
    1910:	3d ad       	ldd	r19, Y+61	; 0x3d
    1912:	4e ad       	ldd	r20, Y+62	; 0x3e
    1914:	5f ad       	ldd	r21, Y+63	; 0x3f
    1916:	2d 97       	sbiw	r28, 0x0d	; 13
    1918:	0e 94 51 30 	call	0x60a2	; 0x60a2 <__mulsi3>
    191c:	9b 01       	movw	r18, r22
    191e:	ac 01       	movw	r20, r24
    1920:	87 01       	movw	r16, r14
    1922:	ff 24       	eor	r15, r15
    1924:	ee 24       	eor	r14, r14
    1926:	89 a1       	ldd	r24, Y+33	; 0x21
    1928:	9a a1       	ldd	r25, Y+34	; 0x22
    192a:	ab a1       	ldd	r26, Y+35	; 0x23
    192c:	bc a1       	ldd	r27, Y+36	; 0x24
    192e:	a0 70       	andi	r26, 0x00	; 0
    1930:	b0 70       	andi	r27, 0x00	; 0
    1932:	57 01       	movw	r10, r14
    1934:	68 01       	movw	r12, r16
    1936:	a8 2a       	or	r10, r24
    1938:	b9 2a       	or	r11, r25
    193a:	ca 2a       	or	r12, r26
    193c:	db 2a       	or	r13, r27
    193e:	a2 16       	cp	r10, r18
    1940:	b3 06       	cpc	r11, r19
    1942:	c4 06       	cpc	r12, r20
    1944:	d5 06       	cpc	r13, r21
    1946:	00 f5       	brcc	.+64     	; 0x1988 <__umoddi3+0xa64>
    1948:	08 94       	sec
    194a:	61 08       	sbc	r6, r1
    194c:	71 08       	sbc	r7, r1
    194e:	81 08       	sbc	r8, r1
    1950:	91 08       	sbc	r9, r1
    1952:	69 a5       	ldd	r22, Y+41	; 0x29
    1954:	7a a5       	ldd	r23, Y+42	; 0x2a
    1956:	8b a5       	ldd	r24, Y+43	; 0x2b
    1958:	9c a5       	ldd	r25, Y+44	; 0x2c
    195a:	a6 0e       	add	r10, r22
    195c:	b7 1e       	adc	r11, r23
    195e:	c8 1e       	adc	r12, r24
    1960:	d9 1e       	adc	r13, r25
    1962:	a6 16       	cp	r10, r22
    1964:	b7 06       	cpc	r11, r23
    1966:	c8 06       	cpc	r12, r24
    1968:	d9 06       	cpc	r13, r25
    196a:	70 f0       	brcs	.+28     	; 0x1988 <__umoddi3+0xa64>
    196c:	a2 16       	cp	r10, r18
    196e:	b3 06       	cpc	r11, r19
    1970:	c4 06       	cpc	r12, r20
    1972:	d5 06       	cpc	r13, r21
    1974:	48 f4       	brcc	.+18     	; 0x1988 <__umoddi3+0xa64>
    1976:	08 94       	sec
    1978:	61 08       	sbc	r6, r1
    197a:	71 08       	sbc	r7, r1
    197c:	81 08       	sbc	r8, r1
    197e:	91 08       	sbc	r9, r1
    1980:	a6 0e       	add	r10, r22
    1982:	b7 1e       	adc	r11, r23
    1984:	c8 1e       	adc	r12, r24
    1986:	d9 1e       	adc	r13, r25
    1988:	d6 01       	movw	r26, r12
    198a:	c5 01       	movw	r24, r10
    198c:	82 1b       	sub	r24, r18
    198e:	93 0b       	sbc	r25, r19
    1990:	a4 0b       	sbc	r26, r20
    1992:	b5 0b       	sbc	r27, r21
    1994:	89 8f       	std	Y+25, r24	; 0x19
    1996:	9a 8f       	std	Y+26, r25	; 0x1a
    1998:	ab 8f       	std	Y+27, r26	; 0x1b
    199a:	bc 8f       	std	Y+28, r27	; 0x1c
    199c:	d1 01       	movw	r26, r2
    199e:	99 27       	eor	r25, r25
    19a0:	88 27       	eor	r24, r24
    19a2:	84 01       	movw	r16, r8
    19a4:	73 01       	movw	r14, r6
    19a6:	e8 2a       	or	r14, r24
    19a8:	f9 2a       	or	r15, r25
    19aa:	0a 2b       	or	r16, r26
    19ac:	1b 2b       	or	r17, r27
    19ae:	4f ef       	ldi	r20, 0xFF	; 255
    19b0:	a4 2e       	mov	r10, r20
    19b2:	4f ef       	ldi	r20, 0xFF	; 255
    19b4:	b4 2e       	mov	r11, r20
    19b6:	c1 2c       	mov	r12, r1
    19b8:	d1 2c       	mov	r13, r1
    19ba:	ae 20       	and	r10, r14
    19bc:	bf 20       	and	r11, r15
    19be:	c0 22       	and	r12, r16
    19c0:	d1 22       	and	r13, r17
    19c2:	78 01       	movw	r14, r16
    19c4:	00 27       	eor	r16, r16
    19c6:	11 27       	eor	r17, r17
    19c8:	6d a0       	ldd	r6, Y+37	; 0x25
    19ca:	7e a0       	ldd	r7, Y+38	; 0x26
    19cc:	8f a0       	ldd	r8, Y+39	; 0x27
    19ce:	98 a4       	ldd	r9, Y+40	; 0x28
    19d0:	4f ef       	ldi	r20, 0xFF	; 255
    19d2:	5f ef       	ldi	r21, 0xFF	; 255
    19d4:	60 e0       	ldi	r22, 0x00	; 0
    19d6:	70 e0       	ldi	r23, 0x00	; 0
    19d8:	64 22       	and	r6, r20
    19da:	75 22       	and	r7, r21
    19dc:	86 22       	and	r8, r22
    19de:	97 22       	and	r9, r23
    19e0:	8d a1       	ldd	r24, Y+37	; 0x25
    19e2:	9e a1       	ldd	r25, Y+38	; 0x26
    19e4:	af a1       	ldd	r26, Y+39	; 0x27
    19e6:	b8 a5       	ldd	r27, Y+40	; 0x28
    19e8:	bd 01       	movw	r22, r26
    19ea:	88 27       	eor	r24, r24
    19ec:	99 27       	eor	r25, r25
    19ee:	65 96       	adiw	r28, 0x15	; 21
    19f0:	6c af       	std	Y+60, r22	; 0x3c
    19f2:	7d af       	std	Y+61, r23	; 0x3d
    19f4:	8e af       	std	Y+62, r24	; 0x3e
    19f6:	9f af       	std	Y+63, r25	; 0x3f
    19f8:	65 97       	sbiw	r28, 0x15	; 21
    19fa:	c6 01       	movw	r24, r12
    19fc:	b5 01       	movw	r22, r10
    19fe:	a4 01       	movw	r20, r8
    1a00:	93 01       	movw	r18, r6
    1a02:	0e 94 51 30 	call	0x60a2	; 0x60a2 <__mulsi3>
    1a06:	61 96       	adiw	r28, 0x11	; 17
    1a08:	6c af       	std	Y+60, r22	; 0x3c
    1a0a:	7d af       	std	Y+61, r23	; 0x3d
    1a0c:	8e af       	std	Y+62, r24	; 0x3e
    1a0e:	9f af       	std	Y+63, r25	; 0x3f
    1a10:	61 97       	sbiw	r28, 0x11	; 17
    1a12:	c6 01       	movw	r24, r12
    1a14:	b5 01       	movw	r22, r10
    1a16:	65 96       	adiw	r28, 0x15	; 21
    1a18:	2c ad       	ldd	r18, Y+60	; 0x3c
    1a1a:	3d ad       	ldd	r19, Y+61	; 0x3d
    1a1c:	4e ad       	ldd	r20, Y+62	; 0x3e
    1a1e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1a20:	65 97       	sbiw	r28, 0x15	; 21
    1a22:	0e 94 51 30 	call	0x60a2	; 0x60a2 <__mulsi3>
    1a26:	1b 01       	movw	r2, r22
    1a28:	2c 01       	movw	r4, r24
    1a2a:	c8 01       	movw	r24, r16
    1a2c:	b7 01       	movw	r22, r14
    1a2e:	a4 01       	movw	r20, r8
    1a30:	93 01       	movw	r18, r6
    1a32:	0e 94 51 30 	call	0x60a2	; 0x60a2 <__mulsi3>
    1a36:	5b 01       	movw	r10, r22
    1a38:	6c 01       	movw	r12, r24
    1a3a:	c8 01       	movw	r24, r16
    1a3c:	b7 01       	movw	r22, r14
    1a3e:	65 96       	adiw	r28, 0x15	; 21
    1a40:	2c ad       	ldd	r18, Y+60	; 0x3c
    1a42:	3d ad       	ldd	r19, Y+61	; 0x3d
    1a44:	4e ad       	ldd	r20, Y+62	; 0x3e
    1a46:	5f ad       	ldd	r21, Y+63	; 0x3f
    1a48:	65 97       	sbiw	r28, 0x15	; 21
    1a4a:	0e 94 51 30 	call	0x60a2	; 0x60a2 <__mulsi3>
    1a4e:	7b 01       	movw	r14, r22
    1a50:	8c 01       	movw	r16, r24
    1a52:	a6 01       	movw	r20, r12
    1a54:	95 01       	movw	r18, r10
    1a56:	22 0d       	add	r18, r2
    1a58:	33 1d       	adc	r19, r3
    1a5a:	44 1d       	adc	r20, r4
    1a5c:	55 1d       	adc	r21, r5
    1a5e:	61 96       	adiw	r28, 0x11	; 17
    1a60:	6c ac       	ldd	r6, Y+60	; 0x3c
    1a62:	7d ac       	ldd	r7, Y+61	; 0x3d
    1a64:	8e ac       	ldd	r8, Y+62	; 0x3e
    1a66:	9f ac       	ldd	r9, Y+63	; 0x3f
    1a68:	61 97       	sbiw	r28, 0x11	; 17
    1a6a:	c4 01       	movw	r24, r8
    1a6c:	aa 27       	eor	r26, r26
    1a6e:	bb 27       	eor	r27, r27
    1a70:	28 0f       	add	r18, r24
    1a72:	39 1f       	adc	r19, r25
    1a74:	4a 1f       	adc	r20, r26
    1a76:	5b 1f       	adc	r21, r27
    1a78:	2a 15       	cp	r18, r10
    1a7a:	3b 05       	cpc	r19, r11
    1a7c:	4c 05       	cpc	r20, r12
    1a7e:	5d 05       	cpc	r21, r13
    1a80:	48 f4       	brcc	.+18     	; 0x1a94 <__umoddi3+0xb70>
    1a82:	81 2c       	mov	r8, r1
    1a84:	91 2c       	mov	r9, r1
    1a86:	e1 e0       	ldi	r30, 0x01	; 1
    1a88:	ae 2e       	mov	r10, r30
    1a8a:	b1 2c       	mov	r11, r1
    1a8c:	e8 0c       	add	r14, r8
    1a8e:	f9 1c       	adc	r15, r9
    1a90:	0a 1d       	adc	r16, r10
    1a92:	1b 1d       	adc	r17, r11
    1a94:	ca 01       	movw	r24, r20
    1a96:	aa 27       	eor	r26, r26
    1a98:	bb 27       	eor	r27, r27
    1a9a:	57 01       	movw	r10, r14
    1a9c:	68 01       	movw	r12, r16
    1a9e:	a8 0e       	add	r10, r24
    1aa0:	b9 1e       	adc	r11, r25
    1aa2:	ca 1e       	adc	r12, r26
    1aa4:	db 1e       	adc	r13, r27
    1aa6:	a9 01       	movw	r20, r18
    1aa8:	33 27       	eor	r19, r19
    1aaa:	22 27       	eor	r18, r18
    1aac:	61 96       	adiw	r28, 0x11	; 17
    1aae:	8c ad       	ldd	r24, Y+60	; 0x3c
    1ab0:	9d ad       	ldd	r25, Y+61	; 0x3d
    1ab2:	ae ad       	ldd	r26, Y+62	; 0x3e
    1ab4:	bf ad       	ldd	r27, Y+63	; 0x3f
    1ab6:	61 97       	sbiw	r28, 0x11	; 17
    1ab8:	a0 70       	andi	r26, 0x00	; 0
    1aba:	b0 70       	andi	r27, 0x00	; 0
    1abc:	28 0f       	add	r18, r24
    1abe:	39 1f       	adc	r19, r25
    1ac0:	4a 1f       	adc	r20, r26
    1ac2:	5b 1f       	adc	r21, r27
    1ac4:	e9 8c       	ldd	r14, Y+25	; 0x19
    1ac6:	fa 8c       	ldd	r15, Y+26	; 0x1a
    1ac8:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1aca:	1c 8d       	ldd	r17, Y+28	; 0x1c
    1acc:	ea 14       	cp	r14, r10
    1ace:	fb 04       	cpc	r15, r11
    1ad0:	0c 05       	cpc	r16, r12
    1ad2:	1d 05       	cpc	r17, r13
    1ad4:	70 f0       	brcs	.+28     	; 0x1af2 <__umoddi3+0xbce>
    1ad6:	ae 14       	cp	r10, r14
    1ad8:	bf 04       	cpc	r11, r15
    1ada:	c0 06       	cpc	r12, r16
    1adc:	d1 06       	cpc	r13, r17
    1ade:	69 f5       	brne	.+90     	; 0x1b3a <__umoddi3+0xc16>
    1ae0:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1ae2:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1ae4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1ae6:	98 a1       	ldd	r25, Y+32	; 0x20
    1ae8:	62 17       	cp	r22, r18
    1aea:	73 07       	cpc	r23, r19
    1aec:	84 07       	cpc	r24, r20
    1aee:	95 07       	cpc	r25, r21
    1af0:	20 f5       	brcc	.+72     	; 0x1b3a <__umoddi3+0xc16>
    1af2:	da 01       	movw	r26, r20
    1af4:	c9 01       	movw	r24, r18
    1af6:	6d a0       	ldd	r6, Y+37	; 0x25
    1af8:	7e a0       	ldd	r7, Y+38	; 0x26
    1afa:	8f a0       	ldd	r8, Y+39	; 0x27
    1afc:	98 a4       	ldd	r9, Y+40	; 0x28
    1afe:	86 19       	sub	r24, r6
    1b00:	97 09       	sbc	r25, r7
    1b02:	a8 09       	sbc	r26, r8
    1b04:	b9 09       	sbc	r27, r9
    1b06:	e9 a4       	ldd	r14, Y+41	; 0x29
    1b08:	fa a4       	ldd	r15, Y+42	; 0x2a
    1b0a:	0b a5       	ldd	r16, Y+43	; 0x2b
    1b0c:	1c a5       	ldd	r17, Y+44	; 0x2c
    1b0e:	ae 18       	sub	r10, r14
    1b10:	bf 08       	sbc	r11, r15
    1b12:	c0 0a       	sbc	r12, r16
    1b14:	d1 0a       	sbc	r13, r17
    1b16:	ee 24       	eor	r14, r14
    1b18:	ff 24       	eor	r15, r15
    1b1a:	87 01       	movw	r16, r14
    1b1c:	28 17       	cp	r18, r24
    1b1e:	39 07       	cpc	r19, r25
    1b20:	4a 07       	cpc	r20, r26
    1b22:	5b 07       	cpc	r21, r27
    1b24:	28 f4       	brcc	.+10     	; 0x1b30 <__umoddi3+0xc0c>
    1b26:	21 e0       	ldi	r18, 0x01	; 1
    1b28:	e2 2e       	mov	r14, r18
    1b2a:	f1 2c       	mov	r15, r1
    1b2c:	01 2d       	mov	r16, r1
    1b2e:	11 2d       	mov	r17, r1
    1b30:	ae 18       	sub	r10, r14
    1b32:	bf 08       	sbc	r11, r15
    1b34:	c0 0a       	sbc	r12, r16
    1b36:	d1 0a       	sbc	r13, r17
    1b38:	02 c0       	rjmp	.+4      	; 0x1b3e <__umoddi3+0xc1a>
    1b3a:	da 01       	movw	r26, r20
    1b3c:	c9 01       	movw	r24, r18
    1b3e:	6d 8c       	ldd	r6, Y+29	; 0x1d
    1b40:	7e 8c       	ldd	r7, Y+30	; 0x1e
    1b42:	8f 8c       	ldd	r8, Y+31	; 0x1f
    1b44:	98 a0       	ldd	r9, Y+32	; 0x20
    1b46:	68 1a       	sub	r6, r24
    1b48:	79 0a       	sbc	r7, r25
    1b4a:	8a 0a       	sbc	r8, r26
    1b4c:	9b 0a       	sbc	r9, r27
    1b4e:	49 8d       	ldd	r20, Y+25	; 0x19
    1b50:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1b52:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1b54:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1b56:	4a 19       	sub	r20, r10
    1b58:	5b 09       	sbc	r21, r11
    1b5a:	6c 09       	sbc	r22, r12
    1b5c:	7d 09       	sbc	r23, r13
    1b5e:	5a 01       	movw	r10, r20
    1b60:	6b 01       	movw	r12, r22
    1b62:	22 24       	eor	r2, r2
    1b64:	33 24       	eor	r3, r3
    1b66:	21 01       	movw	r4, r2
    1b68:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1b6a:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1b6c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1b6e:	98 a1       	ldd	r25, Y+32	; 0x20
    1b70:	66 15       	cp	r22, r6
    1b72:	77 05       	cpc	r23, r7
    1b74:	88 05       	cpc	r24, r8
    1b76:	99 05       	cpc	r25, r9
    1b78:	28 f4       	brcc	.+10     	; 0x1b84 <__umoddi3+0xc60>
    1b7a:	81 e0       	ldi	r24, 0x01	; 1
    1b7c:	28 2e       	mov	r2, r24
    1b7e:	31 2c       	mov	r3, r1
    1b80:	41 2c       	mov	r4, r1
    1b82:	51 2c       	mov	r5, r1
    1b84:	86 01       	movw	r16, r12
    1b86:	75 01       	movw	r14, r10
    1b88:	e2 18       	sub	r14, r2
    1b8a:	f3 08       	sbc	r15, r3
    1b8c:	04 09       	sbc	r16, r4
    1b8e:	15 09       	sbc	r17, r5
    1b90:	a8 01       	movw	r20, r16
    1b92:	97 01       	movw	r18, r14
    1b94:	66 96       	adiw	r28, 0x16	; 22
    1b96:	0f ac       	ldd	r0, Y+63	; 0x3f
    1b98:	66 97       	sbiw	r28, 0x16	; 22
    1b9a:	04 c0       	rjmp	.+8      	; 0x1ba4 <__umoddi3+0xc80>
    1b9c:	22 0f       	add	r18, r18
    1b9e:	33 1f       	adc	r19, r19
    1ba0:	44 1f       	adc	r20, r20
    1ba2:	55 1f       	adc	r21, r21
    1ba4:	0a 94       	dec	r0
    1ba6:	d2 f7       	brpl	.-12     	; 0x1b9c <__umoddi3+0xc78>
    1ba8:	d4 01       	movw	r26, r8
    1baa:	c3 01       	movw	r24, r6
    1bac:	67 96       	adiw	r28, 0x17	; 23
    1bae:	0f ac       	ldd	r0, Y+63	; 0x3f
    1bb0:	67 97       	sbiw	r28, 0x17	; 23
    1bb2:	04 c0       	rjmp	.+8      	; 0x1bbc <__umoddi3+0xc98>
    1bb4:	b6 95       	lsr	r27
    1bb6:	a7 95       	ror	r26
    1bb8:	97 95       	ror	r25
    1bba:	87 95       	ror	r24
    1bbc:	0a 94       	dec	r0
    1bbe:	d2 f7       	brpl	.-12     	; 0x1bb4 <__umoddi3+0xc90>
    1bc0:	28 2b       	or	r18, r24
    1bc2:	39 2b       	or	r19, r25
    1bc4:	4a 2b       	or	r20, r26
    1bc6:	5b 2b       	or	r21, r27
    1bc8:	29 8b       	std	Y+17, r18	; 0x11
    1bca:	3a 8b       	std	Y+18, r19	; 0x12
    1bcc:	4b 8b       	std	Y+19, r20	; 0x13
    1bce:	5c 8b       	std	Y+20, r21	; 0x14
    1bd0:	67 96       	adiw	r28, 0x17	; 23
    1bd2:	0f ac       	ldd	r0, Y+63	; 0x3f
    1bd4:	67 97       	sbiw	r28, 0x17	; 23
    1bd6:	04 c0       	rjmp	.+8      	; 0x1be0 <__umoddi3+0xcbc>
    1bd8:	16 95       	lsr	r17
    1bda:	07 95       	ror	r16
    1bdc:	f7 94       	ror	r15
    1bde:	e7 94       	ror	r14
    1be0:	0a 94       	dec	r0
    1be2:	d2 f7       	brpl	.-12     	; 0x1bd8 <__umoddi3+0xcb4>
    1be4:	ed 8a       	std	Y+21, r14	; 0x15
    1be6:	fe 8a       	std	Y+22, r15	; 0x16
    1be8:	0f 8b       	std	Y+23, r16	; 0x17
    1bea:	18 8f       	std	Y+24, r17	; 0x18
    1bec:	3a 89       	ldd	r19, Y+18	; 0x12
    1bee:	4b 89       	ldd	r20, Y+19	; 0x13
    1bf0:	5c 89       	ldd	r21, Y+20	; 0x14
    1bf2:	6e 2d       	mov	r22, r14
    1bf4:	7e 89       	ldd	r23, Y+22	; 0x16
    1bf6:	8f 89       	ldd	r24, Y+23	; 0x17
    1bf8:	98 8d       	ldd	r25, Y+24	; 0x18
    1bfa:	c5 5a       	subi	r28, 0xA5	; 165
    1bfc:	df 4f       	sbci	r29, 0xFF	; 255
    1bfe:	e2 e1       	ldi	r30, 0x12	; 18
    1c00:	0c 94 ae 30 	jmp	0x615c	; 0x615c <__epilogue_restores__>

00001c04 <_fpadd_parts>:
    1c04:	a0 e0       	ldi	r26, 0x00	; 0
    1c06:	b0 e0       	ldi	r27, 0x00	; 0
    1c08:	e8 e0       	ldi	r30, 0x08	; 8
    1c0a:	fe e0       	ldi	r31, 0x0E	; 14
    1c0c:	0c 94 92 30 	jmp	0x6124	; 0x6124 <__prologue_saves__>
    1c10:	dc 01       	movw	r26, r24
    1c12:	2b 01       	movw	r4, r22
    1c14:	fa 01       	movw	r30, r20
    1c16:	9c 91       	ld	r25, X
    1c18:	92 30       	cpi	r25, 0x02	; 2
    1c1a:	08 f4       	brcc	.+2      	; 0x1c1e <_fpadd_parts+0x1a>
    1c1c:	39 c1       	rjmp	.+626    	; 0x1e90 <_fpadd_parts+0x28c>
    1c1e:	eb 01       	movw	r28, r22
    1c20:	88 81       	ld	r24, Y
    1c22:	82 30       	cpi	r24, 0x02	; 2
    1c24:	08 f4       	brcc	.+2      	; 0x1c28 <_fpadd_parts+0x24>
    1c26:	33 c1       	rjmp	.+614    	; 0x1e8e <_fpadd_parts+0x28a>
    1c28:	94 30       	cpi	r25, 0x04	; 4
    1c2a:	69 f4       	brne	.+26     	; 0x1c46 <_fpadd_parts+0x42>
    1c2c:	84 30       	cpi	r24, 0x04	; 4
    1c2e:	09 f0       	breq	.+2      	; 0x1c32 <_fpadd_parts+0x2e>
    1c30:	2f c1       	rjmp	.+606    	; 0x1e90 <_fpadd_parts+0x28c>
    1c32:	11 96       	adiw	r26, 0x01	; 1
    1c34:	9c 91       	ld	r25, X
    1c36:	11 97       	sbiw	r26, 0x01	; 1
    1c38:	89 81       	ldd	r24, Y+1	; 0x01
    1c3a:	98 17       	cp	r25, r24
    1c3c:	09 f4       	brne	.+2      	; 0x1c40 <_fpadd_parts+0x3c>
    1c3e:	28 c1       	rjmp	.+592    	; 0x1e90 <_fpadd_parts+0x28c>
    1c40:	a0 e6       	ldi	r26, 0x60	; 96
    1c42:	b0 e0       	ldi	r27, 0x00	; 0
    1c44:	25 c1       	rjmp	.+586    	; 0x1e90 <_fpadd_parts+0x28c>
    1c46:	84 30       	cpi	r24, 0x04	; 4
    1c48:	09 f4       	brne	.+2      	; 0x1c4c <_fpadd_parts+0x48>
    1c4a:	21 c1       	rjmp	.+578    	; 0x1e8e <_fpadd_parts+0x28a>
    1c4c:	82 30       	cpi	r24, 0x02	; 2
    1c4e:	a9 f4       	brne	.+42     	; 0x1c7a <_fpadd_parts+0x76>
    1c50:	92 30       	cpi	r25, 0x02	; 2
    1c52:	09 f0       	breq	.+2      	; 0x1c56 <_fpadd_parts+0x52>
    1c54:	1d c1       	rjmp	.+570    	; 0x1e90 <_fpadd_parts+0x28c>
    1c56:	9a 01       	movw	r18, r20
    1c58:	ad 01       	movw	r20, r26
    1c5a:	88 e0       	ldi	r24, 0x08	; 8
    1c5c:	ea 01       	movw	r28, r20
    1c5e:	09 90       	ld	r0, Y+
    1c60:	ae 01       	movw	r20, r28
    1c62:	e9 01       	movw	r28, r18
    1c64:	09 92       	st	Y+, r0
    1c66:	9e 01       	movw	r18, r28
    1c68:	81 50       	subi	r24, 0x01	; 1
    1c6a:	c1 f7       	brne	.-16     	; 0x1c5c <_fpadd_parts+0x58>
    1c6c:	e2 01       	movw	r28, r4
    1c6e:	89 81       	ldd	r24, Y+1	; 0x01
    1c70:	11 96       	adiw	r26, 0x01	; 1
    1c72:	9c 91       	ld	r25, X
    1c74:	89 23       	and	r24, r25
    1c76:	81 83       	std	Z+1, r24	; 0x01
    1c78:	08 c1       	rjmp	.+528    	; 0x1e8a <_fpadd_parts+0x286>
    1c7a:	92 30       	cpi	r25, 0x02	; 2
    1c7c:	09 f4       	brne	.+2      	; 0x1c80 <_fpadd_parts+0x7c>
    1c7e:	07 c1       	rjmp	.+526    	; 0x1e8e <_fpadd_parts+0x28a>
    1c80:	12 96       	adiw	r26, 0x02	; 2
    1c82:	2d 90       	ld	r2, X+
    1c84:	3c 90       	ld	r3, X
    1c86:	13 97       	sbiw	r26, 0x03	; 3
    1c88:	eb 01       	movw	r28, r22
    1c8a:	8a 81       	ldd	r24, Y+2	; 0x02
    1c8c:	9b 81       	ldd	r25, Y+3	; 0x03
    1c8e:	14 96       	adiw	r26, 0x04	; 4
    1c90:	ad 90       	ld	r10, X+
    1c92:	bd 90       	ld	r11, X+
    1c94:	cd 90       	ld	r12, X+
    1c96:	dc 90       	ld	r13, X
    1c98:	17 97       	sbiw	r26, 0x07	; 7
    1c9a:	ec 80       	ldd	r14, Y+4	; 0x04
    1c9c:	fd 80       	ldd	r15, Y+5	; 0x05
    1c9e:	0e 81       	ldd	r16, Y+6	; 0x06
    1ca0:	1f 81       	ldd	r17, Y+7	; 0x07
    1ca2:	91 01       	movw	r18, r2
    1ca4:	28 1b       	sub	r18, r24
    1ca6:	39 0b       	sbc	r19, r25
    1ca8:	b9 01       	movw	r22, r18
    1caa:	37 ff       	sbrs	r19, 7
    1cac:	04 c0       	rjmp	.+8      	; 0x1cb6 <_fpadd_parts+0xb2>
    1cae:	66 27       	eor	r22, r22
    1cb0:	77 27       	eor	r23, r23
    1cb2:	62 1b       	sub	r22, r18
    1cb4:	73 0b       	sbc	r23, r19
    1cb6:	60 32       	cpi	r22, 0x20	; 32
    1cb8:	71 05       	cpc	r23, r1
    1cba:	0c f0       	brlt	.+2      	; 0x1cbe <_fpadd_parts+0xba>
    1cbc:	61 c0       	rjmp	.+194    	; 0x1d80 <_fpadd_parts+0x17c>
    1cbe:	12 16       	cp	r1, r18
    1cc0:	13 06       	cpc	r1, r19
    1cc2:	6c f5       	brge	.+90     	; 0x1d1e <_fpadd_parts+0x11a>
    1cc4:	37 01       	movw	r6, r14
    1cc6:	48 01       	movw	r8, r16
    1cc8:	06 2e       	mov	r0, r22
    1cca:	04 c0       	rjmp	.+8      	; 0x1cd4 <_fpadd_parts+0xd0>
    1ccc:	96 94       	lsr	r9
    1cce:	87 94       	ror	r8
    1cd0:	77 94       	ror	r7
    1cd2:	67 94       	ror	r6
    1cd4:	0a 94       	dec	r0
    1cd6:	d2 f7       	brpl	.-12     	; 0x1ccc <_fpadd_parts+0xc8>
    1cd8:	21 e0       	ldi	r18, 0x01	; 1
    1cda:	30 e0       	ldi	r19, 0x00	; 0
    1cdc:	40 e0       	ldi	r20, 0x00	; 0
    1cde:	50 e0       	ldi	r21, 0x00	; 0
    1ce0:	04 c0       	rjmp	.+8      	; 0x1cea <_fpadd_parts+0xe6>
    1ce2:	22 0f       	add	r18, r18
    1ce4:	33 1f       	adc	r19, r19
    1ce6:	44 1f       	adc	r20, r20
    1ce8:	55 1f       	adc	r21, r21
    1cea:	6a 95       	dec	r22
    1cec:	d2 f7       	brpl	.-12     	; 0x1ce2 <_fpadd_parts+0xde>
    1cee:	21 50       	subi	r18, 0x01	; 1
    1cf0:	30 40       	sbci	r19, 0x00	; 0
    1cf2:	40 40       	sbci	r20, 0x00	; 0
    1cf4:	50 40       	sbci	r21, 0x00	; 0
    1cf6:	2e 21       	and	r18, r14
    1cf8:	3f 21       	and	r19, r15
    1cfa:	40 23       	and	r20, r16
    1cfc:	51 23       	and	r21, r17
    1cfe:	21 15       	cp	r18, r1
    1d00:	31 05       	cpc	r19, r1
    1d02:	41 05       	cpc	r20, r1
    1d04:	51 05       	cpc	r21, r1
    1d06:	21 f0       	breq	.+8      	; 0x1d10 <_fpadd_parts+0x10c>
    1d08:	21 e0       	ldi	r18, 0x01	; 1
    1d0a:	30 e0       	ldi	r19, 0x00	; 0
    1d0c:	40 e0       	ldi	r20, 0x00	; 0
    1d0e:	50 e0       	ldi	r21, 0x00	; 0
    1d10:	79 01       	movw	r14, r18
    1d12:	8a 01       	movw	r16, r20
    1d14:	e6 28       	or	r14, r6
    1d16:	f7 28       	or	r15, r7
    1d18:	08 29       	or	r16, r8
    1d1a:	19 29       	or	r17, r9
    1d1c:	3c c0       	rjmp	.+120    	; 0x1d96 <_fpadd_parts+0x192>
    1d1e:	23 2b       	or	r18, r19
    1d20:	d1 f1       	breq	.+116    	; 0x1d96 <_fpadd_parts+0x192>
    1d22:	26 0e       	add	r2, r22
    1d24:	37 1e       	adc	r3, r23
    1d26:	35 01       	movw	r6, r10
    1d28:	46 01       	movw	r8, r12
    1d2a:	06 2e       	mov	r0, r22
    1d2c:	04 c0       	rjmp	.+8      	; 0x1d36 <_fpadd_parts+0x132>
    1d2e:	96 94       	lsr	r9
    1d30:	87 94       	ror	r8
    1d32:	77 94       	ror	r7
    1d34:	67 94       	ror	r6
    1d36:	0a 94       	dec	r0
    1d38:	d2 f7       	brpl	.-12     	; 0x1d2e <_fpadd_parts+0x12a>
    1d3a:	21 e0       	ldi	r18, 0x01	; 1
    1d3c:	30 e0       	ldi	r19, 0x00	; 0
    1d3e:	40 e0       	ldi	r20, 0x00	; 0
    1d40:	50 e0       	ldi	r21, 0x00	; 0
    1d42:	04 c0       	rjmp	.+8      	; 0x1d4c <_fpadd_parts+0x148>
    1d44:	22 0f       	add	r18, r18
    1d46:	33 1f       	adc	r19, r19
    1d48:	44 1f       	adc	r20, r20
    1d4a:	55 1f       	adc	r21, r21
    1d4c:	6a 95       	dec	r22
    1d4e:	d2 f7       	brpl	.-12     	; 0x1d44 <_fpadd_parts+0x140>
    1d50:	21 50       	subi	r18, 0x01	; 1
    1d52:	30 40       	sbci	r19, 0x00	; 0
    1d54:	40 40       	sbci	r20, 0x00	; 0
    1d56:	50 40       	sbci	r21, 0x00	; 0
    1d58:	2a 21       	and	r18, r10
    1d5a:	3b 21       	and	r19, r11
    1d5c:	4c 21       	and	r20, r12
    1d5e:	5d 21       	and	r21, r13
    1d60:	21 15       	cp	r18, r1
    1d62:	31 05       	cpc	r19, r1
    1d64:	41 05       	cpc	r20, r1
    1d66:	51 05       	cpc	r21, r1
    1d68:	21 f0       	breq	.+8      	; 0x1d72 <_fpadd_parts+0x16e>
    1d6a:	21 e0       	ldi	r18, 0x01	; 1
    1d6c:	30 e0       	ldi	r19, 0x00	; 0
    1d6e:	40 e0       	ldi	r20, 0x00	; 0
    1d70:	50 e0       	ldi	r21, 0x00	; 0
    1d72:	59 01       	movw	r10, r18
    1d74:	6a 01       	movw	r12, r20
    1d76:	a6 28       	or	r10, r6
    1d78:	b7 28       	or	r11, r7
    1d7a:	c8 28       	or	r12, r8
    1d7c:	d9 28       	or	r13, r9
    1d7e:	0b c0       	rjmp	.+22     	; 0x1d96 <_fpadd_parts+0x192>
    1d80:	82 15       	cp	r24, r2
    1d82:	93 05       	cpc	r25, r3
    1d84:	2c f0       	brlt	.+10     	; 0x1d90 <_fpadd_parts+0x18c>
    1d86:	1c 01       	movw	r2, r24
    1d88:	aa 24       	eor	r10, r10
    1d8a:	bb 24       	eor	r11, r11
    1d8c:	65 01       	movw	r12, r10
    1d8e:	03 c0       	rjmp	.+6      	; 0x1d96 <_fpadd_parts+0x192>
    1d90:	ee 24       	eor	r14, r14
    1d92:	ff 24       	eor	r15, r15
    1d94:	87 01       	movw	r16, r14
    1d96:	11 96       	adiw	r26, 0x01	; 1
    1d98:	9c 91       	ld	r25, X
    1d9a:	d2 01       	movw	r26, r4
    1d9c:	11 96       	adiw	r26, 0x01	; 1
    1d9e:	8c 91       	ld	r24, X
    1da0:	98 17       	cp	r25, r24
    1da2:	09 f4       	brne	.+2      	; 0x1da6 <_fpadd_parts+0x1a2>
    1da4:	45 c0       	rjmp	.+138    	; 0x1e30 <_fpadd_parts+0x22c>
    1da6:	99 23       	and	r25, r25
    1da8:	39 f0       	breq	.+14     	; 0x1db8 <_fpadd_parts+0x1b4>
    1daa:	a8 01       	movw	r20, r16
    1dac:	97 01       	movw	r18, r14
    1dae:	2a 19       	sub	r18, r10
    1db0:	3b 09       	sbc	r19, r11
    1db2:	4c 09       	sbc	r20, r12
    1db4:	5d 09       	sbc	r21, r13
    1db6:	06 c0       	rjmp	.+12     	; 0x1dc4 <_fpadd_parts+0x1c0>
    1db8:	a6 01       	movw	r20, r12
    1dba:	95 01       	movw	r18, r10
    1dbc:	2e 19       	sub	r18, r14
    1dbe:	3f 09       	sbc	r19, r15
    1dc0:	40 0b       	sbc	r20, r16
    1dc2:	51 0b       	sbc	r21, r17
    1dc4:	57 fd       	sbrc	r21, 7
    1dc6:	08 c0       	rjmp	.+16     	; 0x1dd8 <_fpadd_parts+0x1d4>
    1dc8:	11 82       	std	Z+1, r1	; 0x01
    1dca:	33 82       	std	Z+3, r3	; 0x03
    1dcc:	22 82       	std	Z+2, r2	; 0x02
    1dce:	24 83       	std	Z+4, r18	; 0x04
    1dd0:	35 83       	std	Z+5, r19	; 0x05
    1dd2:	46 83       	std	Z+6, r20	; 0x06
    1dd4:	57 83       	std	Z+7, r21	; 0x07
    1dd6:	1d c0       	rjmp	.+58     	; 0x1e12 <_fpadd_parts+0x20e>
    1dd8:	81 e0       	ldi	r24, 0x01	; 1
    1dda:	81 83       	std	Z+1, r24	; 0x01
    1ddc:	33 82       	std	Z+3, r3	; 0x03
    1dde:	22 82       	std	Z+2, r2	; 0x02
    1de0:	88 27       	eor	r24, r24
    1de2:	99 27       	eor	r25, r25
    1de4:	dc 01       	movw	r26, r24
    1de6:	82 1b       	sub	r24, r18
    1de8:	93 0b       	sbc	r25, r19
    1dea:	a4 0b       	sbc	r26, r20
    1dec:	b5 0b       	sbc	r27, r21
    1dee:	84 83       	std	Z+4, r24	; 0x04
    1df0:	95 83       	std	Z+5, r25	; 0x05
    1df2:	a6 83       	std	Z+6, r26	; 0x06
    1df4:	b7 83       	std	Z+7, r27	; 0x07
    1df6:	0d c0       	rjmp	.+26     	; 0x1e12 <_fpadd_parts+0x20e>
    1df8:	22 0f       	add	r18, r18
    1dfa:	33 1f       	adc	r19, r19
    1dfc:	44 1f       	adc	r20, r20
    1dfe:	55 1f       	adc	r21, r21
    1e00:	24 83       	std	Z+4, r18	; 0x04
    1e02:	35 83       	std	Z+5, r19	; 0x05
    1e04:	46 83       	std	Z+6, r20	; 0x06
    1e06:	57 83       	std	Z+7, r21	; 0x07
    1e08:	82 81       	ldd	r24, Z+2	; 0x02
    1e0a:	93 81       	ldd	r25, Z+3	; 0x03
    1e0c:	01 97       	sbiw	r24, 0x01	; 1
    1e0e:	93 83       	std	Z+3, r25	; 0x03
    1e10:	82 83       	std	Z+2, r24	; 0x02
    1e12:	24 81       	ldd	r18, Z+4	; 0x04
    1e14:	35 81       	ldd	r19, Z+5	; 0x05
    1e16:	46 81       	ldd	r20, Z+6	; 0x06
    1e18:	57 81       	ldd	r21, Z+7	; 0x07
    1e1a:	da 01       	movw	r26, r20
    1e1c:	c9 01       	movw	r24, r18
    1e1e:	01 97       	sbiw	r24, 0x01	; 1
    1e20:	a1 09       	sbc	r26, r1
    1e22:	b1 09       	sbc	r27, r1
    1e24:	8f 5f       	subi	r24, 0xFF	; 255
    1e26:	9f 4f       	sbci	r25, 0xFF	; 255
    1e28:	af 4f       	sbci	r26, 0xFF	; 255
    1e2a:	bf 43       	sbci	r27, 0x3F	; 63
    1e2c:	28 f3       	brcs	.-54     	; 0x1df8 <_fpadd_parts+0x1f4>
    1e2e:	0b c0       	rjmp	.+22     	; 0x1e46 <_fpadd_parts+0x242>
    1e30:	91 83       	std	Z+1, r25	; 0x01
    1e32:	33 82       	std	Z+3, r3	; 0x03
    1e34:	22 82       	std	Z+2, r2	; 0x02
    1e36:	ea 0c       	add	r14, r10
    1e38:	fb 1c       	adc	r15, r11
    1e3a:	0c 1d       	adc	r16, r12
    1e3c:	1d 1d       	adc	r17, r13
    1e3e:	e4 82       	std	Z+4, r14	; 0x04
    1e40:	f5 82       	std	Z+5, r15	; 0x05
    1e42:	06 83       	std	Z+6, r16	; 0x06
    1e44:	17 83       	std	Z+7, r17	; 0x07
    1e46:	83 e0       	ldi	r24, 0x03	; 3
    1e48:	80 83       	st	Z, r24
    1e4a:	24 81       	ldd	r18, Z+4	; 0x04
    1e4c:	35 81       	ldd	r19, Z+5	; 0x05
    1e4e:	46 81       	ldd	r20, Z+6	; 0x06
    1e50:	57 81       	ldd	r21, Z+7	; 0x07
    1e52:	57 ff       	sbrs	r21, 7
    1e54:	1a c0       	rjmp	.+52     	; 0x1e8a <_fpadd_parts+0x286>
    1e56:	c9 01       	movw	r24, r18
    1e58:	aa 27       	eor	r26, r26
    1e5a:	97 fd       	sbrc	r25, 7
    1e5c:	a0 95       	com	r26
    1e5e:	ba 2f       	mov	r27, r26
    1e60:	81 70       	andi	r24, 0x01	; 1
    1e62:	90 70       	andi	r25, 0x00	; 0
    1e64:	a0 70       	andi	r26, 0x00	; 0
    1e66:	b0 70       	andi	r27, 0x00	; 0
    1e68:	56 95       	lsr	r21
    1e6a:	47 95       	ror	r20
    1e6c:	37 95       	ror	r19
    1e6e:	27 95       	ror	r18
    1e70:	82 2b       	or	r24, r18
    1e72:	93 2b       	or	r25, r19
    1e74:	a4 2b       	or	r26, r20
    1e76:	b5 2b       	or	r27, r21
    1e78:	84 83       	std	Z+4, r24	; 0x04
    1e7a:	95 83       	std	Z+5, r25	; 0x05
    1e7c:	a6 83       	std	Z+6, r26	; 0x06
    1e7e:	b7 83       	std	Z+7, r27	; 0x07
    1e80:	82 81       	ldd	r24, Z+2	; 0x02
    1e82:	93 81       	ldd	r25, Z+3	; 0x03
    1e84:	01 96       	adiw	r24, 0x01	; 1
    1e86:	93 83       	std	Z+3, r25	; 0x03
    1e88:	82 83       	std	Z+2, r24	; 0x02
    1e8a:	df 01       	movw	r26, r30
    1e8c:	01 c0       	rjmp	.+2      	; 0x1e90 <_fpadd_parts+0x28c>
    1e8e:	d2 01       	movw	r26, r4
    1e90:	cd 01       	movw	r24, r26
    1e92:	cd b7       	in	r28, 0x3d	; 61
    1e94:	de b7       	in	r29, 0x3e	; 62
    1e96:	e2 e1       	ldi	r30, 0x12	; 18
    1e98:	0c 94 ae 30 	jmp	0x615c	; 0x615c <__epilogue_restores__>

00001e9c <__subsf3>:
    1e9c:	a0 e2       	ldi	r26, 0x20	; 32
    1e9e:	b0 e0       	ldi	r27, 0x00	; 0
    1ea0:	e4 e5       	ldi	r30, 0x54	; 84
    1ea2:	ff e0       	ldi	r31, 0x0F	; 15
    1ea4:	0c 94 9e 30 	jmp	0x613c	; 0x613c <__prologue_saves__+0x18>
    1ea8:	69 83       	std	Y+1, r22	; 0x01
    1eaa:	7a 83       	std	Y+2, r23	; 0x02
    1eac:	8b 83       	std	Y+3, r24	; 0x03
    1eae:	9c 83       	std	Y+4, r25	; 0x04
    1eb0:	2d 83       	std	Y+5, r18	; 0x05
    1eb2:	3e 83       	std	Y+6, r19	; 0x06
    1eb4:	4f 83       	std	Y+7, r20	; 0x07
    1eb6:	58 87       	std	Y+8, r21	; 0x08
    1eb8:	e9 e0       	ldi	r30, 0x09	; 9
    1eba:	ee 2e       	mov	r14, r30
    1ebc:	f1 2c       	mov	r15, r1
    1ebe:	ec 0e       	add	r14, r28
    1ec0:	fd 1e       	adc	r15, r29
    1ec2:	ce 01       	movw	r24, r28
    1ec4:	01 96       	adiw	r24, 0x01	; 1
    1ec6:	b7 01       	movw	r22, r14
    1ec8:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    1ecc:	8e 01       	movw	r16, r28
    1ece:	0f 5e       	subi	r16, 0xEF	; 239
    1ed0:	1f 4f       	sbci	r17, 0xFF	; 255
    1ed2:	ce 01       	movw	r24, r28
    1ed4:	05 96       	adiw	r24, 0x05	; 5
    1ed6:	b8 01       	movw	r22, r16
    1ed8:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    1edc:	8a 89       	ldd	r24, Y+18	; 0x12
    1ede:	91 e0       	ldi	r25, 0x01	; 1
    1ee0:	89 27       	eor	r24, r25
    1ee2:	8a 8b       	std	Y+18, r24	; 0x12
    1ee4:	c7 01       	movw	r24, r14
    1ee6:	b8 01       	movw	r22, r16
    1ee8:	ae 01       	movw	r20, r28
    1eea:	47 5e       	subi	r20, 0xE7	; 231
    1eec:	5f 4f       	sbci	r21, 0xFF	; 255
    1eee:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <_fpadd_parts>
    1ef2:	0e 94 7d 13 	call	0x26fa	; 0x26fa <__pack_f>
    1ef6:	a0 96       	adiw	r28, 0x20	; 32
    1ef8:	e6 e0       	ldi	r30, 0x06	; 6
    1efa:	0c 94 ba 30 	jmp	0x6174	; 0x6174 <__epilogue_restores__+0x18>

00001efe <__addsf3>:
    1efe:	a0 e2       	ldi	r26, 0x20	; 32
    1f00:	b0 e0       	ldi	r27, 0x00	; 0
    1f02:	e5 e8       	ldi	r30, 0x85	; 133
    1f04:	ff e0       	ldi	r31, 0x0F	; 15
    1f06:	0c 94 9e 30 	jmp	0x613c	; 0x613c <__prologue_saves__+0x18>
    1f0a:	69 83       	std	Y+1, r22	; 0x01
    1f0c:	7a 83       	std	Y+2, r23	; 0x02
    1f0e:	8b 83       	std	Y+3, r24	; 0x03
    1f10:	9c 83       	std	Y+4, r25	; 0x04
    1f12:	2d 83       	std	Y+5, r18	; 0x05
    1f14:	3e 83       	std	Y+6, r19	; 0x06
    1f16:	4f 83       	std	Y+7, r20	; 0x07
    1f18:	58 87       	std	Y+8, r21	; 0x08
    1f1a:	f9 e0       	ldi	r31, 0x09	; 9
    1f1c:	ef 2e       	mov	r14, r31
    1f1e:	f1 2c       	mov	r15, r1
    1f20:	ec 0e       	add	r14, r28
    1f22:	fd 1e       	adc	r15, r29
    1f24:	ce 01       	movw	r24, r28
    1f26:	01 96       	adiw	r24, 0x01	; 1
    1f28:	b7 01       	movw	r22, r14
    1f2a:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    1f2e:	8e 01       	movw	r16, r28
    1f30:	0f 5e       	subi	r16, 0xEF	; 239
    1f32:	1f 4f       	sbci	r17, 0xFF	; 255
    1f34:	ce 01       	movw	r24, r28
    1f36:	05 96       	adiw	r24, 0x05	; 5
    1f38:	b8 01       	movw	r22, r16
    1f3a:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    1f3e:	c7 01       	movw	r24, r14
    1f40:	b8 01       	movw	r22, r16
    1f42:	ae 01       	movw	r20, r28
    1f44:	47 5e       	subi	r20, 0xE7	; 231
    1f46:	5f 4f       	sbci	r21, 0xFF	; 255
    1f48:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <_fpadd_parts>
    1f4c:	0e 94 7d 13 	call	0x26fa	; 0x26fa <__pack_f>
    1f50:	a0 96       	adiw	r28, 0x20	; 32
    1f52:	e6 e0       	ldi	r30, 0x06	; 6
    1f54:	0c 94 ba 30 	jmp	0x6174	; 0x6174 <__epilogue_restores__+0x18>

00001f58 <__mulsf3>:
    1f58:	a0 e2       	ldi	r26, 0x20	; 32
    1f5a:	b0 e0       	ldi	r27, 0x00	; 0
    1f5c:	e2 eb       	ldi	r30, 0xB2	; 178
    1f5e:	ff e0       	ldi	r31, 0x0F	; 15
    1f60:	0c 94 92 30 	jmp	0x6124	; 0x6124 <__prologue_saves__>
    1f64:	69 83       	std	Y+1, r22	; 0x01
    1f66:	7a 83       	std	Y+2, r23	; 0x02
    1f68:	8b 83       	std	Y+3, r24	; 0x03
    1f6a:	9c 83       	std	Y+4, r25	; 0x04
    1f6c:	2d 83       	std	Y+5, r18	; 0x05
    1f6e:	3e 83       	std	Y+6, r19	; 0x06
    1f70:	4f 83       	std	Y+7, r20	; 0x07
    1f72:	58 87       	std	Y+8, r21	; 0x08
    1f74:	ce 01       	movw	r24, r28
    1f76:	01 96       	adiw	r24, 0x01	; 1
    1f78:	be 01       	movw	r22, r28
    1f7a:	67 5f       	subi	r22, 0xF7	; 247
    1f7c:	7f 4f       	sbci	r23, 0xFF	; 255
    1f7e:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    1f82:	ce 01       	movw	r24, r28
    1f84:	05 96       	adiw	r24, 0x05	; 5
    1f86:	be 01       	movw	r22, r28
    1f88:	6f 5e       	subi	r22, 0xEF	; 239
    1f8a:	7f 4f       	sbci	r23, 0xFF	; 255
    1f8c:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    1f90:	99 85       	ldd	r25, Y+9	; 0x09
    1f92:	92 30       	cpi	r25, 0x02	; 2
    1f94:	88 f0       	brcs	.+34     	; 0x1fb8 <__mulsf3+0x60>
    1f96:	89 89       	ldd	r24, Y+17	; 0x11
    1f98:	82 30       	cpi	r24, 0x02	; 2
    1f9a:	c8 f0       	brcs	.+50     	; 0x1fce <__mulsf3+0x76>
    1f9c:	94 30       	cpi	r25, 0x04	; 4
    1f9e:	19 f4       	brne	.+6      	; 0x1fa6 <__mulsf3+0x4e>
    1fa0:	82 30       	cpi	r24, 0x02	; 2
    1fa2:	51 f4       	brne	.+20     	; 0x1fb8 <__mulsf3+0x60>
    1fa4:	04 c0       	rjmp	.+8      	; 0x1fae <__mulsf3+0x56>
    1fa6:	84 30       	cpi	r24, 0x04	; 4
    1fa8:	29 f4       	brne	.+10     	; 0x1fb4 <__mulsf3+0x5c>
    1faa:	92 30       	cpi	r25, 0x02	; 2
    1fac:	81 f4       	brne	.+32     	; 0x1fce <__mulsf3+0x76>
    1fae:	80 e6       	ldi	r24, 0x60	; 96
    1fb0:	90 e0       	ldi	r25, 0x00	; 0
    1fb2:	c6 c0       	rjmp	.+396    	; 0x2140 <__mulsf3+0x1e8>
    1fb4:	92 30       	cpi	r25, 0x02	; 2
    1fb6:	49 f4       	brne	.+18     	; 0x1fca <__mulsf3+0x72>
    1fb8:	20 e0       	ldi	r18, 0x00	; 0
    1fba:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fbc:	8a 89       	ldd	r24, Y+18	; 0x12
    1fbe:	98 13       	cpse	r25, r24
    1fc0:	21 e0       	ldi	r18, 0x01	; 1
    1fc2:	2a 87       	std	Y+10, r18	; 0x0a
    1fc4:	ce 01       	movw	r24, r28
    1fc6:	09 96       	adiw	r24, 0x09	; 9
    1fc8:	bb c0       	rjmp	.+374    	; 0x2140 <__mulsf3+0x1e8>
    1fca:	82 30       	cpi	r24, 0x02	; 2
    1fcc:	49 f4       	brne	.+18     	; 0x1fe0 <__mulsf3+0x88>
    1fce:	20 e0       	ldi	r18, 0x00	; 0
    1fd0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fd2:	8a 89       	ldd	r24, Y+18	; 0x12
    1fd4:	98 13       	cpse	r25, r24
    1fd6:	21 e0       	ldi	r18, 0x01	; 1
    1fd8:	2a 8b       	std	Y+18, r18	; 0x12
    1fda:	ce 01       	movw	r24, r28
    1fdc:	41 96       	adiw	r24, 0x11	; 17
    1fde:	b0 c0       	rjmp	.+352    	; 0x2140 <__mulsf3+0x1e8>
    1fe0:	2d 84       	ldd	r2, Y+13	; 0x0d
    1fe2:	3e 84       	ldd	r3, Y+14	; 0x0e
    1fe4:	4f 84       	ldd	r4, Y+15	; 0x0f
    1fe6:	58 88       	ldd	r5, Y+16	; 0x10
    1fe8:	6d 88       	ldd	r6, Y+21	; 0x15
    1fea:	7e 88       	ldd	r7, Y+22	; 0x16
    1fec:	8f 88       	ldd	r8, Y+23	; 0x17
    1fee:	98 8c       	ldd	r9, Y+24	; 0x18
    1ff0:	ee 24       	eor	r14, r14
    1ff2:	ff 24       	eor	r15, r15
    1ff4:	87 01       	movw	r16, r14
    1ff6:	aa 24       	eor	r10, r10
    1ff8:	bb 24       	eor	r11, r11
    1ffa:	65 01       	movw	r12, r10
    1ffc:	40 e0       	ldi	r20, 0x00	; 0
    1ffe:	50 e0       	ldi	r21, 0x00	; 0
    2000:	60 e0       	ldi	r22, 0x00	; 0
    2002:	70 e0       	ldi	r23, 0x00	; 0
    2004:	e0 e0       	ldi	r30, 0x00	; 0
    2006:	f0 e0       	ldi	r31, 0x00	; 0
    2008:	c1 01       	movw	r24, r2
    200a:	81 70       	andi	r24, 0x01	; 1
    200c:	90 70       	andi	r25, 0x00	; 0
    200e:	89 2b       	or	r24, r25
    2010:	e9 f0       	breq	.+58     	; 0x204c <__mulsf3+0xf4>
    2012:	e6 0c       	add	r14, r6
    2014:	f7 1c       	adc	r15, r7
    2016:	08 1d       	adc	r16, r8
    2018:	19 1d       	adc	r17, r9
    201a:	9a 01       	movw	r18, r20
    201c:	ab 01       	movw	r20, r22
    201e:	2a 0d       	add	r18, r10
    2020:	3b 1d       	adc	r19, r11
    2022:	4c 1d       	adc	r20, r12
    2024:	5d 1d       	adc	r21, r13
    2026:	80 e0       	ldi	r24, 0x00	; 0
    2028:	90 e0       	ldi	r25, 0x00	; 0
    202a:	a0 e0       	ldi	r26, 0x00	; 0
    202c:	b0 e0       	ldi	r27, 0x00	; 0
    202e:	e6 14       	cp	r14, r6
    2030:	f7 04       	cpc	r15, r7
    2032:	08 05       	cpc	r16, r8
    2034:	19 05       	cpc	r17, r9
    2036:	20 f4       	brcc	.+8      	; 0x2040 <__mulsf3+0xe8>
    2038:	81 e0       	ldi	r24, 0x01	; 1
    203a:	90 e0       	ldi	r25, 0x00	; 0
    203c:	a0 e0       	ldi	r26, 0x00	; 0
    203e:	b0 e0       	ldi	r27, 0x00	; 0
    2040:	ba 01       	movw	r22, r20
    2042:	a9 01       	movw	r20, r18
    2044:	48 0f       	add	r20, r24
    2046:	59 1f       	adc	r21, r25
    2048:	6a 1f       	adc	r22, r26
    204a:	7b 1f       	adc	r23, r27
    204c:	aa 0c       	add	r10, r10
    204e:	bb 1c       	adc	r11, r11
    2050:	cc 1c       	adc	r12, r12
    2052:	dd 1c       	adc	r13, r13
    2054:	97 fe       	sbrs	r9, 7
    2056:	08 c0       	rjmp	.+16     	; 0x2068 <__mulsf3+0x110>
    2058:	81 e0       	ldi	r24, 0x01	; 1
    205a:	90 e0       	ldi	r25, 0x00	; 0
    205c:	a0 e0       	ldi	r26, 0x00	; 0
    205e:	b0 e0       	ldi	r27, 0x00	; 0
    2060:	a8 2a       	or	r10, r24
    2062:	b9 2a       	or	r11, r25
    2064:	ca 2a       	or	r12, r26
    2066:	db 2a       	or	r13, r27
    2068:	31 96       	adiw	r30, 0x01	; 1
    206a:	e0 32       	cpi	r30, 0x20	; 32
    206c:	f1 05       	cpc	r31, r1
    206e:	49 f0       	breq	.+18     	; 0x2082 <__mulsf3+0x12a>
    2070:	66 0c       	add	r6, r6
    2072:	77 1c       	adc	r7, r7
    2074:	88 1c       	adc	r8, r8
    2076:	99 1c       	adc	r9, r9
    2078:	56 94       	lsr	r5
    207a:	47 94       	ror	r4
    207c:	37 94       	ror	r3
    207e:	27 94       	ror	r2
    2080:	c3 cf       	rjmp	.-122    	; 0x2008 <__mulsf3+0xb0>
    2082:	fa 85       	ldd	r31, Y+10	; 0x0a
    2084:	ea 89       	ldd	r30, Y+18	; 0x12
    2086:	2b 89       	ldd	r18, Y+19	; 0x13
    2088:	3c 89       	ldd	r19, Y+20	; 0x14
    208a:	8b 85       	ldd	r24, Y+11	; 0x0b
    208c:	9c 85       	ldd	r25, Y+12	; 0x0c
    208e:	28 0f       	add	r18, r24
    2090:	39 1f       	adc	r19, r25
    2092:	2e 5f       	subi	r18, 0xFE	; 254
    2094:	3f 4f       	sbci	r19, 0xFF	; 255
    2096:	17 c0       	rjmp	.+46     	; 0x20c6 <__mulsf3+0x16e>
    2098:	ca 01       	movw	r24, r20
    209a:	81 70       	andi	r24, 0x01	; 1
    209c:	90 70       	andi	r25, 0x00	; 0
    209e:	89 2b       	or	r24, r25
    20a0:	61 f0       	breq	.+24     	; 0x20ba <__mulsf3+0x162>
    20a2:	16 95       	lsr	r17
    20a4:	07 95       	ror	r16
    20a6:	f7 94       	ror	r15
    20a8:	e7 94       	ror	r14
    20aa:	80 e0       	ldi	r24, 0x00	; 0
    20ac:	90 e0       	ldi	r25, 0x00	; 0
    20ae:	a0 e0       	ldi	r26, 0x00	; 0
    20b0:	b0 e8       	ldi	r27, 0x80	; 128
    20b2:	e8 2a       	or	r14, r24
    20b4:	f9 2a       	or	r15, r25
    20b6:	0a 2b       	or	r16, r26
    20b8:	1b 2b       	or	r17, r27
    20ba:	76 95       	lsr	r23
    20bc:	67 95       	ror	r22
    20be:	57 95       	ror	r21
    20c0:	47 95       	ror	r20
    20c2:	2f 5f       	subi	r18, 0xFF	; 255
    20c4:	3f 4f       	sbci	r19, 0xFF	; 255
    20c6:	77 fd       	sbrc	r23, 7
    20c8:	e7 cf       	rjmp	.-50     	; 0x2098 <__mulsf3+0x140>
    20ca:	0c c0       	rjmp	.+24     	; 0x20e4 <__mulsf3+0x18c>
    20cc:	44 0f       	add	r20, r20
    20ce:	55 1f       	adc	r21, r21
    20d0:	66 1f       	adc	r22, r22
    20d2:	77 1f       	adc	r23, r23
    20d4:	17 fd       	sbrc	r17, 7
    20d6:	41 60       	ori	r20, 0x01	; 1
    20d8:	ee 0c       	add	r14, r14
    20da:	ff 1c       	adc	r15, r15
    20dc:	00 1f       	adc	r16, r16
    20de:	11 1f       	adc	r17, r17
    20e0:	21 50       	subi	r18, 0x01	; 1
    20e2:	30 40       	sbci	r19, 0x00	; 0
    20e4:	40 30       	cpi	r20, 0x00	; 0
    20e6:	90 e0       	ldi	r25, 0x00	; 0
    20e8:	59 07       	cpc	r21, r25
    20ea:	90 e0       	ldi	r25, 0x00	; 0
    20ec:	69 07       	cpc	r22, r25
    20ee:	90 e4       	ldi	r25, 0x40	; 64
    20f0:	79 07       	cpc	r23, r25
    20f2:	60 f3       	brcs	.-40     	; 0x20cc <__mulsf3+0x174>
    20f4:	2b 8f       	std	Y+27, r18	; 0x1b
    20f6:	3c 8f       	std	Y+28, r19	; 0x1c
    20f8:	db 01       	movw	r26, r22
    20fa:	ca 01       	movw	r24, r20
    20fc:	8f 77       	andi	r24, 0x7F	; 127
    20fe:	90 70       	andi	r25, 0x00	; 0
    2100:	a0 70       	andi	r26, 0x00	; 0
    2102:	b0 70       	andi	r27, 0x00	; 0
    2104:	80 34       	cpi	r24, 0x40	; 64
    2106:	91 05       	cpc	r25, r1
    2108:	a1 05       	cpc	r26, r1
    210a:	b1 05       	cpc	r27, r1
    210c:	61 f4       	brne	.+24     	; 0x2126 <__mulsf3+0x1ce>
    210e:	47 fd       	sbrc	r20, 7
    2110:	0a c0       	rjmp	.+20     	; 0x2126 <__mulsf3+0x1ce>
    2112:	e1 14       	cp	r14, r1
    2114:	f1 04       	cpc	r15, r1
    2116:	01 05       	cpc	r16, r1
    2118:	11 05       	cpc	r17, r1
    211a:	29 f0       	breq	.+10     	; 0x2126 <__mulsf3+0x1ce>
    211c:	40 5c       	subi	r20, 0xC0	; 192
    211e:	5f 4f       	sbci	r21, 0xFF	; 255
    2120:	6f 4f       	sbci	r22, 0xFF	; 255
    2122:	7f 4f       	sbci	r23, 0xFF	; 255
    2124:	40 78       	andi	r20, 0x80	; 128
    2126:	1a 8e       	std	Y+26, r1	; 0x1a
    2128:	fe 17       	cp	r31, r30
    212a:	11 f0       	breq	.+4      	; 0x2130 <__mulsf3+0x1d8>
    212c:	81 e0       	ldi	r24, 0x01	; 1
    212e:	8a 8f       	std	Y+26, r24	; 0x1a
    2130:	4d 8f       	std	Y+29, r20	; 0x1d
    2132:	5e 8f       	std	Y+30, r21	; 0x1e
    2134:	6f 8f       	std	Y+31, r22	; 0x1f
    2136:	78 a3       	std	Y+32, r23	; 0x20
    2138:	83 e0       	ldi	r24, 0x03	; 3
    213a:	89 8f       	std	Y+25, r24	; 0x19
    213c:	ce 01       	movw	r24, r28
    213e:	49 96       	adiw	r24, 0x19	; 25
    2140:	0e 94 7d 13 	call	0x26fa	; 0x26fa <__pack_f>
    2144:	a0 96       	adiw	r28, 0x20	; 32
    2146:	e2 e1       	ldi	r30, 0x12	; 18
    2148:	0c 94 ae 30 	jmp	0x615c	; 0x615c <__epilogue_restores__>

0000214c <__divsf3>:
    214c:	a8 e1       	ldi	r26, 0x18	; 24
    214e:	b0 e0       	ldi	r27, 0x00	; 0
    2150:	ec ea       	ldi	r30, 0xAC	; 172
    2152:	f0 e1       	ldi	r31, 0x10	; 16
    2154:	0c 94 9a 30 	jmp	0x6134	; 0x6134 <__prologue_saves__+0x10>
    2158:	69 83       	std	Y+1, r22	; 0x01
    215a:	7a 83       	std	Y+2, r23	; 0x02
    215c:	8b 83       	std	Y+3, r24	; 0x03
    215e:	9c 83       	std	Y+4, r25	; 0x04
    2160:	2d 83       	std	Y+5, r18	; 0x05
    2162:	3e 83       	std	Y+6, r19	; 0x06
    2164:	4f 83       	std	Y+7, r20	; 0x07
    2166:	58 87       	std	Y+8, r21	; 0x08
    2168:	b9 e0       	ldi	r27, 0x09	; 9
    216a:	eb 2e       	mov	r14, r27
    216c:	f1 2c       	mov	r15, r1
    216e:	ec 0e       	add	r14, r28
    2170:	fd 1e       	adc	r15, r29
    2172:	ce 01       	movw	r24, r28
    2174:	01 96       	adiw	r24, 0x01	; 1
    2176:	b7 01       	movw	r22, r14
    2178:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    217c:	8e 01       	movw	r16, r28
    217e:	0f 5e       	subi	r16, 0xEF	; 239
    2180:	1f 4f       	sbci	r17, 0xFF	; 255
    2182:	ce 01       	movw	r24, r28
    2184:	05 96       	adiw	r24, 0x05	; 5
    2186:	b8 01       	movw	r22, r16
    2188:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    218c:	29 85       	ldd	r18, Y+9	; 0x09
    218e:	22 30       	cpi	r18, 0x02	; 2
    2190:	08 f4       	brcc	.+2      	; 0x2194 <__divsf3+0x48>
    2192:	7e c0       	rjmp	.+252    	; 0x2290 <__divsf3+0x144>
    2194:	39 89       	ldd	r19, Y+17	; 0x11
    2196:	32 30       	cpi	r19, 0x02	; 2
    2198:	10 f4       	brcc	.+4      	; 0x219e <__divsf3+0x52>
    219a:	b8 01       	movw	r22, r16
    219c:	7c c0       	rjmp	.+248    	; 0x2296 <__divsf3+0x14a>
    219e:	8a 85       	ldd	r24, Y+10	; 0x0a
    21a0:	9a 89       	ldd	r25, Y+18	; 0x12
    21a2:	89 27       	eor	r24, r25
    21a4:	8a 87       	std	Y+10, r24	; 0x0a
    21a6:	24 30       	cpi	r18, 0x04	; 4
    21a8:	11 f0       	breq	.+4      	; 0x21ae <__divsf3+0x62>
    21aa:	22 30       	cpi	r18, 0x02	; 2
    21ac:	31 f4       	brne	.+12     	; 0x21ba <__divsf3+0x6e>
    21ae:	23 17       	cp	r18, r19
    21b0:	09 f0       	breq	.+2      	; 0x21b4 <__divsf3+0x68>
    21b2:	6e c0       	rjmp	.+220    	; 0x2290 <__divsf3+0x144>
    21b4:	60 e6       	ldi	r22, 0x60	; 96
    21b6:	70 e0       	ldi	r23, 0x00	; 0
    21b8:	6e c0       	rjmp	.+220    	; 0x2296 <__divsf3+0x14a>
    21ba:	34 30       	cpi	r19, 0x04	; 4
    21bc:	39 f4       	brne	.+14     	; 0x21cc <__divsf3+0x80>
    21be:	1d 86       	std	Y+13, r1	; 0x0d
    21c0:	1e 86       	std	Y+14, r1	; 0x0e
    21c2:	1f 86       	std	Y+15, r1	; 0x0f
    21c4:	18 8a       	std	Y+16, r1	; 0x10
    21c6:	1c 86       	std	Y+12, r1	; 0x0c
    21c8:	1b 86       	std	Y+11, r1	; 0x0b
    21ca:	04 c0       	rjmp	.+8      	; 0x21d4 <__divsf3+0x88>
    21cc:	32 30       	cpi	r19, 0x02	; 2
    21ce:	21 f4       	brne	.+8      	; 0x21d8 <__divsf3+0x8c>
    21d0:	84 e0       	ldi	r24, 0x04	; 4
    21d2:	89 87       	std	Y+9, r24	; 0x09
    21d4:	b7 01       	movw	r22, r14
    21d6:	5f c0       	rjmp	.+190    	; 0x2296 <__divsf3+0x14a>
    21d8:	2b 85       	ldd	r18, Y+11	; 0x0b
    21da:	3c 85       	ldd	r19, Y+12	; 0x0c
    21dc:	8b 89       	ldd	r24, Y+19	; 0x13
    21de:	9c 89       	ldd	r25, Y+20	; 0x14
    21e0:	28 1b       	sub	r18, r24
    21e2:	39 0b       	sbc	r19, r25
    21e4:	3c 87       	std	Y+12, r19	; 0x0c
    21e6:	2b 87       	std	Y+11, r18	; 0x0b
    21e8:	ed 84       	ldd	r14, Y+13	; 0x0d
    21ea:	fe 84       	ldd	r15, Y+14	; 0x0e
    21ec:	0f 85       	ldd	r16, Y+15	; 0x0f
    21ee:	18 89       	ldd	r17, Y+16	; 0x10
    21f0:	ad 88       	ldd	r10, Y+21	; 0x15
    21f2:	be 88       	ldd	r11, Y+22	; 0x16
    21f4:	cf 88       	ldd	r12, Y+23	; 0x17
    21f6:	d8 8c       	ldd	r13, Y+24	; 0x18
    21f8:	ea 14       	cp	r14, r10
    21fa:	fb 04       	cpc	r15, r11
    21fc:	0c 05       	cpc	r16, r12
    21fe:	1d 05       	cpc	r17, r13
    2200:	40 f4       	brcc	.+16     	; 0x2212 <__divsf3+0xc6>
    2202:	ee 0c       	add	r14, r14
    2204:	ff 1c       	adc	r15, r15
    2206:	00 1f       	adc	r16, r16
    2208:	11 1f       	adc	r17, r17
    220a:	21 50       	subi	r18, 0x01	; 1
    220c:	30 40       	sbci	r19, 0x00	; 0
    220e:	3c 87       	std	Y+12, r19	; 0x0c
    2210:	2b 87       	std	Y+11, r18	; 0x0b
    2212:	20 e0       	ldi	r18, 0x00	; 0
    2214:	30 e0       	ldi	r19, 0x00	; 0
    2216:	40 e0       	ldi	r20, 0x00	; 0
    2218:	50 e0       	ldi	r21, 0x00	; 0
    221a:	80 e0       	ldi	r24, 0x00	; 0
    221c:	90 e0       	ldi	r25, 0x00	; 0
    221e:	a0 e0       	ldi	r26, 0x00	; 0
    2220:	b0 e4       	ldi	r27, 0x40	; 64
    2222:	60 e0       	ldi	r22, 0x00	; 0
    2224:	70 e0       	ldi	r23, 0x00	; 0
    2226:	ea 14       	cp	r14, r10
    2228:	fb 04       	cpc	r15, r11
    222a:	0c 05       	cpc	r16, r12
    222c:	1d 05       	cpc	r17, r13
    222e:	40 f0       	brcs	.+16     	; 0x2240 <__divsf3+0xf4>
    2230:	28 2b       	or	r18, r24
    2232:	39 2b       	or	r19, r25
    2234:	4a 2b       	or	r20, r26
    2236:	5b 2b       	or	r21, r27
    2238:	ea 18       	sub	r14, r10
    223a:	fb 08       	sbc	r15, r11
    223c:	0c 09       	sbc	r16, r12
    223e:	1d 09       	sbc	r17, r13
    2240:	b6 95       	lsr	r27
    2242:	a7 95       	ror	r26
    2244:	97 95       	ror	r25
    2246:	87 95       	ror	r24
    2248:	ee 0c       	add	r14, r14
    224a:	ff 1c       	adc	r15, r15
    224c:	00 1f       	adc	r16, r16
    224e:	11 1f       	adc	r17, r17
    2250:	6f 5f       	subi	r22, 0xFF	; 255
    2252:	7f 4f       	sbci	r23, 0xFF	; 255
    2254:	6f 31       	cpi	r22, 0x1F	; 31
    2256:	71 05       	cpc	r23, r1
    2258:	31 f7       	brne	.-52     	; 0x2226 <__divsf3+0xda>
    225a:	da 01       	movw	r26, r20
    225c:	c9 01       	movw	r24, r18
    225e:	8f 77       	andi	r24, 0x7F	; 127
    2260:	90 70       	andi	r25, 0x00	; 0
    2262:	a0 70       	andi	r26, 0x00	; 0
    2264:	b0 70       	andi	r27, 0x00	; 0
    2266:	80 34       	cpi	r24, 0x40	; 64
    2268:	91 05       	cpc	r25, r1
    226a:	a1 05       	cpc	r26, r1
    226c:	b1 05       	cpc	r27, r1
    226e:	61 f4       	brne	.+24     	; 0x2288 <__divsf3+0x13c>
    2270:	27 fd       	sbrc	r18, 7
    2272:	0a c0       	rjmp	.+20     	; 0x2288 <__divsf3+0x13c>
    2274:	e1 14       	cp	r14, r1
    2276:	f1 04       	cpc	r15, r1
    2278:	01 05       	cpc	r16, r1
    227a:	11 05       	cpc	r17, r1
    227c:	29 f0       	breq	.+10     	; 0x2288 <__divsf3+0x13c>
    227e:	20 5c       	subi	r18, 0xC0	; 192
    2280:	3f 4f       	sbci	r19, 0xFF	; 255
    2282:	4f 4f       	sbci	r20, 0xFF	; 255
    2284:	5f 4f       	sbci	r21, 0xFF	; 255
    2286:	20 78       	andi	r18, 0x80	; 128
    2288:	2d 87       	std	Y+13, r18	; 0x0d
    228a:	3e 87       	std	Y+14, r19	; 0x0e
    228c:	4f 87       	std	Y+15, r20	; 0x0f
    228e:	58 8b       	std	Y+16, r21	; 0x10
    2290:	be 01       	movw	r22, r28
    2292:	67 5f       	subi	r22, 0xF7	; 247
    2294:	7f 4f       	sbci	r23, 0xFF	; 255
    2296:	cb 01       	movw	r24, r22
    2298:	0e 94 7d 13 	call	0x26fa	; 0x26fa <__pack_f>
    229c:	68 96       	adiw	r28, 0x18	; 24
    229e:	ea e0       	ldi	r30, 0x0A	; 10
    22a0:	0c 94 b6 30 	jmp	0x616c	; 0x616c <__epilogue_restores__+0x10>

000022a4 <__gtsf2>:
    22a4:	a8 e1       	ldi	r26, 0x18	; 24
    22a6:	b0 e0       	ldi	r27, 0x00	; 0
    22a8:	e8 e5       	ldi	r30, 0x58	; 88
    22aa:	f1 e1       	ldi	r31, 0x11	; 17
    22ac:	0c 94 9e 30 	jmp	0x613c	; 0x613c <__prologue_saves__+0x18>
    22b0:	69 83       	std	Y+1, r22	; 0x01
    22b2:	7a 83       	std	Y+2, r23	; 0x02
    22b4:	8b 83       	std	Y+3, r24	; 0x03
    22b6:	9c 83       	std	Y+4, r25	; 0x04
    22b8:	2d 83       	std	Y+5, r18	; 0x05
    22ba:	3e 83       	std	Y+6, r19	; 0x06
    22bc:	4f 83       	std	Y+7, r20	; 0x07
    22be:	58 87       	std	Y+8, r21	; 0x08
    22c0:	89 e0       	ldi	r24, 0x09	; 9
    22c2:	e8 2e       	mov	r14, r24
    22c4:	f1 2c       	mov	r15, r1
    22c6:	ec 0e       	add	r14, r28
    22c8:	fd 1e       	adc	r15, r29
    22ca:	ce 01       	movw	r24, r28
    22cc:	01 96       	adiw	r24, 0x01	; 1
    22ce:	b7 01       	movw	r22, r14
    22d0:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    22d4:	8e 01       	movw	r16, r28
    22d6:	0f 5e       	subi	r16, 0xEF	; 239
    22d8:	1f 4f       	sbci	r17, 0xFF	; 255
    22da:	ce 01       	movw	r24, r28
    22dc:	05 96       	adiw	r24, 0x05	; 5
    22de:	b8 01       	movw	r22, r16
    22e0:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    22e4:	89 85       	ldd	r24, Y+9	; 0x09
    22e6:	82 30       	cpi	r24, 0x02	; 2
    22e8:	40 f0       	brcs	.+16     	; 0x22fa <__gtsf2+0x56>
    22ea:	89 89       	ldd	r24, Y+17	; 0x11
    22ec:	82 30       	cpi	r24, 0x02	; 2
    22ee:	28 f0       	brcs	.+10     	; 0x22fa <__gtsf2+0x56>
    22f0:	c7 01       	movw	r24, r14
    22f2:	b8 01       	movw	r22, r16
    22f4:	0e 94 ca 14 	call	0x2994	; 0x2994 <__fpcmp_parts_f>
    22f8:	01 c0       	rjmp	.+2      	; 0x22fc <__gtsf2+0x58>
    22fa:	8f ef       	ldi	r24, 0xFF	; 255
    22fc:	68 96       	adiw	r28, 0x18	; 24
    22fe:	e6 e0       	ldi	r30, 0x06	; 6
    2300:	0c 94 ba 30 	jmp	0x6174	; 0x6174 <__epilogue_restores__+0x18>

00002304 <__gesf2>:
    2304:	a8 e1       	ldi	r26, 0x18	; 24
    2306:	b0 e0       	ldi	r27, 0x00	; 0
    2308:	e8 e8       	ldi	r30, 0x88	; 136
    230a:	f1 e1       	ldi	r31, 0x11	; 17
    230c:	0c 94 9e 30 	jmp	0x613c	; 0x613c <__prologue_saves__+0x18>
    2310:	69 83       	std	Y+1, r22	; 0x01
    2312:	7a 83       	std	Y+2, r23	; 0x02
    2314:	8b 83       	std	Y+3, r24	; 0x03
    2316:	9c 83       	std	Y+4, r25	; 0x04
    2318:	2d 83       	std	Y+5, r18	; 0x05
    231a:	3e 83       	std	Y+6, r19	; 0x06
    231c:	4f 83       	std	Y+7, r20	; 0x07
    231e:	58 87       	std	Y+8, r21	; 0x08
    2320:	89 e0       	ldi	r24, 0x09	; 9
    2322:	e8 2e       	mov	r14, r24
    2324:	f1 2c       	mov	r15, r1
    2326:	ec 0e       	add	r14, r28
    2328:	fd 1e       	adc	r15, r29
    232a:	ce 01       	movw	r24, r28
    232c:	01 96       	adiw	r24, 0x01	; 1
    232e:	b7 01       	movw	r22, r14
    2330:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    2334:	8e 01       	movw	r16, r28
    2336:	0f 5e       	subi	r16, 0xEF	; 239
    2338:	1f 4f       	sbci	r17, 0xFF	; 255
    233a:	ce 01       	movw	r24, r28
    233c:	05 96       	adiw	r24, 0x05	; 5
    233e:	b8 01       	movw	r22, r16
    2340:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    2344:	89 85       	ldd	r24, Y+9	; 0x09
    2346:	82 30       	cpi	r24, 0x02	; 2
    2348:	40 f0       	brcs	.+16     	; 0x235a <__gesf2+0x56>
    234a:	89 89       	ldd	r24, Y+17	; 0x11
    234c:	82 30       	cpi	r24, 0x02	; 2
    234e:	28 f0       	brcs	.+10     	; 0x235a <__gesf2+0x56>
    2350:	c7 01       	movw	r24, r14
    2352:	b8 01       	movw	r22, r16
    2354:	0e 94 ca 14 	call	0x2994	; 0x2994 <__fpcmp_parts_f>
    2358:	01 c0       	rjmp	.+2      	; 0x235c <__gesf2+0x58>
    235a:	8f ef       	ldi	r24, 0xFF	; 255
    235c:	68 96       	adiw	r28, 0x18	; 24
    235e:	e6 e0       	ldi	r30, 0x06	; 6
    2360:	0c 94 ba 30 	jmp	0x6174	; 0x6174 <__epilogue_restores__+0x18>

00002364 <__ltsf2>:
    2364:	a8 e1       	ldi	r26, 0x18	; 24
    2366:	b0 e0       	ldi	r27, 0x00	; 0
    2368:	e8 eb       	ldi	r30, 0xB8	; 184
    236a:	f1 e1       	ldi	r31, 0x11	; 17
    236c:	0c 94 9e 30 	jmp	0x613c	; 0x613c <__prologue_saves__+0x18>
    2370:	69 83       	std	Y+1, r22	; 0x01
    2372:	7a 83       	std	Y+2, r23	; 0x02
    2374:	8b 83       	std	Y+3, r24	; 0x03
    2376:	9c 83       	std	Y+4, r25	; 0x04
    2378:	2d 83       	std	Y+5, r18	; 0x05
    237a:	3e 83       	std	Y+6, r19	; 0x06
    237c:	4f 83       	std	Y+7, r20	; 0x07
    237e:	58 87       	std	Y+8, r21	; 0x08
    2380:	89 e0       	ldi	r24, 0x09	; 9
    2382:	e8 2e       	mov	r14, r24
    2384:	f1 2c       	mov	r15, r1
    2386:	ec 0e       	add	r14, r28
    2388:	fd 1e       	adc	r15, r29
    238a:	ce 01       	movw	r24, r28
    238c:	01 96       	adiw	r24, 0x01	; 1
    238e:	b7 01       	movw	r22, r14
    2390:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    2394:	8e 01       	movw	r16, r28
    2396:	0f 5e       	subi	r16, 0xEF	; 239
    2398:	1f 4f       	sbci	r17, 0xFF	; 255
    239a:	ce 01       	movw	r24, r28
    239c:	05 96       	adiw	r24, 0x05	; 5
    239e:	b8 01       	movw	r22, r16
    23a0:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    23a4:	89 85       	ldd	r24, Y+9	; 0x09
    23a6:	82 30       	cpi	r24, 0x02	; 2
    23a8:	40 f0       	brcs	.+16     	; 0x23ba <__ltsf2+0x56>
    23aa:	89 89       	ldd	r24, Y+17	; 0x11
    23ac:	82 30       	cpi	r24, 0x02	; 2
    23ae:	28 f0       	brcs	.+10     	; 0x23ba <__ltsf2+0x56>
    23b0:	c7 01       	movw	r24, r14
    23b2:	b8 01       	movw	r22, r16
    23b4:	0e 94 ca 14 	call	0x2994	; 0x2994 <__fpcmp_parts_f>
    23b8:	01 c0       	rjmp	.+2      	; 0x23bc <__ltsf2+0x58>
    23ba:	81 e0       	ldi	r24, 0x01	; 1
    23bc:	68 96       	adiw	r28, 0x18	; 24
    23be:	e6 e0       	ldi	r30, 0x06	; 6
    23c0:	0c 94 ba 30 	jmp	0x6174	; 0x6174 <__epilogue_restores__+0x18>

000023c4 <__fixsfsi>:
    23c4:	ac e0       	ldi	r26, 0x0C	; 12
    23c6:	b0 e0       	ldi	r27, 0x00	; 0
    23c8:	e8 ee       	ldi	r30, 0xE8	; 232
    23ca:	f1 e1       	ldi	r31, 0x11	; 17
    23cc:	0c 94 a2 30 	jmp	0x6144	; 0x6144 <__prologue_saves__+0x20>
    23d0:	69 83       	std	Y+1, r22	; 0x01
    23d2:	7a 83       	std	Y+2, r23	; 0x02
    23d4:	8b 83       	std	Y+3, r24	; 0x03
    23d6:	9c 83       	std	Y+4, r25	; 0x04
    23d8:	ce 01       	movw	r24, r28
    23da:	01 96       	adiw	r24, 0x01	; 1
    23dc:	be 01       	movw	r22, r28
    23de:	6b 5f       	subi	r22, 0xFB	; 251
    23e0:	7f 4f       	sbci	r23, 0xFF	; 255
    23e2:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    23e6:	8d 81       	ldd	r24, Y+5	; 0x05
    23e8:	82 30       	cpi	r24, 0x02	; 2
    23ea:	61 f1       	breq	.+88     	; 0x2444 <__fixsfsi+0x80>
    23ec:	82 30       	cpi	r24, 0x02	; 2
    23ee:	50 f1       	brcs	.+84     	; 0x2444 <__fixsfsi+0x80>
    23f0:	84 30       	cpi	r24, 0x04	; 4
    23f2:	21 f4       	brne	.+8      	; 0x23fc <__fixsfsi+0x38>
    23f4:	8e 81       	ldd	r24, Y+6	; 0x06
    23f6:	88 23       	and	r24, r24
    23f8:	51 f1       	breq	.+84     	; 0x244e <__fixsfsi+0x8a>
    23fa:	2e c0       	rjmp	.+92     	; 0x2458 <__fixsfsi+0x94>
    23fc:	2f 81       	ldd	r18, Y+7	; 0x07
    23fe:	38 85       	ldd	r19, Y+8	; 0x08
    2400:	37 fd       	sbrc	r19, 7
    2402:	20 c0       	rjmp	.+64     	; 0x2444 <__fixsfsi+0x80>
    2404:	6e 81       	ldd	r22, Y+6	; 0x06
    2406:	2f 31       	cpi	r18, 0x1F	; 31
    2408:	31 05       	cpc	r19, r1
    240a:	1c f0       	brlt	.+6      	; 0x2412 <__fixsfsi+0x4e>
    240c:	66 23       	and	r22, r22
    240e:	f9 f0       	breq	.+62     	; 0x244e <__fixsfsi+0x8a>
    2410:	23 c0       	rjmp	.+70     	; 0x2458 <__fixsfsi+0x94>
    2412:	8e e1       	ldi	r24, 0x1E	; 30
    2414:	90 e0       	ldi	r25, 0x00	; 0
    2416:	82 1b       	sub	r24, r18
    2418:	93 0b       	sbc	r25, r19
    241a:	29 85       	ldd	r18, Y+9	; 0x09
    241c:	3a 85       	ldd	r19, Y+10	; 0x0a
    241e:	4b 85       	ldd	r20, Y+11	; 0x0b
    2420:	5c 85       	ldd	r21, Y+12	; 0x0c
    2422:	04 c0       	rjmp	.+8      	; 0x242c <__fixsfsi+0x68>
    2424:	56 95       	lsr	r21
    2426:	47 95       	ror	r20
    2428:	37 95       	ror	r19
    242a:	27 95       	ror	r18
    242c:	8a 95       	dec	r24
    242e:	d2 f7       	brpl	.-12     	; 0x2424 <__fixsfsi+0x60>
    2430:	66 23       	and	r22, r22
    2432:	b1 f0       	breq	.+44     	; 0x2460 <__fixsfsi+0x9c>
    2434:	50 95       	com	r21
    2436:	40 95       	com	r20
    2438:	30 95       	com	r19
    243a:	21 95       	neg	r18
    243c:	3f 4f       	sbci	r19, 0xFF	; 255
    243e:	4f 4f       	sbci	r20, 0xFF	; 255
    2440:	5f 4f       	sbci	r21, 0xFF	; 255
    2442:	0e c0       	rjmp	.+28     	; 0x2460 <__fixsfsi+0x9c>
    2444:	20 e0       	ldi	r18, 0x00	; 0
    2446:	30 e0       	ldi	r19, 0x00	; 0
    2448:	40 e0       	ldi	r20, 0x00	; 0
    244a:	50 e0       	ldi	r21, 0x00	; 0
    244c:	09 c0       	rjmp	.+18     	; 0x2460 <__fixsfsi+0x9c>
    244e:	2f ef       	ldi	r18, 0xFF	; 255
    2450:	3f ef       	ldi	r19, 0xFF	; 255
    2452:	4f ef       	ldi	r20, 0xFF	; 255
    2454:	5f e7       	ldi	r21, 0x7F	; 127
    2456:	04 c0       	rjmp	.+8      	; 0x2460 <__fixsfsi+0x9c>
    2458:	20 e0       	ldi	r18, 0x00	; 0
    245a:	30 e0       	ldi	r19, 0x00	; 0
    245c:	40 e0       	ldi	r20, 0x00	; 0
    245e:	50 e8       	ldi	r21, 0x80	; 128
    2460:	b9 01       	movw	r22, r18
    2462:	ca 01       	movw	r24, r20
    2464:	2c 96       	adiw	r28, 0x0c	; 12
    2466:	e2 e0       	ldi	r30, 0x02	; 2
    2468:	0c 94 be 30 	jmp	0x617c	; 0x617c <__epilogue_restores__+0x20>

0000246c <__floatunsisf>:
    246c:	a8 e0       	ldi	r26, 0x08	; 8
    246e:	b0 e0       	ldi	r27, 0x00	; 0
    2470:	ec e3       	ldi	r30, 0x3C	; 60
    2472:	f2 e1       	ldi	r31, 0x12	; 18
    2474:	0c 94 9a 30 	jmp	0x6134	; 0x6134 <__prologue_saves__+0x10>
    2478:	7b 01       	movw	r14, r22
    247a:	8c 01       	movw	r16, r24
    247c:	61 15       	cp	r22, r1
    247e:	71 05       	cpc	r23, r1
    2480:	81 05       	cpc	r24, r1
    2482:	91 05       	cpc	r25, r1
    2484:	19 f4       	brne	.+6      	; 0x248c <__floatunsisf+0x20>
    2486:	82 e0       	ldi	r24, 0x02	; 2
    2488:	89 83       	std	Y+1, r24	; 0x01
    248a:	60 c0       	rjmp	.+192    	; 0x254c <__floatunsisf+0xe0>
    248c:	83 e0       	ldi	r24, 0x03	; 3
    248e:	89 83       	std	Y+1, r24	; 0x01
    2490:	8e e1       	ldi	r24, 0x1E	; 30
    2492:	c8 2e       	mov	r12, r24
    2494:	d1 2c       	mov	r13, r1
    2496:	dc 82       	std	Y+4, r13	; 0x04
    2498:	cb 82       	std	Y+3, r12	; 0x03
    249a:	ed 82       	std	Y+5, r14	; 0x05
    249c:	fe 82       	std	Y+6, r15	; 0x06
    249e:	0f 83       	std	Y+7, r16	; 0x07
    24a0:	18 87       	std	Y+8, r17	; 0x08
    24a2:	c8 01       	movw	r24, r16
    24a4:	b7 01       	movw	r22, r14
    24a6:	0e 94 2e 13 	call	0x265c	; 0x265c <__clzsi2>
    24aa:	fc 01       	movw	r30, r24
    24ac:	31 97       	sbiw	r30, 0x01	; 1
    24ae:	f7 ff       	sbrs	r31, 7
    24b0:	3b c0       	rjmp	.+118    	; 0x2528 <__floatunsisf+0xbc>
    24b2:	22 27       	eor	r18, r18
    24b4:	33 27       	eor	r19, r19
    24b6:	2e 1b       	sub	r18, r30
    24b8:	3f 0b       	sbc	r19, r31
    24ba:	57 01       	movw	r10, r14
    24bc:	68 01       	movw	r12, r16
    24be:	02 2e       	mov	r0, r18
    24c0:	04 c0       	rjmp	.+8      	; 0x24ca <__floatunsisf+0x5e>
    24c2:	d6 94       	lsr	r13
    24c4:	c7 94       	ror	r12
    24c6:	b7 94       	ror	r11
    24c8:	a7 94       	ror	r10
    24ca:	0a 94       	dec	r0
    24cc:	d2 f7       	brpl	.-12     	; 0x24c2 <__floatunsisf+0x56>
    24ce:	40 e0       	ldi	r20, 0x00	; 0
    24d0:	50 e0       	ldi	r21, 0x00	; 0
    24d2:	60 e0       	ldi	r22, 0x00	; 0
    24d4:	70 e0       	ldi	r23, 0x00	; 0
    24d6:	81 e0       	ldi	r24, 0x01	; 1
    24d8:	90 e0       	ldi	r25, 0x00	; 0
    24da:	a0 e0       	ldi	r26, 0x00	; 0
    24dc:	b0 e0       	ldi	r27, 0x00	; 0
    24de:	04 c0       	rjmp	.+8      	; 0x24e8 <__floatunsisf+0x7c>
    24e0:	88 0f       	add	r24, r24
    24e2:	99 1f       	adc	r25, r25
    24e4:	aa 1f       	adc	r26, r26
    24e6:	bb 1f       	adc	r27, r27
    24e8:	2a 95       	dec	r18
    24ea:	d2 f7       	brpl	.-12     	; 0x24e0 <__floatunsisf+0x74>
    24ec:	01 97       	sbiw	r24, 0x01	; 1
    24ee:	a1 09       	sbc	r26, r1
    24f0:	b1 09       	sbc	r27, r1
    24f2:	8e 21       	and	r24, r14
    24f4:	9f 21       	and	r25, r15
    24f6:	a0 23       	and	r26, r16
    24f8:	b1 23       	and	r27, r17
    24fa:	00 97       	sbiw	r24, 0x00	; 0
    24fc:	a1 05       	cpc	r26, r1
    24fe:	b1 05       	cpc	r27, r1
    2500:	21 f0       	breq	.+8      	; 0x250a <__floatunsisf+0x9e>
    2502:	41 e0       	ldi	r20, 0x01	; 1
    2504:	50 e0       	ldi	r21, 0x00	; 0
    2506:	60 e0       	ldi	r22, 0x00	; 0
    2508:	70 e0       	ldi	r23, 0x00	; 0
    250a:	4a 29       	or	r20, r10
    250c:	5b 29       	or	r21, r11
    250e:	6c 29       	or	r22, r12
    2510:	7d 29       	or	r23, r13
    2512:	4d 83       	std	Y+5, r20	; 0x05
    2514:	5e 83       	std	Y+6, r21	; 0x06
    2516:	6f 83       	std	Y+7, r22	; 0x07
    2518:	78 87       	std	Y+8, r23	; 0x08
    251a:	8e e1       	ldi	r24, 0x1E	; 30
    251c:	90 e0       	ldi	r25, 0x00	; 0
    251e:	8e 1b       	sub	r24, r30
    2520:	9f 0b       	sbc	r25, r31
    2522:	9c 83       	std	Y+4, r25	; 0x04
    2524:	8b 83       	std	Y+3, r24	; 0x03
    2526:	12 c0       	rjmp	.+36     	; 0x254c <__floatunsisf+0xe0>
    2528:	30 97       	sbiw	r30, 0x00	; 0
    252a:	81 f0       	breq	.+32     	; 0x254c <__floatunsisf+0xe0>
    252c:	0e 2e       	mov	r0, r30
    252e:	04 c0       	rjmp	.+8      	; 0x2538 <__floatunsisf+0xcc>
    2530:	ee 0c       	add	r14, r14
    2532:	ff 1c       	adc	r15, r15
    2534:	00 1f       	adc	r16, r16
    2536:	11 1f       	adc	r17, r17
    2538:	0a 94       	dec	r0
    253a:	d2 f7       	brpl	.-12     	; 0x2530 <__floatunsisf+0xc4>
    253c:	ed 82       	std	Y+5, r14	; 0x05
    253e:	fe 82       	std	Y+6, r15	; 0x06
    2540:	0f 83       	std	Y+7, r16	; 0x07
    2542:	18 87       	std	Y+8, r17	; 0x08
    2544:	ce 1a       	sub	r12, r30
    2546:	df 0a       	sbc	r13, r31
    2548:	dc 82       	std	Y+4, r13	; 0x04
    254a:	cb 82       	std	Y+3, r12	; 0x03
    254c:	1a 82       	std	Y+2, r1	; 0x02
    254e:	ce 01       	movw	r24, r28
    2550:	01 96       	adiw	r24, 0x01	; 1
    2552:	0e 94 7d 13 	call	0x26fa	; 0x26fa <__pack_f>
    2556:	28 96       	adiw	r28, 0x08	; 8
    2558:	ea e0       	ldi	r30, 0x0A	; 10
    255a:	0c 94 b6 30 	jmp	0x616c	; 0x616c <__epilogue_restores__+0x10>

0000255e <__ashldi3>:
    255e:	ef 92       	push	r14
    2560:	ff 92       	push	r15
    2562:	0f 93       	push	r16
    2564:	df 93       	push	r29
    2566:	cf 93       	push	r28
    2568:	cd b7       	in	r28, 0x3d	; 61
    256a:	de b7       	in	r29, 0x3e	; 62
    256c:	60 97       	sbiw	r28, 0x10	; 16
    256e:	0f b6       	in	r0, 0x3f	; 63
    2570:	f8 94       	cli
    2572:	de bf       	out	0x3e, r29	; 62
    2574:	0f be       	out	0x3f, r0	; 63
    2576:	cd bf       	out	0x3d, r28	; 61
    2578:	a8 2f       	mov	r26, r24
    257a:	00 23       	and	r16, r16
    257c:	09 f4       	brne	.+2      	; 0x2580 <__ashldi3+0x22>
    257e:	61 c0       	rjmp	.+194    	; 0x2642 <__ashldi3+0xe4>
    2580:	7e 01       	movw	r14, r28
    2582:	08 94       	sec
    2584:	e1 1c       	adc	r14, r1
    2586:	f1 1c       	adc	r15, r1
    2588:	88 e0       	ldi	r24, 0x08	; 8
    258a:	f7 01       	movw	r30, r14
    258c:	11 92       	st	Z+, r1
    258e:	8a 95       	dec	r24
    2590:	e9 f7       	brne	.-6      	; 0x258c <__ashldi3+0x2e>
    2592:	29 83       	std	Y+1, r18	; 0x01
    2594:	3a 83       	std	Y+2, r19	; 0x02
    2596:	4b 83       	std	Y+3, r20	; 0x03
    2598:	5c 83       	std	Y+4, r21	; 0x04
    259a:	6d 83       	std	Y+5, r22	; 0x05
    259c:	7e 83       	std	Y+6, r23	; 0x06
    259e:	af 83       	std	Y+7, r26	; 0x07
    25a0:	98 87       	std	Y+8, r25	; 0x08
    25a2:	80 e2       	ldi	r24, 0x20	; 32
    25a4:	80 1b       	sub	r24, r16
    25a6:	e8 2f       	mov	r30, r24
    25a8:	ff 27       	eor	r31, r31
    25aa:	e7 fd       	sbrc	r30, 7
    25ac:	f0 95       	com	r31
    25ae:	49 81       	ldd	r20, Y+1	; 0x01
    25b0:	5a 81       	ldd	r21, Y+2	; 0x02
    25b2:	6b 81       	ldd	r22, Y+3	; 0x03
    25b4:	7c 81       	ldd	r23, Y+4	; 0x04
    25b6:	18 16       	cp	r1, r24
    25b8:	84 f0       	brlt	.+32     	; 0x25da <__ashldi3+0x7c>
    25ba:	19 86       	std	Y+9, r1	; 0x09
    25bc:	1a 86       	std	Y+10, r1	; 0x0a
    25be:	1b 86       	std	Y+11, r1	; 0x0b
    25c0:	1c 86       	std	Y+12, r1	; 0x0c
    25c2:	88 27       	eor	r24, r24
    25c4:	99 27       	eor	r25, r25
    25c6:	8e 1b       	sub	r24, r30
    25c8:	9f 0b       	sbc	r25, r31
    25ca:	04 c0       	rjmp	.+8      	; 0x25d4 <__ashldi3+0x76>
    25cc:	44 0f       	add	r20, r20
    25ce:	55 1f       	adc	r21, r21
    25d0:	66 1f       	adc	r22, r22
    25d2:	77 1f       	adc	r23, r23
    25d4:	8a 95       	dec	r24
    25d6:	d2 f7       	brpl	.-12     	; 0x25cc <__ashldi3+0x6e>
    25d8:	28 c0       	rjmp	.+80     	; 0x262a <__ashldi3+0xcc>
    25da:	20 2f       	mov	r18, r16
    25dc:	33 27       	eor	r19, r19
    25de:	27 fd       	sbrc	r18, 7
    25e0:	30 95       	com	r19
    25e2:	db 01       	movw	r26, r22
    25e4:	ca 01       	movw	r24, r20
    25e6:	02 2e       	mov	r0, r18
    25e8:	04 c0       	rjmp	.+8      	; 0x25f2 <__ashldi3+0x94>
    25ea:	88 0f       	add	r24, r24
    25ec:	99 1f       	adc	r25, r25
    25ee:	aa 1f       	adc	r26, r26
    25f0:	bb 1f       	adc	r27, r27
    25f2:	0a 94       	dec	r0
    25f4:	d2 f7       	brpl	.-12     	; 0x25ea <__ashldi3+0x8c>
    25f6:	89 87       	std	Y+9, r24	; 0x09
    25f8:	9a 87       	std	Y+10, r25	; 0x0a
    25fa:	ab 87       	std	Y+11, r26	; 0x0b
    25fc:	bc 87       	std	Y+12, r27	; 0x0c
    25fe:	04 c0       	rjmp	.+8      	; 0x2608 <__ashldi3+0xaa>
    2600:	76 95       	lsr	r23
    2602:	67 95       	ror	r22
    2604:	57 95       	ror	r21
    2606:	47 95       	ror	r20
    2608:	ea 95       	dec	r30
    260a:	d2 f7       	brpl	.-12     	; 0x2600 <__ashldi3+0xa2>
    260c:	8d 81       	ldd	r24, Y+5	; 0x05
    260e:	9e 81       	ldd	r25, Y+6	; 0x06
    2610:	af 81       	ldd	r26, Y+7	; 0x07
    2612:	b8 85       	ldd	r27, Y+8	; 0x08
    2614:	04 c0       	rjmp	.+8      	; 0x261e <__ashldi3+0xc0>
    2616:	88 0f       	add	r24, r24
    2618:	99 1f       	adc	r25, r25
    261a:	aa 1f       	adc	r26, r26
    261c:	bb 1f       	adc	r27, r27
    261e:	2a 95       	dec	r18
    2620:	d2 f7       	brpl	.-12     	; 0x2616 <__ashldi3+0xb8>
    2622:	48 2b       	or	r20, r24
    2624:	59 2b       	or	r21, r25
    2626:	6a 2b       	or	r22, r26
    2628:	7b 2b       	or	r23, r27
    262a:	4d 87       	std	Y+13, r20	; 0x0d
    262c:	5e 87       	std	Y+14, r21	; 0x0e
    262e:	6f 87       	std	Y+15, r22	; 0x0f
    2630:	78 8b       	std	Y+16, r23	; 0x10
    2632:	29 85       	ldd	r18, Y+9	; 0x09
    2634:	3a 85       	ldd	r19, Y+10	; 0x0a
    2636:	4b 85       	ldd	r20, Y+11	; 0x0b
    2638:	5c 85       	ldd	r21, Y+12	; 0x0c
    263a:	6d 85       	ldd	r22, Y+13	; 0x0d
    263c:	7e 85       	ldd	r23, Y+14	; 0x0e
    263e:	af 85       	ldd	r26, Y+15	; 0x0f
    2640:	98 89       	ldd	r25, Y+16	; 0x10
    2642:	8a 2f       	mov	r24, r26
    2644:	60 96       	adiw	r28, 0x10	; 16
    2646:	0f b6       	in	r0, 0x3f	; 63
    2648:	f8 94       	cli
    264a:	de bf       	out	0x3e, r29	; 62
    264c:	0f be       	out	0x3f, r0	; 63
    264e:	cd bf       	out	0x3d, r28	; 61
    2650:	cf 91       	pop	r28
    2652:	df 91       	pop	r29
    2654:	0f 91       	pop	r16
    2656:	ff 90       	pop	r15
    2658:	ef 90       	pop	r14
    265a:	08 95       	ret

0000265c <__clzsi2>:
    265c:	ef 92       	push	r14
    265e:	ff 92       	push	r15
    2660:	0f 93       	push	r16
    2662:	1f 93       	push	r17
    2664:	7b 01       	movw	r14, r22
    2666:	8c 01       	movw	r16, r24
    2668:	80 e0       	ldi	r24, 0x00	; 0
    266a:	e8 16       	cp	r14, r24
    266c:	80 e0       	ldi	r24, 0x00	; 0
    266e:	f8 06       	cpc	r15, r24
    2670:	81 e0       	ldi	r24, 0x01	; 1
    2672:	08 07       	cpc	r16, r24
    2674:	80 e0       	ldi	r24, 0x00	; 0
    2676:	18 07       	cpc	r17, r24
    2678:	88 f4       	brcc	.+34     	; 0x269c <__clzsi2+0x40>
    267a:	8f ef       	ldi	r24, 0xFF	; 255
    267c:	e8 16       	cp	r14, r24
    267e:	f1 04       	cpc	r15, r1
    2680:	01 05       	cpc	r16, r1
    2682:	11 05       	cpc	r17, r1
    2684:	31 f0       	breq	.+12     	; 0x2692 <__clzsi2+0x36>
    2686:	28 f0       	brcs	.+10     	; 0x2692 <__clzsi2+0x36>
    2688:	88 e0       	ldi	r24, 0x08	; 8
    268a:	90 e0       	ldi	r25, 0x00	; 0
    268c:	a0 e0       	ldi	r26, 0x00	; 0
    268e:	b0 e0       	ldi	r27, 0x00	; 0
    2690:	17 c0       	rjmp	.+46     	; 0x26c0 <__clzsi2+0x64>
    2692:	80 e0       	ldi	r24, 0x00	; 0
    2694:	90 e0       	ldi	r25, 0x00	; 0
    2696:	a0 e0       	ldi	r26, 0x00	; 0
    2698:	b0 e0       	ldi	r27, 0x00	; 0
    269a:	12 c0       	rjmp	.+36     	; 0x26c0 <__clzsi2+0x64>
    269c:	80 e0       	ldi	r24, 0x00	; 0
    269e:	e8 16       	cp	r14, r24
    26a0:	80 e0       	ldi	r24, 0x00	; 0
    26a2:	f8 06       	cpc	r15, r24
    26a4:	80 e0       	ldi	r24, 0x00	; 0
    26a6:	08 07       	cpc	r16, r24
    26a8:	81 e0       	ldi	r24, 0x01	; 1
    26aa:	18 07       	cpc	r17, r24
    26ac:	28 f0       	brcs	.+10     	; 0x26b8 <__clzsi2+0x5c>
    26ae:	88 e1       	ldi	r24, 0x18	; 24
    26b0:	90 e0       	ldi	r25, 0x00	; 0
    26b2:	a0 e0       	ldi	r26, 0x00	; 0
    26b4:	b0 e0       	ldi	r27, 0x00	; 0
    26b6:	04 c0       	rjmp	.+8      	; 0x26c0 <__clzsi2+0x64>
    26b8:	80 e1       	ldi	r24, 0x10	; 16
    26ba:	90 e0       	ldi	r25, 0x00	; 0
    26bc:	a0 e0       	ldi	r26, 0x00	; 0
    26be:	b0 e0       	ldi	r27, 0x00	; 0
    26c0:	20 e2       	ldi	r18, 0x20	; 32
    26c2:	30 e0       	ldi	r19, 0x00	; 0
    26c4:	40 e0       	ldi	r20, 0x00	; 0
    26c6:	50 e0       	ldi	r21, 0x00	; 0
    26c8:	28 1b       	sub	r18, r24
    26ca:	39 0b       	sbc	r19, r25
    26cc:	4a 0b       	sbc	r20, r26
    26ce:	5b 0b       	sbc	r21, r27
    26d0:	04 c0       	rjmp	.+8      	; 0x26da <__clzsi2+0x7e>
    26d2:	16 95       	lsr	r17
    26d4:	07 95       	ror	r16
    26d6:	f7 94       	ror	r15
    26d8:	e7 94       	ror	r14
    26da:	8a 95       	dec	r24
    26dc:	d2 f7       	brpl	.-12     	; 0x26d2 <__clzsi2+0x76>
    26de:	f7 01       	movw	r30, r14
    26e0:	e8 59       	subi	r30, 0x98	; 152
    26e2:	ff 4f       	sbci	r31, 0xFF	; 255
    26e4:	80 81       	ld	r24, Z
    26e6:	28 1b       	sub	r18, r24
    26e8:	31 09       	sbc	r19, r1
    26ea:	41 09       	sbc	r20, r1
    26ec:	51 09       	sbc	r21, r1
    26ee:	c9 01       	movw	r24, r18
    26f0:	1f 91       	pop	r17
    26f2:	0f 91       	pop	r16
    26f4:	ff 90       	pop	r15
    26f6:	ef 90       	pop	r14
    26f8:	08 95       	ret

000026fa <__pack_f>:
    26fa:	df 92       	push	r13
    26fc:	ef 92       	push	r14
    26fe:	ff 92       	push	r15
    2700:	0f 93       	push	r16
    2702:	1f 93       	push	r17
    2704:	fc 01       	movw	r30, r24
    2706:	e4 80       	ldd	r14, Z+4	; 0x04
    2708:	f5 80       	ldd	r15, Z+5	; 0x05
    270a:	06 81       	ldd	r16, Z+6	; 0x06
    270c:	17 81       	ldd	r17, Z+7	; 0x07
    270e:	d1 80       	ldd	r13, Z+1	; 0x01
    2710:	80 81       	ld	r24, Z
    2712:	82 30       	cpi	r24, 0x02	; 2
    2714:	48 f4       	brcc	.+18     	; 0x2728 <__pack_f+0x2e>
    2716:	80 e0       	ldi	r24, 0x00	; 0
    2718:	90 e0       	ldi	r25, 0x00	; 0
    271a:	a0 e1       	ldi	r26, 0x10	; 16
    271c:	b0 e0       	ldi	r27, 0x00	; 0
    271e:	e8 2a       	or	r14, r24
    2720:	f9 2a       	or	r15, r25
    2722:	0a 2b       	or	r16, r26
    2724:	1b 2b       	or	r17, r27
    2726:	a5 c0       	rjmp	.+330    	; 0x2872 <__pack_f+0x178>
    2728:	84 30       	cpi	r24, 0x04	; 4
    272a:	09 f4       	brne	.+2      	; 0x272e <__pack_f+0x34>
    272c:	9f c0       	rjmp	.+318    	; 0x286c <__pack_f+0x172>
    272e:	82 30       	cpi	r24, 0x02	; 2
    2730:	21 f4       	brne	.+8      	; 0x273a <__pack_f+0x40>
    2732:	ee 24       	eor	r14, r14
    2734:	ff 24       	eor	r15, r15
    2736:	87 01       	movw	r16, r14
    2738:	05 c0       	rjmp	.+10     	; 0x2744 <__pack_f+0x4a>
    273a:	e1 14       	cp	r14, r1
    273c:	f1 04       	cpc	r15, r1
    273e:	01 05       	cpc	r16, r1
    2740:	11 05       	cpc	r17, r1
    2742:	19 f4       	brne	.+6      	; 0x274a <__pack_f+0x50>
    2744:	e0 e0       	ldi	r30, 0x00	; 0
    2746:	f0 e0       	ldi	r31, 0x00	; 0
    2748:	96 c0       	rjmp	.+300    	; 0x2876 <__pack_f+0x17c>
    274a:	62 81       	ldd	r22, Z+2	; 0x02
    274c:	73 81       	ldd	r23, Z+3	; 0x03
    274e:	9f ef       	ldi	r25, 0xFF	; 255
    2750:	62 38       	cpi	r22, 0x82	; 130
    2752:	79 07       	cpc	r23, r25
    2754:	0c f0       	brlt	.+2      	; 0x2758 <__pack_f+0x5e>
    2756:	5b c0       	rjmp	.+182    	; 0x280e <__pack_f+0x114>
    2758:	22 e8       	ldi	r18, 0x82	; 130
    275a:	3f ef       	ldi	r19, 0xFF	; 255
    275c:	26 1b       	sub	r18, r22
    275e:	37 0b       	sbc	r19, r23
    2760:	2a 31       	cpi	r18, 0x1A	; 26
    2762:	31 05       	cpc	r19, r1
    2764:	2c f0       	brlt	.+10     	; 0x2770 <__pack_f+0x76>
    2766:	20 e0       	ldi	r18, 0x00	; 0
    2768:	30 e0       	ldi	r19, 0x00	; 0
    276a:	40 e0       	ldi	r20, 0x00	; 0
    276c:	50 e0       	ldi	r21, 0x00	; 0
    276e:	2a c0       	rjmp	.+84     	; 0x27c4 <__pack_f+0xca>
    2770:	b8 01       	movw	r22, r16
    2772:	a7 01       	movw	r20, r14
    2774:	02 2e       	mov	r0, r18
    2776:	04 c0       	rjmp	.+8      	; 0x2780 <__pack_f+0x86>
    2778:	76 95       	lsr	r23
    277a:	67 95       	ror	r22
    277c:	57 95       	ror	r21
    277e:	47 95       	ror	r20
    2780:	0a 94       	dec	r0
    2782:	d2 f7       	brpl	.-12     	; 0x2778 <__pack_f+0x7e>
    2784:	81 e0       	ldi	r24, 0x01	; 1
    2786:	90 e0       	ldi	r25, 0x00	; 0
    2788:	a0 e0       	ldi	r26, 0x00	; 0
    278a:	b0 e0       	ldi	r27, 0x00	; 0
    278c:	04 c0       	rjmp	.+8      	; 0x2796 <__pack_f+0x9c>
    278e:	88 0f       	add	r24, r24
    2790:	99 1f       	adc	r25, r25
    2792:	aa 1f       	adc	r26, r26
    2794:	bb 1f       	adc	r27, r27
    2796:	2a 95       	dec	r18
    2798:	d2 f7       	brpl	.-12     	; 0x278e <__pack_f+0x94>
    279a:	01 97       	sbiw	r24, 0x01	; 1
    279c:	a1 09       	sbc	r26, r1
    279e:	b1 09       	sbc	r27, r1
    27a0:	8e 21       	and	r24, r14
    27a2:	9f 21       	and	r25, r15
    27a4:	a0 23       	and	r26, r16
    27a6:	b1 23       	and	r27, r17
    27a8:	00 97       	sbiw	r24, 0x00	; 0
    27aa:	a1 05       	cpc	r26, r1
    27ac:	b1 05       	cpc	r27, r1
    27ae:	21 f0       	breq	.+8      	; 0x27b8 <__pack_f+0xbe>
    27b0:	81 e0       	ldi	r24, 0x01	; 1
    27b2:	90 e0       	ldi	r25, 0x00	; 0
    27b4:	a0 e0       	ldi	r26, 0x00	; 0
    27b6:	b0 e0       	ldi	r27, 0x00	; 0
    27b8:	9a 01       	movw	r18, r20
    27ba:	ab 01       	movw	r20, r22
    27bc:	28 2b       	or	r18, r24
    27be:	39 2b       	or	r19, r25
    27c0:	4a 2b       	or	r20, r26
    27c2:	5b 2b       	or	r21, r27
    27c4:	da 01       	movw	r26, r20
    27c6:	c9 01       	movw	r24, r18
    27c8:	8f 77       	andi	r24, 0x7F	; 127
    27ca:	90 70       	andi	r25, 0x00	; 0
    27cc:	a0 70       	andi	r26, 0x00	; 0
    27ce:	b0 70       	andi	r27, 0x00	; 0
    27d0:	80 34       	cpi	r24, 0x40	; 64
    27d2:	91 05       	cpc	r25, r1
    27d4:	a1 05       	cpc	r26, r1
    27d6:	b1 05       	cpc	r27, r1
    27d8:	39 f4       	brne	.+14     	; 0x27e8 <__pack_f+0xee>
    27da:	27 ff       	sbrs	r18, 7
    27dc:	09 c0       	rjmp	.+18     	; 0x27f0 <__pack_f+0xf6>
    27de:	20 5c       	subi	r18, 0xC0	; 192
    27e0:	3f 4f       	sbci	r19, 0xFF	; 255
    27e2:	4f 4f       	sbci	r20, 0xFF	; 255
    27e4:	5f 4f       	sbci	r21, 0xFF	; 255
    27e6:	04 c0       	rjmp	.+8      	; 0x27f0 <__pack_f+0xf6>
    27e8:	21 5c       	subi	r18, 0xC1	; 193
    27ea:	3f 4f       	sbci	r19, 0xFF	; 255
    27ec:	4f 4f       	sbci	r20, 0xFF	; 255
    27ee:	5f 4f       	sbci	r21, 0xFF	; 255
    27f0:	e0 e0       	ldi	r30, 0x00	; 0
    27f2:	f0 e0       	ldi	r31, 0x00	; 0
    27f4:	20 30       	cpi	r18, 0x00	; 0
    27f6:	a0 e0       	ldi	r26, 0x00	; 0
    27f8:	3a 07       	cpc	r19, r26
    27fa:	a0 e0       	ldi	r26, 0x00	; 0
    27fc:	4a 07       	cpc	r20, r26
    27fe:	a0 e4       	ldi	r26, 0x40	; 64
    2800:	5a 07       	cpc	r21, r26
    2802:	10 f0       	brcs	.+4      	; 0x2808 <__pack_f+0x10e>
    2804:	e1 e0       	ldi	r30, 0x01	; 1
    2806:	f0 e0       	ldi	r31, 0x00	; 0
    2808:	79 01       	movw	r14, r18
    280a:	8a 01       	movw	r16, r20
    280c:	27 c0       	rjmp	.+78     	; 0x285c <__pack_f+0x162>
    280e:	60 38       	cpi	r22, 0x80	; 128
    2810:	71 05       	cpc	r23, r1
    2812:	64 f5       	brge	.+88     	; 0x286c <__pack_f+0x172>
    2814:	fb 01       	movw	r30, r22
    2816:	e1 58       	subi	r30, 0x81	; 129
    2818:	ff 4f       	sbci	r31, 0xFF	; 255
    281a:	d8 01       	movw	r26, r16
    281c:	c7 01       	movw	r24, r14
    281e:	8f 77       	andi	r24, 0x7F	; 127
    2820:	90 70       	andi	r25, 0x00	; 0
    2822:	a0 70       	andi	r26, 0x00	; 0
    2824:	b0 70       	andi	r27, 0x00	; 0
    2826:	80 34       	cpi	r24, 0x40	; 64
    2828:	91 05       	cpc	r25, r1
    282a:	a1 05       	cpc	r26, r1
    282c:	b1 05       	cpc	r27, r1
    282e:	39 f4       	brne	.+14     	; 0x283e <__pack_f+0x144>
    2830:	e7 fe       	sbrs	r14, 7
    2832:	0d c0       	rjmp	.+26     	; 0x284e <__pack_f+0x154>
    2834:	80 e4       	ldi	r24, 0x40	; 64
    2836:	90 e0       	ldi	r25, 0x00	; 0
    2838:	a0 e0       	ldi	r26, 0x00	; 0
    283a:	b0 e0       	ldi	r27, 0x00	; 0
    283c:	04 c0       	rjmp	.+8      	; 0x2846 <__pack_f+0x14c>
    283e:	8f e3       	ldi	r24, 0x3F	; 63
    2840:	90 e0       	ldi	r25, 0x00	; 0
    2842:	a0 e0       	ldi	r26, 0x00	; 0
    2844:	b0 e0       	ldi	r27, 0x00	; 0
    2846:	e8 0e       	add	r14, r24
    2848:	f9 1e       	adc	r15, r25
    284a:	0a 1f       	adc	r16, r26
    284c:	1b 1f       	adc	r17, r27
    284e:	17 ff       	sbrs	r17, 7
    2850:	05 c0       	rjmp	.+10     	; 0x285c <__pack_f+0x162>
    2852:	16 95       	lsr	r17
    2854:	07 95       	ror	r16
    2856:	f7 94       	ror	r15
    2858:	e7 94       	ror	r14
    285a:	31 96       	adiw	r30, 0x01	; 1
    285c:	87 e0       	ldi	r24, 0x07	; 7
    285e:	16 95       	lsr	r17
    2860:	07 95       	ror	r16
    2862:	f7 94       	ror	r15
    2864:	e7 94       	ror	r14
    2866:	8a 95       	dec	r24
    2868:	d1 f7       	brne	.-12     	; 0x285e <__pack_f+0x164>
    286a:	05 c0       	rjmp	.+10     	; 0x2876 <__pack_f+0x17c>
    286c:	ee 24       	eor	r14, r14
    286e:	ff 24       	eor	r15, r15
    2870:	87 01       	movw	r16, r14
    2872:	ef ef       	ldi	r30, 0xFF	; 255
    2874:	f0 e0       	ldi	r31, 0x00	; 0
    2876:	6e 2f       	mov	r22, r30
    2878:	67 95       	ror	r22
    287a:	66 27       	eor	r22, r22
    287c:	67 95       	ror	r22
    287e:	90 2f       	mov	r25, r16
    2880:	9f 77       	andi	r25, 0x7F	; 127
    2882:	d7 94       	ror	r13
    2884:	dd 24       	eor	r13, r13
    2886:	d7 94       	ror	r13
    2888:	8e 2f       	mov	r24, r30
    288a:	86 95       	lsr	r24
    288c:	49 2f       	mov	r20, r25
    288e:	46 2b       	or	r20, r22
    2890:	58 2f       	mov	r21, r24
    2892:	5d 29       	or	r21, r13
    2894:	b7 01       	movw	r22, r14
    2896:	ca 01       	movw	r24, r20
    2898:	1f 91       	pop	r17
    289a:	0f 91       	pop	r16
    289c:	ff 90       	pop	r15
    289e:	ef 90       	pop	r14
    28a0:	df 90       	pop	r13
    28a2:	08 95       	ret

000028a4 <__unpack_f>:
    28a4:	fc 01       	movw	r30, r24
    28a6:	db 01       	movw	r26, r22
    28a8:	40 81       	ld	r20, Z
    28aa:	51 81       	ldd	r21, Z+1	; 0x01
    28ac:	22 81       	ldd	r18, Z+2	; 0x02
    28ae:	62 2f       	mov	r22, r18
    28b0:	6f 77       	andi	r22, 0x7F	; 127
    28b2:	70 e0       	ldi	r23, 0x00	; 0
    28b4:	22 1f       	adc	r18, r18
    28b6:	22 27       	eor	r18, r18
    28b8:	22 1f       	adc	r18, r18
    28ba:	93 81       	ldd	r25, Z+3	; 0x03
    28bc:	89 2f       	mov	r24, r25
    28be:	88 0f       	add	r24, r24
    28c0:	82 2b       	or	r24, r18
    28c2:	28 2f       	mov	r18, r24
    28c4:	30 e0       	ldi	r19, 0x00	; 0
    28c6:	99 1f       	adc	r25, r25
    28c8:	99 27       	eor	r25, r25
    28ca:	99 1f       	adc	r25, r25
    28cc:	11 96       	adiw	r26, 0x01	; 1
    28ce:	9c 93       	st	X, r25
    28d0:	11 97       	sbiw	r26, 0x01	; 1
    28d2:	21 15       	cp	r18, r1
    28d4:	31 05       	cpc	r19, r1
    28d6:	a9 f5       	brne	.+106    	; 0x2942 <__unpack_f+0x9e>
    28d8:	41 15       	cp	r20, r1
    28da:	51 05       	cpc	r21, r1
    28dc:	61 05       	cpc	r22, r1
    28de:	71 05       	cpc	r23, r1
    28e0:	11 f4       	brne	.+4      	; 0x28e6 <__unpack_f+0x42>
    28e2:	82 e0       	ldi	r24, 0x02	; 2
    28e4:	37 c0       	rjmp	.+110    	; 0x2954 <__unpack_f+0xb0>
    28e6:	82 e8       	ldi	r24, 0x82	; 130
    28e8:	9f ef       	ldi	r25, 0xFF	; 255
    28ea:	13 96       	adiw	r26, 0x03	; 3
    28ec:	9c 93       	st	X, r25
    28ee:	8e 93       	st	-X, r24
    28f0:	12 97       	sbiw	r26, 0x02	; 2
    28f2:	9a 01       	movw	r18, r20
    28f4:	ab 01       	movw	r20, r22
    28f6:	67 e0       	ldi	r22, 0x07	; 7
    28f8:	22 0f       	add	r18, r18
    28fa:	33 1f       	adc	r19, r19
    28fc:	44 1f       	adc	r20, r20
    28fe:	55 1f       	adc	r21, r21
    2900:	6a 95       	dec	r22
    2902:	d1 f7       	brne	.-12     	; 0x28f8 <__unpack_f+0x54>
    2904:	83 e0       	ldi	r24, 0x03	; 3
    2906:	8c 93       	st	X, r24
    2908:	0d c0       	rjmp	.+26     	; 0x2924 <__unpack_f+0x80>
    290a:	22 0f       	add	r18, r18
    290c:	33 1f       	adc	r19, r19
    290e:	44 1f       	adc	r20, r20
    2910:	55 1f       	adc	r21, r21
    2912:	12 96       	adiw	r26, 0x02	; 2
    2914:	8d 91       	ld	r24, X+
    2916:	9c 91       	ld	r25, X
    2918:	13 97       	sbiw	r26, 0x03	; 3
    291a:	01 97       	sbiw	r24, 0x01	; 1
    291c:	13 96       	adiw	r26, 0x03	; 3
    291e:	9c 93       	st	X, r25
    2920:	8e 93       	st	-X, r24
    2922:	12 97       	sbiw	r26, 0x02	; 2
    2924:	20 30       	cpi	r18, 0x00	; 0
    2926:	80 e0       	ldi	r24, 0x00	; 0
    2928:	38 07       	cpc	r19, r24
    292a:	80 e0       	ldi	r24, 0x00	; 0
    292c:	48 07       	cpc	r20, r24
    292e:	80 e4       	ldi	r24, 0x40	; 64
    2930:	58 07       	cpc	r21, r24
    2932:	58 f3       	brcs	.-42     	; 0x290a <__unpack_f+0x66>
    2934:	14 96       	adiw	r26, 0x04	; 4
    2936:	2d 93       	st	X+, r18
    2938:	3d 93       	st	X+, r19
    293a:	4d 93       	st	X+, r20
    293c:	5c 93       	st	X, r21
    293e:	17 97       	sbiw	r26, 0x07	; 7
    2940:	08 95       	ret
    2942:	2f 3f       	cpi	r18, 0xFF	; 255
    2944:	31 05       	cpc	r19, r1
    2946:	79 f4       	brne	.+30     	; 0x2966 <__unpack_f+0xc2>
    2948:	41 15       	cp	r20, r1
    294a:	51 05       	cpc	r21, r1
    294c:	61 05       	cpc	r22, r1
    294e:	71 05       	cpc	r23, r1
    2950:	19 f4       	brne	.+6      	; 0x2958 <__unpack_f+0xb4>
    2952:	84 e0       	ldi	r24, 0x04	; 4
    2954:	8c 93       	st	X, r24
    2956:	08 95       	ret
    2958:	64 ff       	sbrs	r22, 4
    295a:	03 c0       	rjmp	.+6      	; 0x2962 <__unpack_f+0xbe>
    295c:	81 e0       	ldi	r24, 0x01	; 1
    295e:	8c 93       	st	X, r24
    2960:	12 c0       	rjmp	.+36     	; 0x2986 <__unpack_f+0xe2>
    2962:	1c 92       	st	X, r1
    2964:	10 c0       	rjmp	.+32     	; 0x2986 <__unpack_f+0xe2>
    2966:	2f 57       	subi	r18, 0x7F	; 127
    2968:	30 40       	sbci	r19, 0x00	; 0
    296a:	13 96       	adiw	r26, 0x03	; 3
    296c:	3c 93       	st	X, r19
    296e:	2e 93       	st	-X, r18
    2970:	12 97       	sbiw	r26, 0x02	; 2
    2972:	83 e0       	ldi	r24, 0x03	; 3
    2974:	8c 93       	st	X, r24
    2976:	87 e0       	ldi	r24, 0x07	; 7
    2978:	44 0f       	add	r20, r20
    297a:	55 1f       	adc	r21, r21
    297c:	66 1f       	adc	r22, r22
    297e:	77 1f       	adc	r23, r23
    2980:	8a 95       	dec	r24
    2982:	d1 f7       	brne	.-12     	; 0x2978 <__unpack_f+0xd4>
    2984:	70 64       	ori	r23, 0x40	; 64
    2986:	14 96       	adiw	r26, 0x04	; 4
    2988:	4d 93       	st	X+, r20
    298a:	5d 93       	st	X+, r21
    298c:	6d 93       	st	X+, r22
    298e:	7c 93       	st	X, r23
    2990:	17 97       	sbiw	r26, 0x07	; 7
    2992:	08 95       	ret

00002994 <__fpcmp_parts_f>:
    2994:	1f 93       	push	r17
    2996:	dc 01       	movw	r26, r24
    2998:	fb 01       	movw	r30, r22
    299a:	9c 91       	ld	r25, X
    299c:	92 30       	cpi	r25, 0x02	; 2
    299e:	08 f4       	brcc	.+2      	; 0x29a2 <__fpcmp_parts_f+0xe>
    29a0:	47 c0       	rjmp	.+142    	; 0x2a30 <__fpcmp_parts_f+0x9c>
    29a2:	80 81       	ld	r24, Z
    29a4:	82 30       	cpi	r24, 0x02	; 2
    29a6:	08 f4       	brcc	.+2      	; 0x29aa <__fpcmp_parts_f+0x16>
    29a8:	43 c0       	rjmp	.+134    	; 0x2a30 <__fpcmp_parts_f+0x9c>
    29aa:	94 30       	cpi	r25, 0x04	; 4
    29ac:	51 f4       	brne	.+20     	; 0x29c2 <__fpcmp_parts_f+0x2e>
    29ae:	11 96       	adiw	r26, 0x01	; 1
    29b0:	1c 91       	ld	r17, X
    29b2:	84 30       	cpi	r24, 0x04	; 4
    29b4:	99 f5       	brne	.+102    	; 0x2a1c <__fpcmp_parts_f+0x88>
    29b6:	81 81       	ldd	r24, Z+1	; 0x01
    29b8:	68 2f       	mov	r22, r24
    29ba:	70 e0       	ldi	r23, 0x00	; 0
    29bc:	61 1b       	sub	r22, r17
    29be:	71 09       	sbc	r23, r1
    29c0:	3f c0       	rjmp	.+126    	; 0x2a40 <__fpcmp_parts_f+0xac>
    29c2:	84 30       	cpi	r24, 0x04	; 4
    29c4:	21 f0       	breq	.+8      	; 0x29ce <__fpcmp_parts_f+0x3a>
    29c6:	92 30       	cpi	r25, 0x02	; 2
    29c8:	31 f4       	brne	.+12     	; 0x29d6 <__fpcmp_parts_f+0x42>
    29ca:	82 30       	cpi	r24, 0x02	; 2
    29cc:	b9 f1       	breq	.+110    	; 0x2a3c <__fpcmp_parts_f+0xa8>
    29ce:	81 81       	ldd	r24, Z+1	; 0x01
    29d0:	88 23       	and	r24, r24
    29d2:	89 f1       	breq	.+98     	; 0x2a36 <__fpcmp_parts_f+0xa2>
    29d4:	2d c0       	rjmp	.+90     	; 0x2a30 <__fpcmp_parts_f+0x9c>
    29d6:	11 96       	adiw	r26, 0x01	; 1
    29d8:	1c 91       	ld	r17, X
    29da:	11 97       	sbiw	r26, 0x01	; 1
    29dc:	82 30       	cpi	r24, 0x02	; 2
    29de:	f1 f0       	breq	.+60     	; 0x2a1c <__fpcmp_parts_f+0x88>
    29e0:	81 81       	ldd	r24, Z+1	; 0x01
    29e2:	18 17       	cp	r17, r24
    29e4:	d9 f4       	brne	.+54     	; 0x2a1c <__fpcmp_parts_f+0x88>
    29e6:	12 96       	adiw	r26, 0x02	; 2
    29e8:	2d 91       	ld	r18, X+
    29ea:	3c 91       	ld	r19, X
    29ec:	13 97       	sbiw	r26, 0x03	; 3
    29ee:	82 81       	ldd	r24, Z+2	; 0x02
    29f0:	93 81       	ldd	r25, Z+3	; 0x03
    29f2:	82 17       	cp	r24, r18
    29f4:	93 07       	cpc	r25, r19
    29f6:	94 f0       	brlt	.+36     	; 0x2a1c <__fpcmp_parts_f+0x88>
    29f8:	28 17       	cp	r18, r24
    29fa:	39 07       	cpc	r19, r25
    29fc:	bc f0       	brlt	.+46     	; 0x2a2c <__fpcmp_parts_f+0x98>
    29fe:	14 96       	adiw	r26, 0x04	; 4
    2a00:	8d 91       	ld	r24, X+
    2a02:	9d 91       	ld	r25, X+
    2a04:	0d 90       	ld	r0, X+
    2a06:	bc 91       	ld	r27, X
    2a08:	a0 2d       	mov	r26, r0
    2a0a:	24 81       	ldd	r18, Z+4	; 0x04
    2a0c:	35 81       	ldd	r19, Z+5	; 0x05
    2a0e:	46 81       	ldd	r20, Z+6	; 0x06
    2a10:	57 81       	ldd	r21, Z+7	; 0x07
    2a12:	28 17       	cp	r18, r24
    2a14:	39 07       	cpc	r19, r25
    2a16:	4a 07       	cpc	r20, r26
    2a18:	5b 07       	cpc	r21, r27
    2a1a:	18 f4       	brcc	.+6      	; 0x2a22 <__fpcmp_parts_f+0x8e>
    2a1c:	11 23       	and	r17, r17
    2a1e:	41 f0       	breq	.+16     	; 0x2a30 <__fpcmp_parts_f+0x9c>
    2a20:	0a c0       	rjmp	.+20     	; 0x2a36 <__fpcmp_parts_f+0xa2>
    2a22:	82 17       	cp	r24, r18
    2a24:	93 07       	cpc	r25, r19
    2a26:	a4 07       	cpc	r26, r20
    2a28:	b5 07       	cpc	r27, r21
    2a2a:	40 f4       	brcc	.+16     	; 0x2a3c <__fpcmp_parts_f+0xa8>
    2a2c:	11 23       	and	r17, r17
    2a2e:	19 f0       	breq	.+6      	; 0x2a36 <__fpcmp_parts_f+0xa2>
    2a30:	61 e0       	ldi	r22, 0x01	; 1
    2a32:	70 e0       	ldi	r23, 0x00	; 0
    2a34:	05 c0       	rjmp	.+10     	; 0x2a40 <__fpcmp_parts_f+0xac>
    2a36:	6f ef       	ldi	r22, 0xFF	; 255
    2a38:	7f ef       	ldi	r23, 0xFF	; 255
    2a3a:	02 c0       	rjmp	.+4      	; 0x2a40 <__fpcmp_parts_f+0xac>
    2a3c:	60 e0       	ldi	r22, 0x00	; 0
    2a3e:	70 e0       	ldi	r23, 0x00	; 0
    2a40:	cb 01       	movw	r24, r22
    2a42:	1f 91       	pop	r17
    2a44:	08 95       	ret

00002a46 <LCD_Intialization>:
 */
#include "LCD.h"
#include "util/delay.h"

void LCD_Intialization (void)
{
    2a46:	0f 93       	push	r16
    2a48:	1f 93       	push	r17
    2a4a:	df 93       	push	r29
    2a4c:	cf 93       	push	r28
    2a4e:	cd b7       	in	r28, 0x3d	; 61
    2a50:	de b7       	in	r29, 0x3e	; 62
    2a52:	c2 56       	subi	r28, 0x62	; 98
    2a54:	d0 40       	sbci	r29, 0x00	; 0
    2a56:	0f b6       	in	r0, 0x3f	; 63
    2a58:	f8 94       	cli
    2a5a:	de bf       	out	0x3e, r29	; 62
    2a5c:	0f be       	out	0x3f, r0	; 63
    2a5e:	cd bf       	out	0x3d, r28	; 61
	DIO_SetPinDirection(E_LCD,output);
    2a60:	83 e0       	ldi	r24, 0x03	; 3
    2a62:	61 e0       	ldi	r22, 0x01	; 1
    2a64:	0e 94 7f 25 	call	0x4afe	; 0x4afe <DIO_SetPinDirection>
	DIO_SetPinDirection(RS_LCD,output);
    2a68:	81 e0       	ldi	r24, 0x01	; 1
    2a6a:	61 e0       	ldi	r22, 0x01	; 1
    2a6c:	0e 94 7f 25 	call	0x4afe	; 0x4afe <DIO_SetPinDirection>
	DIO_SetPinDirection(RW_LCD,output);
    2a70:	82 e0       	ldi	r24, 0x02	; 2
    2a72:	61 e0       	ldi	r22, 0x01	; 1
    2a74:	0e 94 7f 25 	call	0x4afe	; 0x4afe <DIO_SetPinDirection>
	DIO_SetPinDirection(LCD_D4,output);
    2a78:	84 e0       	ldi	r24, 0x04	; 4
    2a7a:	61 e0       	ldi	r22, 0x01	; 1
    2a7c:	0e 94 7f 25 	call	0x4afe	; 0x4afe <DIO_SetPinDirection>
	DIO_SetPinDirection(LCD_D5,output);
    2a80:	85 e0       	ldi	r24, 0x05	; 5
    2a82:	61 e0       	ldi	r22, 0x01	; 1
    2a84:	0e 94 7f 25 	call	0x4afe	; 0x4afe <DIO_SetPinDirection>
	DIO_SetPinDirection(LCD_D6,output);
    2a88:	86 e0       	ldi	r24, 0x06	; 6
    2a8a:	61 e0       	ldi	r22, 0x01	; 1
    2a8c:	0e 94 7f 25 	call	0x4afe	; 0x4afe <DIO_SetPinDirection>
	DIO_SetPinDirection(LCD_D7,output);
    2a90:	87 e0       	ldi	r24, 0x07	; 7
    2a92:	61 e0       	ldi	r22, 0x01	; 1
    2a94:	0e 94 7f 25 	call	0x4afe	; 0x4afe <DIO_SetPinDirection>
    2a98:	fe 01       	movw	r30, r28
    2a9a:	e1 5a       	subi	r30, 0xA1	; 161
    2a9c:	ff 4f       	sbci	r31, 0xFF	; 255
    2a9e:	80 e0       	ldi	r24, 0x00	; 0
    2aa0:	90 e0       	ldi	r25, 0x00	; 0
    2aa2:	ac e0       	ldi	r26, 0x0C	; 12
    2aa4:	b2 e4       	ldi	r27, 0x42	; 66
    2aa6:	80 83       	st	Z, r24
    2aa8:	91 83       	std	Z+1, r25	; 0x01
    2aaa:	a2 83       	std	Z+2, r26	; 0x02
    2aac:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2aae:	8e 01       	movw	r16, r28
    2ab0:	05 5a       	subi	r16, 0xA5	; 165
    2ab2:	1f 4f       	sbci	r17, 0xFF	; 255
    2ab4:	fe 01       	movw	r30, r28
    2ab6:	e1 5a       	subi	r30, 0xA1	; 161
    2ab8:	ff 4f       	sbci	r31, 0xFF	; 255
    2aba:	60 81       	ld	r22, Z
    2abc:	71 81       	ldd	r23, Z+1	; 0x01
    2abe:	82 81       	ldd	r24, Z+2	; 0x02
    2ac0:	93 81       	ldd	r25, Z+3	; 0x03
    2ac2:	20 e0       	ldi	r18, 0x00	; 0
    2ac4:	30 e0       	ldi	r19, 0x00	; 0
    2ac6:	4a ef       	ldi	r20, 0xFA	; 250
    2ac8:	54 e4       	ldi	r21, 0x44	; 68
    2aca:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    2ace:	dc 01       	movw	r26, r24
    2ad0:	cb 01       	movw	r24, r22
    2ad2:	f8 01       	movw	r30, r16
    2ad4:	80 83       	st	Z, r24
    2ad6:	91 83       	std	Z+1, r25	; 0x01
    2ad8:	a2 83       	std	Z+2, r26	; 0x02
    2ada:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2adc:	fe 01       	movw	r30, r28
    2ade:	e5 5a       	subi	r30, 0xA5	; 165
    2ae0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ae2:	60 81       	ld	r22, Z
    2ae4:	71 81       	ldd	r23, Z+1	; 0x01
    2ae6:	82 81       	ldd	r24, Z+2	; 0x02
    2ae8:	93 81       	ldd	r25, Z+3	; 0x03
    2aea:	20 e0       	ldi	r18, 0x00	; 0
    2aec:	30 e0       	ldi	r19, 0x00	; 0
    2aee:	40 e8       	ldi	r20, 0x80	; 128
    2af0:	5f e3       	ldi	r21, 0x3F	; 63
    2af2:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
    2af6:	88 23       	and	r24, r24
    2af8:	44 f4       	brge	.+16     	; 0x2b0a <LCD_Intialization+0xc4>
		__ticks = 1;
    2afa:	fe 01       	movw	r30, r28
    2afc:	e7 5a       	subi	r30, 0xA7	; 167
    2afe:	ff 4f       	sbci	r31, 0xFF	; 255
    2b00:	81 e0       	ldi	r24, 0x01	; 1
    2b02:	90 e0       	ldi	r25, 0x00	; 0
    2b04:	91 83       	std	Z+1, r25	; 0x01
    2b06:	80 83       	st	Z, r24
    2b08:	64 c0       	rjmp	.+200    	; 0x2bd2 <LCD_Intialization+0x18c>
	else if (__tmp > 65535)
    2b0a:	fe 01       	movw	r30, r28
    2b0c:	e5 5a       	subi	r30, 0xA5	; 165
    2b0e:	ff 4f       	sbci	r31, 0xFF	; 255
    2b10:	60 81       	ld	r22, Z
    2b12:	71 81       	ldd	r23, Z+1	; 0x01
    2b14:	82 81       	ldd	r24, Z+2	; 0x02
    2b16:	93 81       	ldd	r25, Z+3	; 0x03
    2b18:	20 e0       	ldi	r18, 0x00	; 0
    2b1a:	3f ef       	ldi	r19, 0xFF	; 255
    2b1c:	4f e7       	ldi	r20, 0x7F	; 127
    2b1e:	57 e4       	ldi	r21, 0x47	; 71
    2b20:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__gtsf2>
    2b24:	18 16       	cp	r1, r24
    2b26:	0c f0       	brlt	.+2      	; 0x2b2a <LCD_Intialization+0xe4>
    2b28:	43 c0       	rjmp	.+134    	; 0x2bb0 <LCD_Intialization+0x16a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b2a:	fe 01       	movw	r30, r28
    2b2c:	e1 5a       	subi	r30, 0xA1	; 161
    2b2e:	ff 4f       	sbci	r31, 0xFF	; 255
    2b30:	60 81       	ld	r22, Z
    2b32:	71 81       	ldd	r23, Z+1	; 0x01
    2b34:	82 81       	ldd	r24, Z+2	; 0x02
    2b36:	93 81       	ldd	r25, Z+3	; 0x03
    2b38:	20 e0       	ldi	r18, 0x00	; 0
    2b3a:	30 e0       	ldi	r19, 0x00	; 0
    2b3c:	40 e2       	ldi	r20, 0x20	; 32
    2b3e:	51 e4       	ldi	r21, 0x41	; 65
    2b40:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    2b44:	dc 01       	movw	r26, r24
    2b46:	cb 01       	movw	r24, r22
    2b48:	8e 01       	movw	r16, r28
    2b4a:	07 5a       	subi	r16, 0xA7	; 167
    2b4c:	1f 4f       	sbci	r17, 0xFF	; 255
    2b4e:	bc 01       	movw	r22, r24
    2b50:	cd 01       	movw	r24, r26
    2b52:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2b56:	dc 01       	movw	r26, r24
    2b58:	cb 01       	movw	r24, r22
    2b5a:	f8 01       	movw	r30, r16
    2b5c:	91 83       	std	Z+1, r25	; 0x01
    2b5e:	80 83       	st	Z, r24
    2b60:	1f c0       	rjmp	.+62     	; 0x2ba0 <LCD_Intialization+0x15a>
    2b62:	fe 01       	movw	r30, r28
    2b64:	e9 5a       	subi	r30, 0xA9	; 169
    2b66:	ff 4f       	sbci	r31, 0xFF	; 255
    2b68:	88 ec       	ldi	r24, 0xC8	; 200
    2b6a:	90 e0       	ldi	r25, 0x00	; 0
    2b6c:	91 83       	std	Z+1, r25	; 0x01
    2b6e:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2b70:	fe 01       	movw	r30, r28
    2b72:	e9 5a       	subi	r30, 0xA9	; 169
    2b74:	ff 4f       	sbci	r31, 0xFF	; 255
    2b76:	80 81       	ld	r24, Z
    2b78:	91 81       	ldd	r25, Z+1	; 0x01
    2b7a:	01 97       	sbiw	r24, 0x01	; 1
    2b7c:	f1 f7       	brne	.-4      	; 0x2b7a <LCD_Intialization+0x134>
    2b7e:	fe 01       	movw	r30, r28
    2b80:	e9 5a       	subi	r30, 0xA9	; 169
    2b82:	ff 4f       	sbci	r31, 0xFF	; 255
    2b84:	91 83       	std	Z+1, r25	; 0x01
    2b86:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b88:	de 01       	movw	r26, r28
    2b8a:	a7 5a       	subi	r26, 0xA7	; 167
    2b8c:	bf 4f       	sbci	r27, 0xFF	; 255
    2b8e:	fe 01       	movw	r30, r28
    2b90:	e7 5a       	subi	r30, 0xA7	; 167
    2b92:	ff 4f       	sbci	r31, 0xFF	; 255
    2b94:	80 81       	ld	r24, Z
    2b96:	91 81       	ldd	r25, Z+1	; 0x01
    2b98:	01 97       	sbiw	r24, 0x01	; 1
    2b9a:	11 96       	adiw	r26, 0x01	; 1
    2b9c:	9c 93       	st	X, r25
    2b9e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ba0:	fe 01       	movw	r30, r28
    2ba2:	e7 5a       	subi	r30, 0xA7	; 167
    2ba4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ba6:	80 81       	ld	r24, Z
    2ba8:	91 81       	ldd	r25, Z+1	; 0x01
    2baa:	00 97       	sbiw	r24, 0x00	; 0
    2bac:	d1 f6       	brne	.-76     	; 0x2b62 <LCD_Intialization+0x11c>
    2bae:	27 c0       	rjmp	.+78     	; 0x2bfe <LCD_Intialization+0x1b8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2bb0:	8e 01       	movw	r16, r28
    2bb2:	07 5a       	subi	r16, 0xA7	; 167
    2bb4:	1f 4f       	sbci	r17, 0xFF	; 255
    2bb6:	fe 01       	movw	r30, r28
    2bb8:	e5 5a       	subi	r30, 0xA5	; 165
    2bba:	ff 4f       	sbci	r31, 0xFF	; 255
    2bbc:	60 81       	ld	r22, Z
    2bbe:	71 81       	ldd	r23, Z+1	; 0x01
    2bc0:	82 81       	ldd	r24, Z+2	; 0x02
    2bc2:	93 81       	ldd	r25, Z+3	; 0x03
    2bc4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2bc8:	dc 01       	movw	r26, r24
    2bca:	cb 01       	movw	r24, r22
    2bcc:	f8 01       	movw	r30, r16
    2bce:	91 83       	std	Z+1, r25	; 0x01
    2bd0:	80 83       	st	Z, r24
    2bd2:	de 01       	movw	r26, r28
    2bd4:	ab 5a       	subi	r26, 0xAB	; 171
    2bd6:	bf 4f       	sbci	r27, 0xFF	; 255
    2bd8:	fe 01       	movw	r30, r28
    2bda:	e7 5a       	subi	r30, 0xA7	; 167
    2bdc:	ff 4f       	sbci	r31, 0xFF	; 255
    2bde:	80 81       	ld	r24, Z
    2be0:	91 81       	ldd	r25, Z+1	; 0x01
    2be2:	8d 93       	st	X+, r24
    2be4:	9c 93       	st	X, r25
    2be6:	fe 01       	movw	r30, r28
    2be8:	eb 5a       	subi	r30, 0xAB	; 171
    2bea:	ff 4f       	sbci	r31, 0xFF	; 255
    2bec:	80 81       	ld	r24, Z
    2bee:	91 81       	ldd	r25, Z+1	; 0x01
    2bf0:	01 97       	sbiw	r24, 0x01	; 1
    2bf2:	f1 f7       	brne	.-4      	; 0x2bf0 <LCD_Intialization+0x1aa>
    2bf4:	fe 01       	movw	r30, r28
    2bf6:	eb 5a       	subi	r30, 0xAB	; 171
    2bf8:	ff 4f       	sbci	r31, 0xFF	; 255
    2bfa:	91 83       	std	Z+1, r25	; 0x01
    2bfc:	80 83       	st	Z, r24

	_delay_ms(35);

	LCD_Command(lcd_4_bits_initialization_2);
    2bfe:	83 e3       	ldi	r24, 0x33	; 51
    2c00:	0e 94 1d 19 	call	0x323a	; 0x323a <LCD_Command>
    2c04:	fe 01       	movw	r30, r28
    2c06:	ef 5a       	subi	r30, 0xAF	; 175
    2c08:	ff 4f       	sbci	r31, 0xFF	; 255
    2c0a:	80 e0       	ldi	r24, 0x00	; 0
    2c0c:	90 e0       	ldi	r25, 0x00	; 0
    2c0e:	a0 e0       	ldi	r26, 0x00	; 0
    2c10:	b0 e4       	ldi	r27, 0x40	; 64
    2c12:	80 83       	st	Z, r24
    2c14:	91 83       	std	Z+1, r25	; 0x01
    2c16:	a2 83       	std	Z+2, r26	; 0x02
    2c18:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c1a:	8e 01       	movw	r16, r28
    2c1c:	03 5b       	subi	r16, 0xB3	; 179
    2c1e:	1f 4f       	sbci	r17, 0xFF	; 255
    2c20:	fe 01       	movw	r30, r28
    2c22:	ef 5a       	subi	r30, 0xAF	; 175
    2c24:	ff 4f       	sbci	r31, 0xFF	; 255
    2c26:	60 81       	ld	r22, Z
    2c28:	71 81       	ldd	r23, Z+1	; 0x01
    2c2a:	82 81       	ldd	r24, Z+2	; 0x02
    2c2c:	93 81       	ldd	r25, Z+3	; 0x03
    2c2e:	20 e0       	ldi	r18, 0x00	; 0
    2c30:	30 e0       	ldi	r19, 0x00	; 0
    2c32:	4a ef       	ldi	r20, 0xFA	; 250
    2c34:	54 e4       	ldi	r21, 0x44	; 68
    2c36:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    2c3a:	dc 01       	movw	r26, r24
    2c3c:	cb 01       	movw	r24, r22
    2c3e:	f8 01       	movw	r30, r16
    2c40:	80 83       	st	Z, r24
    2c42:	91 83       	std	Z+1, r25	; 0x01
    2c44:	a2 83       	std	Z+2, r26	; 0x02
    2c46:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2c48:	fe 01       	movw	r30, r28
    2c4a:	e3 5b       	subi	r30, 0xB3	; 179
    2c4c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c4e:	60 81       	ld	r22, Z
    2c50:	71 81       	ldd	r23, Z+1	; 0x01
    2c52:	82 81       	ldd	r24, Z+2	; 0x02
    2c54:	93 81       	ldd	r25, Z+3	; 0x03
    2c56:	20 e0       	ldi	r18, 0x00	; 0
    2c58:	30 e0       	ldi	r19, 0x00	; 0
    2c5a:	40 e8       	ldi	r20, 0x80	; 128
    2c5c:	5f e3       	ldi	r21, 0x3F	; 63
    2c5e:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
    2c62:	88 23       	and	r24, r24
    2c64:	44 f4       	brge	.+16     	; 0x2c76 <LCD_Intialization+0x230>
		__ticks = 1;
    2c66:	fe 01       	movw	r30, r28
    2c68:	e5 5b       	subi	r30, 0xB5	; 181
    2c6a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c6c:	81 e0       	ldi	r24, 0x01	; 1
    2c6e:	90 e0       	ldi	r25, 0x00	; 0
    2c70:	91 83       	std	Z+1, r25	; 0x01
    2c72:	80 83       	st	Z, r24
    2c74:	64 c0       	rjmp	.+200    	; 0x2d3e <LCD_Intialization+0x2f8>
	else if (__tmp > 65535)
    2c76:	fe 01       	movw	r30, r28
    2c78:	e3 5b       	subi	r30, 0xB3	; 179
    2c7a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c7c:	60 81       	ld	r22, Z
    2c7e:	71 81       	ldd	r23, Z+1	; 0x01
    2c80:	82 81       	ldd	r24, Z+2	; 0x02
    2c82:	93 81       	ldd	r25, Z+3	; 0x03
    2c84:	20 e0       	ldi	r18, 0x00	; 0
    2c86:	3f ef       	ldi	r19, 0xFF	; 255
    2c88:	4f e7       	ldi	r20, 0x7F	; 127
    2c8a:	57 e4       	ldi	r21, 0x47	; 71
    2c8c:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__gtsf2>
    2c90:	18 16       	cp	r1, r24
    2c92:	0c f0       	brlt	.+2      	; 0x2c96 <LCD_Intialization+0x250>
    2c94:	43 c0       	rjmp	.+134    	; 0x2d1c <LCD_Intialization+0x2d6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2c96:	fe 01       	movw	r30, r28
    2c98:	ef 5a       	subi	r30, 0xAF	; 175
    2c9a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c9c:	60 81       	ld	r22, Z
    2c9e:	71 81       	ldd	r23, Z+1	; 0x01
    2ca0:	82 81       	ldd	r24, Z+2	; 0x02
    2ca2:	93 81       	ldd	r25, Z+3	; 0x03
    2ca4:	20 e0       	ldi	r18, 0x00	; 0
    2ca6:	30 e0       	ldi	r19, 0x00	; 0
    2ca8:	40 e2       	ldi	r20, 0x20	; 32
    2caa:	51 e4       	ldi	r21, 0x41	; 65
    2cac:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    2cb0:	dc 01       	movw	r26, r24
    2cb2:	cb 01       	movw	r24, r22
    2cb4:	8e 01       	movw	r16, r28
    2cb6:	05 5b       	subi	r16, 0xB5	; 181
    2cb8:	1f 4f       	sbci	r17, 0xFF	; 255
    2cba:	bc 01       	movw	r22, r24
    2cbc:	cd 01       	movw	r24, r26
    2cbe:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2cc2:	dc 01       	movw	r26, r24
    2cc4:	cb 01       	movw	r24, r22
    2cc6:	f8 01       	movw	r30, r16
    2cc8:	91 83       	std	Z+1, r25	; 0x01
    2cca:	80 83       	st	Z, r24
    2ccc:	1f c0       	rjmp	.+62     	; 0x2d0c <LCD_Intialization+0x2c6>
    2cce:	fe 01       	movw	r30, r28
    2cd0:	e7 5b       	subi	r30, 0xB7	; 183
    2cd2:	ff 4f       	sbci	r31, 0xFF	; 255
    2cd4:	88 ec       	ldi	r24, 0xC8	; 200
    2cd6:	90 e0       	ldi	r25, 0x00	; 0
    2cd8:	91 83       	std	Z+1, r25	; 0x01
    2cda:	80 83       	st	Z, r24
    2cdc:	fe 01       	movw	r30, r28
    2cde:	e7 5b       	subi	r30, 0xB7	; 183
    2ce0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ce2:	80 81       	ld	r24, Z
    2ce4:	91 81       	ldd	r25, Z+1	; 0x01
    2ce6:	01 97       	sbiw	r24, 0x01	; 1
    2ce8:	f1 f7       	brne	.-4      	; 0x2ce6 <LCD_Intialization+0x2a0>
    2cea:	fe 01       	movw	r30, r28
    2cec:	e7 5b       	subi	r30, 0xB7	; 183
    2cee:	ff 4f       	sbci	r31, 0xFF	; 255
    2cf0:	91 83       	std	Z+1, r25	; 0x01
    2cf2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2cf4:	de 01       	movw	r26, r28
    2cf6:	a5 5b       	subi	r26, 0xB5	; 181
    2cf8:	bf 4f       	sbci	r27, 0xFF	; 255
    2cfa:	fe 01       	movw	r30, r28
    2cfc:	e5 5b       	subi	r30, 0xB5	; 181
    2cfe:	ff 4f       	sbci	r31, 0xFF	; 255
    2d00:	80 81       	ld	r24, Z
    2d02:	91 81       	ldd	r25, Z+1	; 0x01
    2d04:	01 97       	sbiw	r24, 0x01	; 1
    2d06:	11 96       	adiw	r26, 0x01	; 1
    2d08:	9c 93       	st	X, r25
    2d0a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d0c:	fe 01       	movw	r30, r28
    2d0e:	e5 5b       	subi	r30, 0xB5	; 181
    2d10:	ff 4f       	sbci	r31, 0xFF	; 255
    2d12:	80 81       	ld	r24, Z
    2d14:	91 81       	ldd	r25, Z+1	; 0x01
    2d16:	00 97       	sbiw	r24, 0x00	; 0
    2d18:	d1 f6       	brne	.-76     	; 0x2cce <LCD_Intialization+0x288>
    2d1a:	27 c0       	rjmp	.+78     	; 0x2d6a <LCD_Intialization+0x324>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d1c:	8e 01       	movw	r16, r28
    2d1e:	05 5b       	subi	r16, 0xB5	; 181
    2d20:	1f 4f       	sbci	r17, 0xFF	; 255
    2d22:	fe 01       	movw	r30, r28
    2d24:	e3 5b       	subi	r30, 0xB3	; 179
    2d26:	ff 4f       	sbci	r31, 0xFF	; 255
    2d28:	60 81       	ld	r22, Z
    2d2a:	71 81       	ldd	r23, Z+1	; 0x01
    2d2c:	82 81       	ldd	r24, Z+2	; 0x02
    2d2e:	93 81       	ldd	r25, Z+3	; 0x03
    2d30:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2d34:	dc 01       	movw	r26, r24
    2d36:	cb 01       	movw	r24, r22
    2d38:	f8 01       	movw	r30, r16
    2d3a:	91 83       	std	Z+1, r25	; 0x01
    2d3c:	80 83       	st	Z, r24
    2d3e:	de 01       	movw	r26, r28
    2d40:	a9 5b       	subi	r26, 0xB9	; 185
    2d42:	bf 4f       	sbci	r27, 0xFF	; 255
    2d44:	fe 01       	movw	r30, r28
    2d46:	e5 5b       	subi	r30, 0xB5	; 181
    2d48:	ff 4f       	sbci	r31, 0xFF	; 255
    2d4a:	80 81       	ld	r24, Z
    2d4c:	91 81       	ldd	r25, Z+1	; 0x01
    2d4e:	8d 93       	st	X+, r24
    2d50:	9c 93       	st	X, r25
    2d52:	fe 01       	movw	r30, r28
    2d54:	e9 5b       	subi	r30, 0xB9	; 185
    2d56:	ff 4f       	sbci	r31, 0xFF	; 255
    2d58:	80 81       	ld	r24, Z
    2d5a:	91 81       	ldd	r25, Z+1	; 0x01
    2d5c:	01 97       	sbiw	r24, 0x01	; 1
    2d5e:	f1 f7       	brne	.-4      	; 0x2d5c <LCD_Intialization+0x316>
    2d60:	fe 01       	movw	r30, r28
    2d62:	e9 5b       	subi	r30, 0xB9	; 185
    2d64:	ff 4f       	sbci	r31, 0xFF	; 255
    2d66:	91 83       	std	Z+1, r25	; 0x01
    2d68:	80 83       	st	Z, r24
	_delay_ms(2);
	LCD_Command(lcd_4_bits_initialization_1);
    2d6a:	82 e3       	ldi	r24, 0x32	; 50
    2d6c:	0e 94 1d 19 	call	0x323a	; 0x323a <LCD_Command>
    2d70:	fe 01       	movw	r30, r28
    2d72:	ed 5b       	subi	r30, 0xBD	; 189
    2d74:	ff 4f       	sbci	r31, 0xFF	; 255
    2d76:	80 e0       	ldi	r24, 0x00	; 0
    2d78:	90 e0       	ldi	r25, 0x00	; 0
    2d7a:	a0 e0       	ldi	r26, 0x00	; 0
    2d7c:	b0 e4       	ldi	r27, 0x40	; 64
    2d7e:	80 83       	st	Z, r24
    2d80:	91 83       	std	Z+1, r25	; 0x01
    2d82:	a2 83       	std	Z+2, r26	; 0x02
    2d84:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d86:	8e 01       	movw	r16, r28
    2d88:	01 5c       	subi	r16, 0xC1	; 193
    2d8a:	1f 4f       	sbci	r17, 0xFF	; 255
    2d8c:	fe 01       	movw	r30, r28
    2d8e:	ed 5b       	subi	r30, 0xBD	; 189
    2d90:	ff 4f       	sbci	r31, 0xFF	; 255
    2d92:	60 81       	ld	r22, Z
    2d94:	71 81       	ldd	r23, Z+1	; 0x01
    2d96:	82 81       	ldd	r24, Z+2	; 0x02
    2d98:	93 81       	ldd	r25, Z+3	; 0x03
    2d9a:	20 e0       	ldi	r18, 0x00	; 0
    2d9c:	30 e0       	ldi	r19, 0x00	; 0
    2d9e:	4a ef       	ldi	r20, 0xFA	; 250
    2da0:	54 e4       	ldi	r21, 0x44	; 68
    2da2:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    2da6:	dc 01       	movw	r26, r24
    2da8:	cb 01       	movw	r24, r22
    2daa:	f8 01       	movw	r30, r16
    2dac:	80 83       	st	Z, r24
    2dae:	91 83       	std	Z+1, r25	; 0x01
    2db0:	a2 83       	std	Z+2, r26	; 0x02
    2db2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2db4:	fe 01       	movw	r30, r28
    2db6:	ff 96       	adiw	r30, 0x3f	; 63
    2db8:	60 81       	ld	r22, Z
    2dba:	71 81       	ldd	r23, Z+1	; 0x01
    2dbc:	82 81       	ldd	r24, Z+2	; 0x02
    2dbe:	93 81       	ldd	r25, Z+3	; 0x03
    2dc0:	20 e0       	ldi	r18, 0x00	; 0
    2dc2:	30 e0       	ldi	r19, 0x00	; 0
    2dc4:	40 e8       	ldi	r20, 0x80	; 128
    2dc6:	5f e3       	ldi	r21, 0x3F	; 63
    2dc8:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
    2dcc:	88 23       	and	r24, r24
    2dce:	2c f4       	brge	.+10     	; 0x2dda <LCD_Intialization+0x394>
		__ticks = 1;
    2dd0:	81 e0       	ldi	r24, 0x01	; 1
    2dd2:	90 e0       	ldi	r25, 0x00	; 0
    2dd4:	9e af       	std	Y+62, r25	; 0x3e
    2dd6:	8d af       	std	Y+61, r24	; 0x3d
    2dd8:	46 c0       	rjmp	.+140    	; 0x2e66 <LCD_Intialization+0x420>
	else if (__tmp > 65535)
    2dda:	fe 01       	movw	r30, r28
    2ddc:	ff 96       	adiw	r30, 0x3f	; 63
    2dde:	60 81       	ld	r22, Z
    2de0:	71 81       	ldd	r23, Z+1	; 0x01
    2de2:	82 81       	ldd	r24, Z+2	; 0x02
    2de4:	93 81       	ldd	r25, Z+3	; 0x03
    2de6:	20 e0       	ldi	r18, 0x00	; 0
    2de8:	3f ef       	ldi	r19, 0xFF	; 255
    2dea:	4f e7       	ldi	r20, 0x7F	; 127
    2dec:	57 e4       	ldi	r21, 0x47	; 71
    2dee:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__gtsf2>
    2df2:	18 16       	cp	r1, r24
    2df4:	64 f5       	brge	.+88     	; 0x2e4e <LCD_Intialization+0x408>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2df6:	fe 01       	movw	r30, r28
    2df8:	ed 5b       	subi	r30, 0xBD	; 189
    2dfa:	ff 4f       	sbci	r31, 0xFF	; 255
    2dfc:	60 81       	ld	r22, Z
    2dfe:	71 81       	ldd	r23, Z+1	; 0x01
    2e00:	82 81       	ldd	r24, Z+2	; 0x02
    2e02:	93 81       	ldd	r25, Z+3	; 0x03
    2e04:	20 e0       	ldi	r18, 0x00	; 0
    2e06:	30 e0       	ldi	r19, 0x00	; 0
    2e08:	40 e2       	ldi	r20, 0x20	; 32
    2e0a:	51 e4       	ldi	r21, 0x41	; 65
    2e0c:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    2e10:	dc 01       	movw	r26, r24
    2e12:	cb 01       	movw	r24, r22
    2e14:	bc 01       	movw	r22, r24
    2e16:	cd 01       	movw	r24, r26
    2e18:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2e1c:	dc 01       	movw	r26, r24
    2e1e:	cb 01       	movw	r24, r22
    2e20:	9e af       	std	Y+62, r25	; 0x3e
    2e22:	8d af       	std	Y+61, r24	; 0x3d
    2e24:	0f c0       	rjmp	.+30     	; 0x2e44 <LCD_Intialization+0x3fe>
    2e26:	88 ec       	ldi	r24, 0xC8	; 200
    2e28:	90 e0       	ldi	r25, 0x00	; 0
    2e2a:	9c af       	std	Y+60, r25	; 0x3c
    2e2c:	8b af       	std	Y+59, r24	; 0x3b
    2e2e:	8b ad       	ldd	r24, Y+59	; 0x3b
    2e30:	9c ad       	ldd	r25, Y+60	; 0x3c
    2e32:	01 97       	sbiw	r24, 0x01	; 1
    2e34:	f1 f7       	brne	.-4      	; 0x2e32 <LCD_Intialization+0x3ec>
    2e36:	9c af       	std	Y+60, r25	; 0x3c
    2e38:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e3a:	8d ad       	ldd	r24, Y+61	; 0x3d
    2e3c:	9e ad       	ldd	r25, Y+62	; 0x3e
    2e3e:	01 97       	sbiw	r24, 0x01	; 1
    2e40:	9e af       	std	Y+62, r25	; 0x3e
    2e42:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e44:	8d ad       	ldd	r24, Y+61	; 0x3d
    2e46:	9e ad       	ldd	r25, Y+62	; 0x3e
    2e48:	00 97       	sbiw	r24, 0x00	; 0
    2e4a:	69 f7       	brne	.-38     	; 0x2e26 <LCD_Intialization+0x3e0>
    2e4c:	16 c0       	rjmp	.+44     	; 0x2e7a <LCD_Intialization+0x434>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e4e:	fe 01       	movw	r30, r28
    2e50:	ff 96       	adiw	r30, 0x3f	; 63
    2e52:	60 81       	ld	r22, Z
    2e54:	71 81       	ldd	r23, Z+1	; 0x01
    2e56:	82 81       	ldd	r24, Z+2	; 0x02
    2e58:	93 81       	ldd	r25, Z+3	; 0x03
    2e5a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2e5e:	dc 01       	movw	r26, r24
    2e60:	cb 01       	movw	r24, r22
    2e62:	9e af       	std	Y+62, r25	; 0x3e
    2e64:	8d af       	std	Y+61, r24	; 0x3d
    2e66:	8d ad       	ldd	r24, Y+61	; 0x3d
    2e68:	9e ad       	ldd	r25, Y+62	; 0x3e
    2e6a:	9a af       	std	Y+58, r25	; 0x3a
    2e6c:	89 af       	std	Y+57, r24	; 0x39
    2e6e:	89 ad       	ldd	r24, Y+57	; 0x39
    2e70:	9a ad       	ldd	r25, Y+58	; 0x3a
    2e72:	01 97       	sbiw	r24, 0x01	; 1
    2e74:	f1 f7       	brne	.-4      	; 0x2e72 <LCD_Intialization+0x42c>
    2e76:	9a af       	std	Y+58, r25	; 0x3a
    2e78:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(2);
	LCD_Command(lcd_2_lines_4_bits);
    2e7a:	88 e2       	ldi	r24, 0x28	; 40
    2e7c:	0e 94 1d 19 	call	0x323a	; 0x323a <LCD_Command>
    2e80:	80 e0       	ldi	r24, 0x00	; 0
    2e82:	90 e0       	ldi	r25, 0x00	; 0
    2e84:	a0 e0       	ldi	r26, 0x00	; 0
    2e86:	b0 e4       	ldi	r27, 0x40	; 64
    2e88:	8d ab       	std	Y+53, r24	; 0x35
    2e8a:	9e ab       	std	Y+54, r25	; 0x36
    2e8c:	af ab       	std	Y+55, r26	; 0x37
    2e8e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2e90:	6d a9       	ldd	r22, Y+53	; 0x35
    2e92:	7e a9       	ldd	r23, Y+54	; 0x36
    2e94:	8f a9       	ldd	r24, Y+55	; 0x37
    2e96:	98 ad       	ldd	r25, Y+56	; 0x38
    2e98:	20 e0       	ldi	r18, 0x00	; 0
    2e9a:	30 e0       	ldi	r19, 0x00	; 0
    2e9c:	4a ef       	ldi	r20, 0xFA	; 250
    2e9e:	54 e4       	ldi	r21, 0x44	; 68
    2ea0:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    2ea4:	dc 01       	movw	r26, r24
    2ea6:	cb 01       	movw	r24, r22
    2ea8:	89 ab       	std	Y+49, r24	; 0x31
    2eaa:	9a ab       	std	Y+50, r25	; 0x32
    2eac:	ab ab       	std	Y+51, r26	; 0x33
    2eae:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2eb0:	69 a9       	ldd	r22, Y+49	; 0x31
    2eb2:	7a a9       	ldd	r23, Y+50	; 0x32
    2eb4:	8b a9       	ldd	r24, Y+51	; 0x33
    2eb6:	9c a9       	ldd	r25, Y+52	; 0x34
    2eb8:	20 e0       	ldi	r18, 0x00	; 0
    2eba:	30 e0       	ldi	r19, 0x00	; 0
    2ebc:	40 e8       	ldi	r20, 0x80	; 128
    2ebe:	5f e3       	ldi	r21, 0x3F	; 63
    2ec0:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
    2ec4:	88 23       	and	r24, r24
    2ec6:	2c f4       	brge	.+10     	; 0x2ed2 <LCD_Intialization+0x48c>
		__ticks = 1;
    2ec8:	81 e0       	ldi	r24, 0x01	; 1
    2eca:	90 e0       	ldi	r25, 0x00	; 0
    2ecc:	98 ab       	std	Y+48, r25	; 0x30
    2ece:	8f a7       	std	Y+47, r24	; 0x2f
    2ed0:	3f c0       	rjmp	.+126    	; 0x2f50 <LCD_Intialization+0x50a>
	else if (__tmp > 65535)
    2ed2:	69 a9       	ldd	r22, Y+49	; 0x31
    2ed4:	7a a9       	ldd	r23, Y+50	; 0x32
    2ed6:	8b a9       	ldd	r24, Y+51	; 0x33
    2ed8:	9c a9       	ldd	r25, Y+52	; 0x34
    2eda:	20 e0       	ldi	r18, 0x00	; 0
    2edc:	3f ef       	ldi	r19, 0xFF	; 255
    2ede:	4f e7       	ldi	r20, 0x7F	; 127
    2ee0:	57 e4       	ldi	r21, 0x47	; 71
    2ee2:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__gtsf2>
    2ee6:	18 16       	cp	r1, r24
    2ee8:	4c f5       	brge	.+82     	; 0x2f3c <LCD_Intialization+0x4f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2eea:	6d a9       	ldd	r22, Y+53	; 0x35
    2eec:	7e a9       	ldd	r23, Y+54	; 0x36
    2eee:	8f a9       	ldd	r24, Y+55	; 0x37
    2ef0:	98 ad       	ldd	r25, Y+56	; 0x38
    2ef2:	20 e0       	ldi	r18, 0x00	; 0
    2ef4:	30 e0       	ldi	r19, 0x00	; 0
    2ef6:	40 e2       	ldi	r20, 0x20	; 32
    2ef8:	51 e4       	ldi	r21, 0x41	; 65
    2efa:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    2efe:	dc 01       	movw	r26, r24
    2f00:	cb 01       	movw	r24, r22
    2f02:	bc 01       	movw	r22, r24
    2f04:	cd 01       	movw	r24, r26
    2f06:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2f0a:	dc 01       	movw	r26, r24
    2f0c:	cb 01       	movw	r24, r22
    2f0e:	98 ab       	std	Y+48, r25	; 0x30
    2f10:	8f a7       	std	Y+47, r24	; 0x2f
    2f12:	0f c0       	rjmp	.+30     	; 0x2f32 <LCD_Intialization+0x4ec>
    2f14:	88 ec       	ldi	r24, 0xC8	; 200
    2f16:	90 e0       	ldi	r25, 0x00	; 0
    2f18:	9e a7       	std	Y+46, r25	; 0x2e
    2f1a:	8d a7       	std	Y+45, r24	; 0x2d
    2f1c:	8d a5       	ldd	r24, Y+45	; 0x2d
    2f1e:	9e a5       	ldd	r25, Y+46	; 0x2e
    2f20:	01 97       	sbiw	r24, 0x01	; 1
    2f22:	f1 f7       	brne	.-4      	; 0x2f20 <LCD_Intialization+0x4da>
    2f24:	9e a7       	std	Y+46, r25	; 0x2e
    2f26:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2f28:	8f a5       	ldd	r24, Y+47	; 0x2f
    2f2a:	98 a9       	ldd	r25, Y+48	; 0x30
    2f2c:	01 97       	sbiw	r24, 0x01	; 1
    2f2e:	98 ab       	std	Y+48, r25	; 0x30
    2f30:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f32:	8f a5       	ldd	r24, Y+47	; 0x2f
    2f34:	98 a9       	ldd	r25, Y+48	; 0x30
    2f36:	00 97       	sbiw	r24, 0x00	; 0
    2f38:	69 f7       	brne	.-38     	; 0x2f14 <LCD_Intialization+0x4ce>
    2f3a:	14 c0       	rjmp	.+40     	; 0x2f64 <LCD_Intialization+0x51e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f3c:	69 a9       	ldd	r22, Y+49	; 0x31
    2f3e:	7a a9       	ldd	r23, Y+50	; 0x32
    2f40:	8b a9       	ldd	r24, Y+51	; 0x33
    2f42:	9c a9       	ldd	r25, Y+52	; 0x34
    2f44:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2f48:	dc 01       	movw	r26, r24
    2f4a:	cb 01       	movw	r24, r22
    2f4c:	98 ab       	std	Y+48, r25	; 0x30
    2f4e:	8f a7       	std	Y+47, r24	; 0x2f
    2f50:	8f a5       	ldd	r24, Y+47	; 0x2f
    2f52:	98 a9       	ldd	r25, Y+48	; 0x30
    2f54:	9c a7       	std	Y+44, r25	; 0x2c
    2f56:	8b a7       	std	Y+43, r24	; 0x2b
    2f58:	8b a5       	ldd	r24, Y+43	; 0x2b
    2f5a:	9c a5       	ldd	r25, Y+44	; 0x2c
    2f5c:	01 97       	sbiw	r24, 0x01	; 1
    2f5e:	f1 f7       	brne	.-4      	; 0x2f5c <LCD_Intialization+0x516>
    2f60:	9c a7       	std	Y+44, r25	; 0x2c
    2f62:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(2);
	LCD_Command(lcd_displayon_cursor_off);
    2f64:	8c e0       	ldi	r24, 0x0C	; 12
    2f66:	0e 94 1d 19 	call	0x323a	; 0x323a <LCD_Command>
    2f6a:	80 e0       	ldi	r24, 0x00	; 0
    2f6c:	90 e0       	ldi	r25, 0x00	; 0
    2f6e:	a0 e0       	ldi	r26, 0x00	; 0
    2f70:	b0 e4       	ldi	r27, 0x40	; 64
    2f72:	8f a3       	std	Y+39, r24	; 0x27
    2f74:	98 a7       	std	Y+40, r25	; 0x28
    2f76:	a9 a7       	std	Y+41, r26	; 0x29
    2f78:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f7a:	6f a1       	ldd	r22, Y+39	; 0x27
    2f7c:	78 a5       	ldd	r23, Y+40	; 0x28
    2f7e:	89 a5       	ldd	r24, Y+41	; 0x29
    2f80:	9a a5       	ldd	r25, Y+42	; 0x2a
    2f82:	20 e0       	ldi	r18, 0x00	; 0
    2f84:	30 e0       	ldi	r19, 0x00	; 0
    2f86:	4a ef       	ldi	r20, 0xFA	; 250
    2f88:	54 e4       	ldi	r21, 0x44	; 68
    2f8a:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    2f8e:	dc 01       	movw	r26, r24
    2f90:	cb 01       	movw	r24, r22
    2f92:	8b a3       	std	Y+35, r24	; 0x23
    2f94:	9c a3       	std	Y+36, r25	; 0x24
    2f96:	ad a3       	std	Y+37, r26	; 0x25
    2f98:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2f9a:	6b a1       	ldd	r22, Y+35	; 0x23
    2f9c:	7c a1       	ldd	r23, Y+36	; 0x24
    2f9e:	8d a1       	ldd	r24, Y+37	; 0x25
    2fa0:	9e a1       	ldd	r25, Y+38	; 0x26
    2fa2:	20 e0       	ldi	r18, 0x00	; 0
    2fa4:	30 e0       	ldi	r19, 0x00	; 0
    2fa6:	40 e8       	ldi	r20, 0x80	; 128
    2fa8:	5f e3       	ldi	r21, 0x3F	; 63
    2faa:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
    2fae:	88 23       	and	r24, r24
    2fb0:	2c f4       	brge	.+10     	; 0x2fbc <LCD_Intialization+0x576>
		__ticks = 1;
    2fb2:	81 e0       	ldi	r24, 0x01	; 1
    2fb4:	90 e0       	ldi	r25, 0x00	; 0
    2fb6:	9a a3       	std	Y+34, r25	; 0x22
    2fb8:	89 a3       	std	Y+33, r24	; 0x21
    2fba:	3f c0       	rjmp	.+126    	; 0x303a <LCD_Intialization+0x5f4>
	else if (__tmp > 65535)
    2fbc:	6b a1       	ldd	r22, Y+35	; 0x23
    2fbe:	7c a1       	ldd	r23, Y+36	; 0x24
    2fc0:	8d a1       	ldd	r24, Y+37	; 0x25
    2fc2:	9e a1       	ldd	r25, Y+38	; 0x26
    2fc4:	20 e0       	ldi	r18, 0x00	; 0
    2fc6:	3f ef       	ldi	r19, 0xFF	; 255
    2fc8:	4f e7       	ldi	r20, 0x7F	; 127
    2fca:	57 e4       	ldi	r21, 0x47	; 71
    2fcc:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__gtsf2>
    2fd0:	18 16       	cp	r1, r24
    2fd2:	4c f5       	brge	.+82     	; 0x3026 <LCD_Intialization+0x5e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2fd4:	6f a1       	ldd	r22, Y+39	; 0x27
    2fd6:	78 a5       	ldd	r23, Y+40	; 0x28
    2fd8:	89 a5       	ldd	r24, Y+41	; 0x29
    2fda:	9a a5       	ldd	r25, Y+42	; 0x2a
    2fdc:	20 e0       	ldi	r18, 0x00	; 0
    2fde:	30 e0       	ldi	r19, 0x00	; 0
    2fe0:	40 e2       	ldi	r20, 0x20	; 32
    2fe2:	51 e4       	ldi	r21, 0x41	; 65
    2fe4:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    2fe8:	dc 01       	movw	r26, r24
    2fea:	cb 01       	movw	r24, r22
    2fec:	bc 01       	movw	r22, r24
    2fee:	cd 01       	movw	r24, r26
    2ff0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2ff4:	dc 01       	movw	r26, r24
    2ff6:	cb 01       	movw	r24, r22
    2ff8:	9a a3       	std	Y+34, r25	; 0x22
    2ffa:	89 a3       	std	Y+33, r24	; 0x21
    2ffc:	0f c0       	rjmp	.+30     	; 0x301c <LCD_Intialization+0x5d6>
    2ffe:	88 ec       	ldi	r24, 0xC8	; 200
    3000:	90 e0       	ldi	r25, 0x00	; 0
    3002:	98 a3       	std	Y+32, r25	; 0x20
    3004:	8f 8f       	std	Y+31, r24	; 0x1f
    3006:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3008:	98 a1       	ldd	r25, Y+32	; 0x20
    300a:	01 97       	sbiw	r24, 0x01	; 1
    300c:	f1 f7       	brne	.-4      	; 0x300a <LCD_Intialization+0x5c4>
    300e:	98 a3       	std	Y+32, r25	; 0x20
    3010:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3012:	89 a1       	ldd	r24, Y+33	; 0x21
    3014:	9a a1       	ldd	r25, Y+34	; 0x22
    3016:	01 97       	sbiw	r24, 0x01	; 1
    3018:	9a a3       	std	Y+34, r25	; 0x22
    301a:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    301c:	89 a1       	ldd	r24, Y+33	; 0x21
    301e:	9a a1       	ldd	r25, Y+34	; 0x22
    3020:	00 97       	sbiw	r24, 0x00	; 0
    3022:	69 f7       	brne	.-38     	; 0x2ffe <LCD_Intialization+0x5b8>
    3024:	14 c0       	rjmp	.+40     	; 0x304e <LCD_Intialization+0x608>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3026:	6b a1       	ldd	r22, Y+35	; 0x23
    3028:	7c a1       	ldd	r23, Y+36	; 0x24
    302a:	8d a1       	ldd	r24, Y+37	; 0x25
    302c:	9e a1       	ldd	r25, Y+38	; 0x26
    302e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3032:	dc 01       	movw	r26, r24
    3034:	cb 01       	movw	r24, r22
    3036:	9a a3       	std	Y+34, r25	; 0x22
    3038:	89 a3       	std	Y+33, r24	; 0x21
    303a:	89 a1       	ldd	r24, Y+33	; 0x21
    303c:	9a a1       	ldd	r25, Y+34	; 0x22
    303e:	9e 8f       	std	Y+30, r25	; 0x1e
    3040:	8d 8f       	std	Y+29, r24	; 0x1d
    3042:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3044:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3046:	01 97       	sbiw	r24, 0x01	; 1
    3048:	f1 f7       	brne	.-4      	; 0x3046 <LCD_Intialization+0x600>
    304a:	9e 8f       	std	Y+30, r25	; 0x1e
    304c:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(2);
	LCD_Command(lcd_increment_cursor);
    304e:	86 e0       	ldi	r24, 0x06	; 6
    3050:	0e 94 1d 19 	call	0x323a	; 0x323a <LCD_Command>
    3054:	80 e0       	ldi	r24, 0x00	; 0
    3056:	90 e0       	ldi	r25, 0x00	; 0
    3058:	a0 e0       	ldi	r26, 0x00	; 0
    305a:	b0 e4       	ldi	r27, 0x40	; 64
    305c:	89 8f       	std	Y+25, r24	; 0x19
    305e:	9a 8f       	std	Y+26, r25	; 0x1a
    3060:	ab 8f       	std	Y+27, r26	; 0x1b
    3062:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3064:	69 8d       	ldd	r22, Y+25	; 0x19
    3066:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3068:	8b 8d       	ldd	r24, Y+27	; 0x1b
    306a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    306c:	20 e0       	ldi	r18, 0x00	; 0
    306e:	30 e0       	ldi	r19, 0x00	; 0
    3070:	4a ef       	ldi	r20, 0xFA	; 250
    3072:	54 e4       	ldi	r21, 0x44	; 68
    3074:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3078:	dc 01       	movw	r26, r24
    307a:	cb 01       	movw	r24, r22
    307c:	8d 8b       	std	Y+21, r24	; 0x15
    307e:	9e 8b       	std	Y+22, r25	; 0x16
    3080:	af 8b       	std	Y+23, r26	; 0x17
    3082:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3084:	6d 89       	ldd	r22, Y+21	; 0x15
    3086:	7e 89       	ldd	r23, Y+22	; 0x16
    3088:	8f 89       	ldd	r24, Y+23	; 0x17
    308a:	98 8d       	ldd	r25, Y+24	; 0x18
    308c:	20 e0       	ldi	r18, 0x00	; 0
    308e:	30 e0       	ldi	r19, 0x00	; 0
    3090:	40 e8       	ldi	r20, 0x80	; 128
    3092:	5f e3       	ldi	r21, 0x3F	; 63
    3094:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
    3098:	88 23       	and	r24, r24
    309a:	2c f4       	brge	.+10     	; 0x30a6 <LCD_Intialization+0x660>
		__ticks = 1;
    309c:	81 e0       	ldi	r24, 0x01	; 1
    309e:	90 e0       	ldi	r25, 0x00	; 0
    30a0:	9c 8b       	std	Y+20, r25	; 0x14
    30a2:	8b 8b       	std	Y+19, r24	; 0x13
    30a4:	3f c0       	rjmp	.+126    	; 0x3124 <LCD_Intialization+0x6de>
	else if (__tmp > 65535)
    30a6:	6d 89       	ldd	r22, Y+21	; 0x15
    30a8:	7e 89       	ldd	r23, Y+22	; 0x16
    30aa:	8f 89       	ldd	r24, Y+23	; 0x17
    30ac:	98 8d       	ldd	r25, Y+24	; 0x18
    30ae:	20 e0       	ldi	r18, 0x00	; 0
    30b0:	3f ef       	ldi	r19, 0xFF	; 255
    30b2:	4f e7       	ldi	r20, 0x7F	; 127
    30b4:	57 e4       	ldi	r21, 0x47	; 71
    30b6:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__gtsf2>
    30ba:	18 16       	cp	r1, r24
    30bc:	4c f5       	brge	.+82     	; 0x3110 <LCD_Intialization+0x6ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    30be:	69 8d       	ldd	r22, Y+25	; 0x19
    30c0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    30c2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    30c4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    30c6:	20 e0       	ldi	r18, 0x00	; 0
    30c8:	30 e0       	ldi	r19, 0x00	; 0
    30ca:	40 e2       	ldi	r20, 0x20	; 32
    30cc:	51 e4       	ldi	r21, 0x41	; 65
    30ce:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    30d2:	dc 01       	movw	r26, r24
    30d4:	cb 01       	movw	r24, r22
    30d6:	bc 01       	movw	r22, r24
    30d8:	cd 01       	movw	r24, r26
    30da:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    30de:	dc 01       	movw	r26, r24
    30e0:	cb 01       	movw	r24, r22
    30e2:	9c 8b       	std	Y+20, r25	; 0x14
    30e4:	8b 8b       	std	Y+19, r24	; 0x13
    30e6:	0f c0       	rjmp	.+30     	; 0x3106 <LCD_Intialization+0x6c0>
    30e8:	88 ec       	ldi	r24, 0xC8	; 200
    30ea:	90 e0       	ldi	r25, 0x00	; 0
    30ec:	9a 8b       	std	Y+18, r25	; 0x12
    30ee:	89 8b       	std	Y+17, r24	; 0x11
    30f0:	89 89       	ldd	r24, Y+17	; 0x11
    30f2:	9a 89       	ldd	r25, Y+18	; 0x12
    30f4:	01 97       	sbiw	r24, 0x01	; 1
    30f6:	f1 f7       	brne	.-4      	; 0x30f4 <LCD_Intialization+0x6ae>
    30f8:	9a 8b       	std	Y+18, r25	; 0x12
    30fa:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    30fc:	8b 89       	ldd	r24, Y+19	; 0x13
    30fe:	9c 89       	ldd	r25, Y+20	; 0x14
    3100:	01 97       	sbiw	r24, 0x01	; 1
    3102:	9c 8b       	std	Y+20, r25	; 0x14
    3104:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3106:	8b 89       	ldd	r24, Y+19	; 0x13
    3108:	9c 89       	ldd	r25, Y+20	; 0x14
    310a:	00 97       	sbiw	r24, 0x00	; 0
    310c:	69 f7       	brne	.-38     	; 0x30e8 <LCD_Intialization+0x6a2>
    310e:	14 c0       	rjmp	.+40     	; 0x3138 <LCD_Intialization+0x6f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3110:	6d 89       	ldd	r22, Y+21	; 0x15
    3112:	7e 89       	ldd	r23, Y+22	; 0x16
    3114:	8f 89       	ldd	r24, Y+23	; 0x17
    3116:	98 8d       	ldd	r25, Y+24	; 0x18
    3118:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    311c:	dc 01       	movw	r26, r24
    311e:	cb 01       	movw	r24, r22
    3120:	9c 8b       	std	Y+20, r25	; 0x14
    3122:	8b 8b       	std	Y+19, r24	; 0x13
    3124:	8b 89       	ldd	r24, Y+19	; 0x13
    3126:	9c 89       	ldd	r25, Y+20	; 0x14
    3128:	98 8b       	std	Y+16, r25	; 0x10
    312a:	8f 87       	std	Y+15, r24	; 0x0f
    312c:	8f 85       	ldd	r24, Y+15	; 0x0f
    312e:	98 89       	ldd	r25, Y+16	; 0x10
    3130:	01 97       	sbiw	r24, 0x01	; 1
    3132:	f1 f7       	brne	.-4      	; 0x3130 <LCD_Intialization+0x6ea>
    3134:	98 8b       	std	Y+16, r25	; 0x10
    3136:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(2);
	LCD_Command(lcd_clear);
    3138:	81 e0       	ldi	r24, 0x01	; 1
    313a:	0e 94 1d 19 	call	0x323a	; 0x323a <LCD_Command>
    313e:	80 e0       	ldi	r24, 0x00	; 0
    3140:	90 e0       	ldi	r25, 0x00	; 0
    3142:	a0 e7       	ldi	r26, 0x70	; 112
    3144:	b1 e4       	ldi	r27, 0x41	; 65
    3146:	8b 87       	std	Y+11, r24	; 0x0b
    3148:	9c 87       	std	Y+12, r25	; 0x0c
    314a:	ad 87       	std	Y+13, r26	; 0x0d
    314c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    314e:	6b 85       	ldd	r22, Y+11	; 0x0b
    3150:	7c 85       	ldd	r23, Y+12	; 0x0c
    3152:	8d 85       	ldd	r24, Y+13	; 0x0d
    3154:	9e 85       	ldd	r25, Y+14	; 0x0e
    3156:	20 e0       	ldi	r18, 0x00	; 0
    3158:	30 e0       	ldi	r19, 0x00	; 0
    315a:	4a ef       	ldi	r20, 0xFA	; 250
    315c:	54 e4       	ldi	r21, 0x44	; 68
    315e:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3162:	dc 01       	movw	r26, r24
    3164:	cb 01       	movw	r24, r22
    3166:	8f 83       	std	Y+7, r24	; 0x07
    3168:	98 87       	std	Y+8, r25	; 0x08
    316a:	a9 87       	std	Y+9, r26	; 0x09
    316c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    316e:	6f 81       	ldd	r22, Y+7	; 0x07
    3170:	78 85       	ldd	r23, Y+8	; 0x08
    3172:	89 85       	ldd	r24, Y+9	; 0x09
    3174:	9a 85       	ldd	r25, Y+10	; 0x0a
    3176:	20 e0       	ldi	r18, 0x00	; 0
    3178:	30 e0       	ldi	r19, 0x00	; 0
    317a:	40 e8       	ldi	r20, 0x80	; 128
    317c:	5f e3       	ldi	r21, 0x3F	; 63
    317e:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
    3182:	88 23       	and	r24, r24
    3184:	2c f4       	brge	.+10     	; 0x3190 <LCD_Intialization+0x74a>
		__ticks = 1;
    3186:	81 e0       	ldi	r24, 0x01	; 1
    3188:	90 e0       	ldi	r25, 0x00	; 0
    318a:	9e 83       	std	Y+6, r25	; 0x06
    318c:	8d 83       	std	Y+5, r24	; 0x05
    318e:	3f c0       	rjmp	.+126    	; 0x320e <LCD_Intialization+0x7c8>
	else if (__tmp > 65535)
    3190:	6f 81       	ldd	r22, Y+7	; 0x07
    3192:	78 85       	ldd	r23, Y+8	; 0x08
    3194:	89 85       	ldd	r24, Y+9	; 0x09
    3196:	9a 85       	ldd	r25, Y+10	; 0x0a
    3198:	20 e0       	ldi	r18, 0x00	; 0
    319a:	3f ef       	ldi	r19, 0xFF	; 255
    319c:	4f e7       	ldi	r20, 0x7F	; 127
    319e:	57 e4       	ldi	r21, 0x47	; 71
    31a0:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__gtsf2>
    31a4:	18 16       	cp	r1, r24
    31a6:	4c f5       	brge	.+82     	; 0x31fa <LCD_Intialization+0x7b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    31a8:	6b 85       	ldd	r22, Y+11	; 0x0b
    31aa:	7c 85       	ldd	r23, Y+12	; 0x0c
    31ac:	8d 85       	ldd	r24, Y+13	; 0x0d
    31ae:	9e 85       	ldd	r25, Y+14	; 0x0e
    31b0:	20 e0       	ldi	r18, 0x00	; 0
    31b2:	30 e0       	ldi	r19, 0x00	; 0
    31b4:	40 e2       	ldi	r20, 0x20	; 32
    31b6:	51 e4       	ldi	r21, 0x41	; 65
    31b8:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    31bc:	dc 01       	movw	r26, r24
    31be:	cb 01       	movw	r24, r22
    31c0:	bc 01       	movw	r22, r24
    31c2:	cd 01       	movw	r24, r26
    31c4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    31c8:	dc 01       	movw	r26, r24
    31ca:	cb 01       	movw	r24, r22
    31cc:	9e 83       	std	Y+6, r25	; 0x06
    31ce:	8d 83       	std	Y+5, r24	; 0x05
    31d0:	0f c0       	rjmp	.+30     	; 0x31f0 <LCD_Intialization+0x7aa>
    31d2:	88 ec       	ldi	r24, 0xC8	; 200
    31d4:	90 e0       	ldi	r25, 0x00	; 0
    31d6:	9c 83       	std	Y+4, r25	; 0x04
    31d8:	8b 83       	std	Y+3, r24	; 0x03
    31da:	8b 81       	ldd	r24, Y+3	; 0x03
    31dc:	9c 81       	ldd	r25, Y+4	; 0x04
    31de:	01 97       	sbiw	r24, 0x01	; 1
    31e0:	f1 f7       	brne	.-4      	; 0x31de <LCD_Intialization+0x798>
    31e2:	9c 83       	std	Y+4, r25	; 0x04
    31e4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    31e6:	8d 81       	ldd	r24, Y+5	; 0x05
    31e8:	9e 81       	ldd	r25, Y+6	; 0x06
    31ea:	01 97       	sbiw	r24, 0x01	; 1
    31ec:	9e 83       	std	Y+6, r25	; 0x06
    31ee:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    31f0:	8d 81       	ldd	r24, Y+5	; 0x05
    31f2:	9e 81       	ldd	r25, Y+6	; 0x06
    31f4:	00 97       	sbiw	r24, 0x00	; 0
    31f6:	69 f7       	brne	.-38     	; 0x31d2 <LCD_Intialization+0x78c>
    31f8:	14 c0       	rjmp	.+40     	; 0x3222 <LCD_Intialization+0x7dc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    31fa:	6f 81       	ldd	r22, Y+7	; 0x07
    31fc:	78 85       	ldd	r23, Y+8	; 0x08
    31fe:	89 85       	ldd	r24, Y+9	; 0x09
    3200:	9a 85       	ldd	r25, Y+10	; 0x0a
    3202:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3206:	dc 01       	movw	r26, r24
    3208:	cb 01       	movw	r24, r22
    320a:	9e 83       	std	Y+6, r25	; 0x06
    320c:	8d 83       	std	Y+5, r24	; 0x05
    320e:	8d 81       	ldd	r24, Y+5	; 0x05
    3210:	9e 81       	ldd	r25, Y+6	; 0x06
    3212:	9a 83       	std	Y+2, r25	; 0x02
    3214:	89 83       	std	Y+1, r24	; 0x01
    3216:	89 81       	ldd	r24, Y+1	; 0x01
    3218:	9a 81       	ldd	r25, Y+2	; 0x02
    321a:	01 97       	sbiw	r24, 0x01	; 1
    321c:	f1 f7       	brne	.-4      	; 0x321a <LCD_Intialization+0x7d4>
    321e:	9a 83       	std	Y+2, r25	; 0x02
    3220:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(15);

}
    3222:	ce 59       	subi	r28, 0x9E	; 158
    3224:	df 4f       	sbci	r29, 0xFF	; 255
    3226:	0f b6       	in	r0, 0x3f	; 63
    3228:	f8 94       	cli
    322a:	de bf       	out	0x3e, r29	; 62
    322c:	0f be       	out	0x3f, r0	; 63
    322e:	cd bf       	out	0x3d, r28	; 61
    3230:	cf 91       	pop	r28
    3232:	df 91       	pop	r29
    3234:	1f 91       	pop	r17
    3236:	0f 91       	pop	r16
    3238:	08 95       	ret

0000323a <LCD_Command>:


void LCD_Command (uint8 u8Commandcopy)
{
    323a:	0f 93       	push	r16
    323c:	1f 93       	push	r17
    323e:	df 93       	push	r29
    3240:	cf 93       	push	r28
    3242:	cd b7       	in	r28, 0x3d	; 61
    3244:	de b7       	in	r29, 0x3e	; 62
    3246:	c1 57       	subi	r28, 0x71	; 113
    3248:	d0 40       	sbci	r29, 0x00	; 0
    324a:	0f b6       	in	r0, 0x3f	; 63
    324c:	f8 94       	cli
    324e:	de bf       	out	0x3e, r29	; 62
    3250:	0f be       	out	0x3f, r0	; 63
    3252:	cd bf       	out	0x3d, r28	; 61
    3254:	fe 01       	movw	r30, r28
    3256:	ef 58       	subi	r30, 0x8F	; 143
    3258:	ff 4f       	sbci	r31, 0xFF	; 255
    325a:	80 83       	st	Z, r24
	DIO_WritePin(RS_LCD,low);
    325c:	81 e0       	ldi	r24, 0x01	; 1
    325e:	60 e0       	ldi	r22, 0x00	; 0
    3260:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
    3264:	fe 01       	movw	r30, r28
    3266:	e3 59       	subi	r30, 0x93	; 147
    3268:	ff 4f       	sbci	r31, 0xFF	; 255
    326a:	80 e0       	ldi	r24, 0x00	; 0
    326c:	90 e0       	ldi	r25, 0x00	; 0
    326e:	a0 e8       	ldi	r26, 0x80	; 128
    3270:	bf e3       	ldi	r27, 0x3F	; 63
    3272:	80 83       	st	Z, r24
    3274:	91 83       	std	Z+1, r25	; 0x01
    3276:	a2 83       	std	Z+2, r26	; 0x02
    3278:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    327a:	8e 01       	movw	r16, r28
    327c:	07 59       	subi	r16, 0x97	; 151
    327e:	1f 4f       	sbci	r17, 0xFF	; 255
    3280:	fe 01       	movw	r30, r28
    3282:	e3 59       	subi	r30, 0x93	; 147
    3284:	ff 4f       	sbci	r31, 0xFF	; 255
    3286:	60 81       	ld	r22, Z
    3288:	71 81       	ldd	r23, Z+1	; 0x01
    328a:	82 81       	ldd	r24, Z+2	; 0x02
    328c:	93 81       	ldd	r25, Z+3	; 0x03
    328e:	20 e0       	ldi	r18, 0x00	; 0
    3290:	30 e0       	ldi	r19, 0x00	; 0
    3292:	4a ef       	ldi	r20, 0xFA	; 250
    3294:	54 e4       	ldi	r21, 0x44	; 68
    3296:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    329a:	dc 01       	movw	r26, r24
    329c:	cb 01       	movw	r24, r22
    329e:	f8 01       	movw	r30, r16
    32a0:	80 83       	st	Z, r24
    32a2:	91 83       	std	Z+1, r25	; 0x01
    32a4:	a2 83       	std	Z+2, r26	; 0x02
    32a6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    32a8:	fe 01       	movw	r30, r28
    32aa:	e7 59       	subi	r30, 0x97	; 151
    32ac:	ff 4f       	sbci	r31, 0xFF	; 255
    32ae:	60 81       	ld	r22, Z
    32b0:	71 81       	ldd	r23, Z+1	; 0x01
    32b2:	82 81       	ldd	r24, Z+2	; 0x02
    32b4:	93 81       	ldd	r25, Z+3	; 0x03
    32b6:	20 e0       	ldi	r18, 0x00	; 0
    32b8:	30 e0       	ldi	r19, 0x00	; 0
    32ba:	40 e8       	ldi	r20, 0x80	; 128
    32bc:	5f e3       	ldi	r21, 0x3F	; 63
    32be:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
    32c2:	88 23       	and	r24, r24
    32c4:	44 f4       	brge	.+16     	; 0x32d6 <LCD_Command+0x9c>
		__ticks = 1;
    32c6:	fe 01       	movw	r30, r28
    32c8:	e9 59       	subi	r30, 0x99	; 153
    32ca:	ff 4f       	sbci	r31, 0xFF	; 255
    32cc:	81 e0       	ldi	r24, 0x01	; 1
    32ce:	90 e0       	ldi	r25, 0x00	; 0
    32d0:	91 83       	std	Z+1, r25	; 0x01
    32d2:	80 83       	st	Z, r24
    32d4:	64 c0       	rjmp	.+200    	; 0x339e <LCD_Command+0x164>
	else if (__tmp > 65535)
    32d6:	fe 01       	movw	r30, r28
    32d8:	e7 59       	subi	r30, 0x97	; 151
    32da:	ff 4f       	sbci	r31, 0xFF	; 255
    32dc:	60 81       	ld	r22, Z
    32de:	71 81       	ldd	r23, Z+1	; 0x01
    32e0:	82 81       	ldd	r24, Z+2	; 0x02
    32e2:	93 81       	ldd	r25, Z+3	; 0x03
    32e4:	20 e0       	ldi	r18, 0x00	; 0
    32e6:	3f ef       	ldi	r19, 0xFF	; 255
    32e8:	4f e7       	ldi	r20, 0x7F	; 127
    32ea:	57 e4       	ldi	r21, 0x47	; 71
    32ec:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__gtsf2>
    32f0:	18 16       	cp	r1, r24
    32f2:	0c f0       	brlt	.+2      	; 0x32f6 <LCD_Command+0xbc>
    32f4:	43 c0       	rjmp	.+134    	; 0x337c <LCD_Command+0x142>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    32f6:	fe 01       	movw	r30, r28
    32f8:	e3 59       	subi	r30, 0x93	; 147
    32fa:	ff 4f       	sbci	r31, 0xFF	; 255
    32fc:	60 81       	ld	r22, Z
    32fe:	71 81       	ldd	r23, Z+1	; 0x01
    3300:	82 81       	ldd	r24, Z+2	; 0x02
    3302:	93 81       	ldd	r25, Z+3	; 0x03
    3304:	20 e0       	ldi	r18, 0x00	; 0
    3306:	30 e0       	ldi	r19, 0x00	; 0
    3308:	40 e2       	ldi	r20, 0x20	; 32
    330a:	51 e4       	ldi	r21, 0x41	; 65
    330c:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3310:	dc 01       	movw	r26, r24
    3312:	cb 01       	movw	r24, r22
    3314:	8e 01       	movw	r16, r28
    3316:	09 59       	subi	r16, 0x99	; 153
    3318:	1f 4f       	sbci	r17, 0xFF	; 255
    331a:	bc 01       	movw	r22, r24
    331c:	cd 01       	movw	r24, r26
    331e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3322:	dc 01       	movw	r26, r24
    3324:	cb 01       	movw	r24, r22
    3326:	f8 01       	movw	r30, r16
    3328:	91 83       	std	Z+1, r25	; 0x01
    332a:	80 83       	st	Z, r24
    332c:	1f c0       	rjmp	.+62     	; 0x336c <LCD_Command+0x132>
    332e:	fe 01       	movw	r30, r28
    3330:	eb 59       	subi	r30, 0x9B	; 155
    3332:	ff 4f       	sbci	r31, 0xFF	; 255
    3334:	88 ec       	ldi	r24, 0xC8	; 200
    3336:	90 e0       	ldi	r25, 0x00	; 0
    3338:	91 83       	std	Z+1, r25	; 0x01
    333a:	80 83       	st	Z, r24
    333c:	fe 01       	movw	r30, r28
    333e:	eb 59       	subi	r30, 0x9B	; 155
    3340:	ff 4f       	sbci	r31, 0xFF	; 255
    3342:	80 81       	ld	r24, Z
    3344:	91 81       	ldd	r25, Z+1	; 0x01
    3346:	01 97       	sbiw	r24, 0x01	; 1
    3348:	f1 f7       	brne	.-4      	; 0x3346 <LCD_Command+0x10c>
    334a:	fe 01       	movw	r30, r28
    334c:	eb 59       	subi	r30, 0x9B	; 155
    334e:	ff 4f       	sbci	r31, 0xFF	; 255
    3350:	91 83       	std	Z+1, r25	; 0x01
    3352:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3354:	de 01       	movw	r26, r28
    3356:	a9 59       	subi	r26, 0x99	; 153
    3358:	bf 4f       	sbci	r27, 0xFF	; 255
    335a:	fe 01       	movw	r30, r28
    335c:	e9 59       	subi	r30, 0x99	; 153
    335e:	ff 4f       	sbci	r31, 0xFF	; 255
    3360:	80 81       	ld	r24, Z
    3362:	91 81       	ldd	r25, Z+1	; 0x01
    3364:	01 97       	sbiw	r24, 0x01	; 1
    3366:	11 96       	adiw	r26, 0x01	; 1
    3368:	9c 93       	st	X, r25
    336a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    336c:	fe 01       	movw	r30, r28
    336e:	e9 59       	subi	r30, 0x99	; 153
    3370:	ff 4f       	sbci	r31, 0xFF	; 255
    3372:	80 81       	ld	r24, Z
    3374:	91 81       	ldd	r25, Z+1	; 0x01
    3376:	00 97       	sbiw	r24, 0x00	; 0
    3378:	d1 f6       	brne	.-76     	; 0x332e <LCD_Command+0xf4>
    337a:	27 c0       	rjmp	.+78     	; 0x33ca <LCD_Command+0x190>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    337c:	8e 01       	movw	r16, r28
    337e:	09 59       	subi	r16, 0x99	; 153
    3380:	1f 4f       	sbci	r17, 0xFF	; 255
    3382:	fe 01       	movw	r30, r28
    3384:	e7 59       	subi	r30, 0x97	; 151
    3386:	ff 4f       	sbci	r31, 0xFF	; 255
    3388:	60 81       	ld	r22, Z
    338a:	71 81       	ldd	r23, Z+1	; 0x01
    338c:	82 81       	ldd	r24, Z+2	; 0x02
    338e:	93 81       	ldd	r25, Z+3	; 0x03
    3390:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3394:	dc 01       	movw	r26, r24
    3396:	cb 01       	movw	r24, r22
    3398:	f8 01       	movw	r30, r16
    339a:	91 83       	std	Z+1, r25	; 0x01
    339c:	80 83       	st	Z, r24
    339e:	de 01       	movw	r26, r28
    33a0:	ad 59       	subi	r26, 0x9D	; 157
    33a2:	bf 4f       	sbci	r27, 0xFF	; 255
    33a4:	fe 01       	movw	r30, r28
    33a6:	e9 59       	subi	r30, 0x99	; 153
    33a8:	ff 4f       	sbci	r31, 0xFF	; 255
    33aa:	80 81       	ld	r24, Z
    33ac:	91 81       	ldd	r25, Z+1	; 0x01
    33ae:	8d 93       	st	X+, r24
    33b0:	9c 93       	st	X, r25
    33b2:	fe 01       	movw	r30, r28
    33b4:	ed 59       	subi	r30, 0x9D	; 157
    33b6:	ff 4f       	sbci	r31, 0xFF	; 255
    33b8:	80 81       	ld	r24, Z
    33ba:	91 81       	ldd	r25, Z+1	; 0x01
    33bc:	01 97       	sbiw	r24, 0x01	; 1
    33be:	f1 f7       	brne	.-4      	; 0x33bc <LCD_Command+0x182>
    33c0:	fe 01       	movw	r30, r28
    33c2:	ed 59       	subi	r30, 0x9D	; 157
    33c4:	ff 4f       	sbci	r31, 0xFF	; 255
    33c6:	91 83       	std	Z+1, r25	; 0x01
    33c8:	80 83       	st	Z, r24
	_delay_ms(1);
	DIO_WritePin(E_LCD,low);
    33ca:	83 e0       	ldi	r24, 0x03	; 3
    33cc:	60 e0       	ldi	r22, 0x00	; 0
    33ce:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
    33d2:	fe 01       	movw	r30, r28
    33d4:	e1 5a       	subi	r30, 0xA1	; 161
    33d6:	ff 4f       	sbci	r31, 0xFF	; 255
    33d8:	80 e0       	ldi	r24, 0x00	; 0
    33da:	90 e0       	ldi	r25, 0x00	; 0
    33dc:	a0 e8       	ldi	r26, 0x80	; 128
    33de:	bf e3       	ldi	r27, 0x3F	; 63
    33e0:	80 83       	st	Z, r24
    33e2:	91 83       	std	Z+1, r25	; 0x01
    33e4:	a2 83       	std	Z+2, r26	; 0x02
    33e6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    33e8:	8e 01       	movw	r16, r28
    33ea:	05 5a       	subi	r16, 0xA5	; 165
    33ec:	1f 4f       	sbci	r17, 0xFF	; 255
    33ee:	fe 01       	movw	r30, r28
    33f0:	e1 5a       	subi	r30, 0xA1	; 161
    33f2:	ff 4f       	sbci	r31, 0xFF	; 255
    33f4:	60 81       	ld	r22, Z
    33f6:	71 81       	ldd	r23, Z+1	; 0x01
    33f8:	82 81       	ldd	r24, Z+2	; 0x02
    33fa:	93 81       	ldd	r25, Z+3	; 0x03
    33fc:	20 e0       	ldi	r18, 0x00	; 0
    33fe:	30 e0       	ldi	r19, 0x00	; 0
    3400:	4a ef       	ldi	r20, 0xFA	; 250
    3402:	54 e4       	ldi	r21, 0x44	; 68
    3404:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3408:	dc 01       	movw	r26, r24
    340a:	cb 01       	movw	r24, r22
    340c:	f8 01       	movw	r30, r16
    340e:	80 83       	st	Z, r24
    3410:	91 83       	std	Z+1, r25	; 0x01
    3412:	a2 83       	std	Z+2, r26	; 0x02
    3414:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3416:	fe 01       	movw	r30, r28
    3418:	e5 5a       	subi	r30, 0xA5	; 165
    341a:	ff 4f       	sbci	r31, 0xFF	; 255
    341c:	60 81       	ld	r22, Z
    341e:	71 81       	ldd	r23, Z+1	; 0x01
    3420:	82 81       	ldd	r24, Z+2	; 0x02
    3422:	93 81       	ldd	r25, Z+3	; 0x03
    3424:	20 e0       	ldi	r18, 0x00	; 0
    3426:	30 e0       	ldi	r19, 0x00	; 0
    3428:	40 e8       	ldi	r20, 0x80	; 128
    342a:	5f e3       	ldi	r21, 0x3F	; 63
    342c:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
    3430:	88 23       	and	r24, r24
    3432:	44 f4       	brge	.+16     	; 0x3444 <LCD_Command+0x20a>
		__ticks = 1;
    3434:	fe 01       	movw	r30, r28
    3436:	e7 5a       	subi	r30, 0xA7	; 167
    3438:	ff 4f       	sbci	r31, 0xFF	; 255
    343a:	81 e0       	ldi	r24, 0x01	; 1
    343c:	90 e0       	ldi	r25, 0x00	; 0
    343e:	91 83       	std	Z+1, r25	; 0x01
    3440:	80 83       	st	Z, r24
    3442:	64 c0       	rjmp	.+200    	; 0x350c <LCD_Command+0x2d2>
	else if (__tmp > 65535)
    3444:	fe 01       	movw	r30, r28
    3446:	e5 5a       	subi	r30, 0xA5	; 165
    3448:	ff 4f       	sbci	r31, 0xFF	; 255
    344a:	60 81       	ld	r22, Z
    344c:	71 81       	ldd	r23, Z+1	; 0x01
    344e:	82 81       	ldd	r24, Z+2	; 0x02
    3450:	93 81       	ldd	r25, Z+3	; 0x03
    3452:	20 e0       	ldi	r18, 0x00	; 0
    3454:	3f ef       	ldi	r19, 0xFF	; 255
    3456:	4f e7       	ldi	r20, 0x7F	; 127
    3458:	57 e4       	ldi	r21, 0x47	; 71
    345a:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__gtsf2>
    345e:	18 16       	cp	r1, r24
    3460:	0c f0       	brlt	.+2      	; 0x3464 <LCD_Command+0x22a>
    3462:	43 c0       	rjmp	.+134    	; 0x34ea <LCD_Command+0x2b0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3464:	fe 01       	movw	r30, r28
    3466:	e1 5a       	subi	r30, 0xA1	; 161
    3468:	ff 4f       	sbci	r31, 0xFF	; 255
    346a:	60 81       	ld	r22, Z
    346c:	71 81       	ldd	r23, Z+1	; 0x01
    346e:	82 81       	ldd	r24, Z+2	; 0x02
    3470:	93 81       	ldd	r25, Z+3	; 0x03
    3472:	20 e0       	ldi	r18, 0x00	; 0
    3474:	30 e0       	ldi	r19, 0x00	; 0
    3476:	40 e2       	ldi	r20, 0x20	; 32
    3478:	51 e4       	ldi	r21, 0x41	; 65
    347a:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    347e:	dc 01       	movw	r26, r24
    3480:	cb 01       	movw	r24, r22
    3482:	8e 01       	movw	r16, r28
    3484:	07 5a       	subi	r16, 0xA7	; 167
    3486:	1f 4f       	sbci	r17, 0xFF	; 255
    3488:	bc 01       	movw	r22, r24
    348a:	cd 01       	movw	r24, r26
    348c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3490:	dc 01       	movw	r26, r24
    3492:	cb 01       	movw	r24, r22
    3494:	f8 01       	movw	r30, r16
    3496:	91 83       	std	Z+1, r25	; 0x01
    3498:	80 83       	st	Z, r24
    349a:	1f c0       	rjmp	.+62     	; 0x34da <LCD_Command+0x2a0>
    349c:	fe 01       	movw	r30, r28
    349e:	e9 5a       	subi	r30, 0xA9	; 169
    34a0:	ff 4f       	sbci	r31, 0xFF	; 255
    34a2:	88 ec       	ldi	r24, 0xC8	; 200
    34a4:	90 e0       	ldi	r25, 0x00	; 0
    34a6:	91 83       	std	Z+1, r25	; 0x01
    34a8:	80 83       	st	Z, r24
    34aa:	fe 01       	movw	r30, r28
    34ac:	e9 5a       	subi	r30, 0xA9	; 169
    34ae:	ff 4f       	sbci	r31, 0xFF	; 255
    34b0:	80 81       	ld	r24, Z
    34b2:	91 81       	ldd	r25, Z+1	; 0x01
    34b4:	01 97       	sbiw	r24, 0x01	; 1
    34b6:	f1 f7       	brne	.-4      	; 0x34b4 <LCD_Command+0x27a>
    34b8:	fe 01       	movw	r30, r28
    34ba:	e9 5a       	subi	r30, 0xA9	; 169
    34bc:	ff 4f       	sbci	r31, 0xFF	; 255
    34be:	91 83       	std	Z+1, r25	; 0x01
    34c0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    34c2:	de 01       	movw	r26, r28
    34c4:	a7 5a       	subi	r26, 0xA7	; 167
    34c6:	bf 4f       	sbci	r27, 0xFF	; 255
    34c8:	fe 01       	movw	r30, r28
    34ca:	e7 5a       	subi	r30, 0xA7	; 167
    34cc:	ff 4f       	sbci	r31, 0xFF	; 255
    34ce:	80 81       	ld	r24, Z
    34d0:	91 81       	ldd	r25, Z+1	; 0x01
    34d2:	01 97       	sbiw	r24, 0x01	; 1
    34d4:	11 96       	adiw	r26, 0x01	; 1
    34d6:	9c 93       	st	X, r25
    34d8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    34da:	fe 01       	movw	r30, r28
    34dc:	e7 5a       	subi	r30, 0xA7	; 167
    34de:	ff 4f       	sbci	r31, 0xFF	; 255
    34e0:	80 81       	ld	r24, Z
    34e2:	91 81       	ldd	r25, Z+1	; 0x01
    34e4:	00 97       	sbiw	r24, 0x00	; 0
    34e6:	d1 f6       	brne	.-76     	; 0x349c <LCD_Command+0x262>
    34e8:	27 c0       	rjmp	.+78     	; 0x3538 <LCD_Command+0x2fe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    34ea:	8e 01       	movw	r16, r28
    34ec:	07 5a       	subi	r16, 0xA7	; 167
    34ee:	1f 4f       	sbci	r17, 0xFF	; 255
    34f0:	fe 01       	movw	r30, r28
    34f2:	e5 5a       	subi	r30, 0xA5	; 165
    34f4:	ff 4f       	sbci	r31, 0xFF	; 255
    34f6:	60 81       	ld	r22, Z
    34f8:	71 81       	ldd	r23, Z+1	; 0x01
    34fa:	82 81       	ldd	r24, Z+2	; 0x02
    34fc:	93 81       	ldd	r25, Z+3	; 0x03
    34fe:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3502:	dc 01       	movw	r26, r24
    3504:	cb 01       	movw	r24, r22
    3506:	f8 01       	movw	r30, r16
    3508:	91 83       	std	Z+1, r25	; 0x01
    350a:	80 83       	st	Z, r24
    350c:	de 01       	movw	r26, r28
    350e:	ab 5a       	subi	r26, 0xAB	; 171
    3510:	bf 4f       	sbci	r27, 0xFF	; 255
    3512:	fe 01       	movw	r30, r28
    3514:	e7 5a       	subi	r30, 0xA7	; 167
    3516:	ff 4f       	sbci	r31, 0xFF	; 255
    3518:	80 81       	ld	r24, Z
    351a:	91 81       	ldd	r25, Z+1	; 0x01
    351c:	8d 93       	st	X+, r24
    351e:	9c 93       	st	X, r25
    3520:	fe 01       	movw	r30, r28
    3522:	eb 5a       	subi	r30, 0xAB	; 171
    3524:	ff 4f       	sbci	r31, 0xFF	; 255
    3526:	80 81       	ld	r24, Z
    3528:	91 81       	ldd	r25, Z+1	; 0x01
    352a:	01 97       	sbiw	r24, 0x01	; 1
    352c:	f1 f7       	brne	.-4      	; 0x352a <LCD_Command+0x2f0>
    352e:	fe 01       	movw	r30, r28
    3530:	eb 5a       	subi	r30, 0xAB	; 171
    3532:	ff 4f       	sbci	r31, 0xFF	; 255
    3534:	91 83       	std	Z+1, r25	; 0x01
    3536:	80 83       	st	Z, r24
	_delay_ms(1);

	PORT_LCD=(PORT_LCD & 0x0f)|(u8Commandcopy & 0xf0);
    3538:	ab e3       	ldi	r26, 0x3B	; 59
    353a:	b0 e0       	ldi	r27, 0x00	; 0
    353c:	eb e3       	ldi	r30, 0x3B	; 59
    353e:	f0 e0       	ldi	r31, 0x00	; 0
    3540:	80 81       	ld	r24, Z
    3542:	98 2f       	mov	r25, r24
    3544:	9f 70       	andi	r25, 0x0F	; 15
    3546:	fe 01       	movw	r30, r28
    3548:	ef 58       	subi	r30, 0x8F	; 143
    354a:	ff 4f       	sbci	r31, 0xFF	; 255
    354c:	80 81       	ld	r24, Z
    354e:	80 7f       	andi	r24, 0xF0	; 240
    3550:	89 2b       	or	r24, r25
    3552:	8c 93       	st	X, r24
    3554:	fe 01       	movw	r30, r28
    3556:	ef 5a       	subi	r30, 0xAF	; 175
    3558:	ff 4f       	sbci	r31, 0xFF	; 255
    355a:	80 e0       	ldi	r24, 0x00	; 0
    355c:	90 e0       	ldi	r25, 0x00	; 0
    355e:	a0 e8       	ldi	r26, 0x80	; 128
    3560:	bf e3       	ldi	r27, 0x3F	; 63
    3562:	80 83       	st	Z, r24
    3564:	91 83       	std	Z+1, r25	; 0x01
    3566:	a2 83       	std	Z+2, r26	; 0x02
    3568:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    356a:	8e 01       	movw	r16, r28
    356c:	03 5b       	subi	r16, 0xB3	; 179
    356e:	1f 4f       	sbci	r17, 0xFF	; 255
    3570:	fe 01       	movw	r30, r28
    3572:	ef 5a       	subi	r30, 0xAF	; 175
    3574:	ff 4f       	sbci	r31, 0xFF	; 255
    3576:	60 81       	ld	r22, Z
    3578:	71 81       	ldd	r23, Z+1	; 0x01
    357a:	82 81       	ldd	r24, Z+2	; 0x02
    357c:	93 81       	ldd	r25, Z+3	; 0x03
    357e:	20 e0       	ldi	r18, 0x00	; 0
    3580:	30 e0       	ldi	r19, 0x00	; 0
    3582:	4a ef       	ldi	r20, 0xFA	; 250
    3584:	54 e4       	ldi	r21, 0x44	; 68
    3586:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    358a:	dc 01       	movw	r26, r24
    358c:	cb 01       	movw	r24, r22
    358e:	f8 01       	movw	r30, r16
    3590:	80 83       	st	Z, r24
    3592:	91 83       	std	Z+1, r25	; 0x01
    3594:	a2 83       	std	Z+2, r26	; 0x02
    3596:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3598:	fe 01       	movw	r30, r28
    359a:	e3 5b       	subi	r30, 0xB3	; 179
    359c:	ff 4f       	sbci	r31, 0xFF	; 255
    359e:	60 81       	ld	r22, Z
    35a0:	71 81       	ldd	r23, Z+1	; 0x01
    35a2:	82 81       	ldd	r24, Z+2	; 0x02
    35a4:	93 81       	ldd	r25, Z+3	; 0x03
    35a6:	20 e0       	ldi	r18, 0x00	; 0
    35a8:	30 e0       	ldi	r19, 0x00	; 0
    35aa:	40 e8       	ldi	r20, 0x80	; 128
    35ac:	5f e3       	ldi	r21, 0x3F	; 63
    35ae:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
    35b2:	88 23       	and	r24, r24
    35b4:	44 f4       	brge	.+16     	; 0x35c6 <LCD_Command+0x38c>
		__ticks = 1;
    35b6:	fe 01       	movw	r30, r28
    35b8:	e5 5b       	subi	r30, 0xB5	; 181
    35ba:	ff 4f       	sbci	r31, 0xFF	; 255
    35bc:	81 e0       	ldi	r24, 0x01	; 1
    35be:	90 e0       	ldi	r25, 0x00	; 0
    35c0:	91 83       	std	Z+1, r25	; 0x01
    35c2:	80 83       	st	Z, r24
    35c4:	64 c0       	rjmp	.+200    	; 0x368e <LCD_Command+0x454>
	else if (__tmp > 65535)
    35c6:	fe 01       	movw	r30, r28
    35c8:	e3 5b       	subi	r30, 0xB3	; 179
    35ca:	ff 4f       	sbci	r31, 0xFF	; 255
    35cc:	60 81       	ld	r22, Z
    35ce:	71 81       	ldd	r23, Z+1	; 0x01
    35d0:	82 81       	ldd	r24, Z+2	; 0x02
    35d2:	93 81       	ldd	r25, Z+3	; 0x03
    35d4:	20 e0       	ldi	r18, 0x00	; 0
    35d6:	3f ef       	ldi	r19, 0xFF	; 255
    35d8:	4f e7       	ldi	r20, 0x7F	; 127
    35da:	57 e4       	ldi	r21, 0x47	; 71
    35dc:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__gtsf2>
    35e0:	18 16       	cp	r1, r24
    35e2:	0c f0       	brlt	.+2      	; 0x35e6 <LCD_Command+0x3ac>
    35e4:	43 c0       	rjmp	.+134    	; 0x366c <LCD_Command+0x432>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    35e6:	fe 01       	movw	r30, r28
    35e8:	ef 5a       	subi	r30, 0xAF	; 175
    35ea:	ff 4f       	sbci	r31, 0xFF	; 255
    35ec:	60 81       	ld	r22, Z
    35ee:	71 81       	ldd	r23, Z+1	; 0x01
    35f0:	82 81       	ldd	r24, Z+2	; 0x02
    35f2:	93 81       	ldd	r25, Z+3	; 0x03
    35f4:	20 e0       	ldi	r18, 0x00	; 0
    35f6:	30 e0       	ldi	r19, 0x00	; 0
    35f8:	40 e2       	ldi	r20, 0x20	; 32
    35fa:	51 e4       	ldi	r21, 0x41	; 65
    35fc:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3600:	dc 01       	movw	r26, r24
    3602:	cb 01       	movw	r24, r22
    3604:	8e 01       	movw	r16, r28
    3606:	05 5b       	subi	r16, 0xB5	; 181
    3608:	1f 4f       	sbci	r17, 0xFF	; 255
    360a:	bc 01       	movw	r22, r24
    360c:	cd 01       	movw	r24, r26
    360e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3612:	dc 01       	movw	r26, r24
    3614:	cb 01       	movw	r24, r22
    3616:	f8 01       	movw	r30, r16
    3618:	91 83       	std	Z+1, r25	; 0x01
    361a:	80 83       	st	Z, r24
    361c:	1f c0       	rjmp	.+62     	; 0x365c <LCD_Command+0x422>
    361e:	fe 01       	movw	r30, r28
    3620:	e7 5b       	subi	r30, 0xB7	; 183
    3622:	ff 4f       	sbci	r31, 0xFF	; 255
    3624:	88 ec       	ldi	r24, 0xC8	; 200
    3626:	90 e0       	ldi	r25, 0x00	; 0
    3628:	91 83       	std	Z+1, r25	; 0x01
    362a:	80 83       	st	Z, r24
    362c:	fe 01       	movw	r30, r28
    362e:	e7 5b       	subi	r30, 0xB7	; 183
    3630:	ff 4f       	sbci	r31, 0xFF	; 255
    3632:	80 81       	ld	r24, Z
    3634:	91 81       	ldd	r25, Z+1	; 0x01
    3636:	01 97       	sbiw	r24, 0x01	; 1
    3638:	f1 f7       	brne	.-4      	; 0x3636 <LCD_Command+0x3fc>
    363a:	fe 01       	movw	r30, r28
    363c:	e7 5b       	subi	r30, 0xB7	; 183
    363e:	ff 4f       	sbci	r31, 0xFF	; 255
    3640:	91 83       	std	Z+1, r25	; 0x01
    3642:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3644:	de 01       	movw	r26, r28
    3646:	a5 5b       	subi	r26, 0xB5	; 181
    3648:	bf 4f       	sbci	r27, 0xFF	; 255
    364a:	fe 01       	movw	r30, r28
    364c:	e5 5b       	subi	r30, 0xB5	; 181
    364e:	ff 4f       	sbci	r31, 0xFF	; 255
    3650:	80 81       	ld	r24, Z
    3652:	91 81       	ldd	r25, Z+1	; 0x01
    3654:	01 97       	sbiw	r24, 0x01	; 1
    3656:	11 96       	adiw	r26, 0x01	; 1
    3658:	9c 93       	st	X, r25
    365a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    365c:	fe 01       	movw	r30, r28
    365e:	e5 5b       	subi	r30, 0xB5	; 181
    3660:	ff 4f       	sbci	r31, 0xFF	; 255
    3662:	80 81       	ld	r24, Z
    3664:	91 81       	ldd	r25, Z+1	; 0x01
    3666:	00 97       	sbiw	r24, 0x00	; 0
    3668:	d1 f6       	brne	.-76     	; 0x361e <LCD_Command+0x3e4>
    366a:	27 c0       	rjmp	.+78     	; 0x36ba <LCD_Command+0x480>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    366c:	8e 01       	movw	r16, r28
    366e:	05 5b       	subi	r16, 0xB5	; 181
    3670:	1f 4f       	sbci	r17, 0xFF	; 255
    3672:	fe 01       	movw	r30, r28
    3674:	e3 5b       	subi	r30, 0xB3	; 179
    3676:	ff 4f       	sbci	r31, 0xFF	; 255
    3678:	60 81       	ld	r22, Z
    367a:	71 81       	ldd	r23, Z+1	; 0x01
    367c:	82 81       	ldd	r24, Z+2	; 0x02
    367e:	93 81       	ldd	r25, Z+3	; 0x03
    3680:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3684:	dc 01       	movw	r26, r24
    3686:	cb 01       	movw	r24, r22
    3688:	f8 01       	movw	r30, r16
    368a:	91 83       	std	Z+1, r25	; 0x01
    368c:	80 83       	st	Z, r24
    368e:	de 01       	movw	r26, r28
    3690:	a9 5b       	subi	r26, 0xB9	; 185
    3692:	bf 4f       	sbci	r27, 0xFF	; 255
    3694:	fe 01       	movw	r30, r28
    3696:	e5 5b       	subi	r30, 0xB5	; 181
    3698:	ff 4f       	sbci	r31, 0xFF	; 255
    369a:	80 81       	ld	r24, Z
    369c:	91 81       	ldd	r25, Z+1	; 0x01
    369e:	8d 93       	st	X+, r24
    36a0:	9c 93       	st	X, r25
    36a2:	fe 01       	movw	r30, r28
    36a4:	e9 5b       	subi	r30, 0xB9	; 185
    36a6:	ff 4f       	sbci	r31, 0xFF	; 255
    36a8:	80 81       	ld	r24, Z
    36aa:	91 81       	ldd	r25, Z+1	; 0x01
    36ac:	01 97       	sbiw	r24, 0x01	; 1
    36ae:	f1 f7       	brne	.-4      	; 0x36ac <LCD_Command+0x472>
    36b0:	fe 01       	movw	r30, r28
    36b2:	e9 5b       	subi	r30, 0xB9	; 185
    36b4:	ff 4f       	sbci	r31, 0xFF	; 255
    36b6:	91 83       	std	Z+1, r25	; 0x01
    36b8:	80 83       	st	Z, r24
	_delay_ms(1);
	DIO_WritePin(E_LCD,low);
    36ba:	83 e0       	ldi	r24, 0x03	; 3
    36bc:	60 e0       	ldi	r22, 0x00	; 0
    36be:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
    36c2:	fe 01       	movw	r30, r28
    36c4:	ed 5b       	subi	r30, 0xBD	; 189
    36c6:	ff 4f       	sbci	r31, 0xFF	; 255
    36c8:	80 e0       	ldi	r24, 0x00	; 0
    36ca:	90 e0       	ldi	r25, 0x00	; 0
    36cc:	a0 e8       	ldi	r26, 0x80	; 128
    36ce:	bf e3       	ldi	r27, 0x3F	; 63
    36d0:	80 83       	st	Z, r24
    36d2:	91 83       	std	Z+1, r25	; 0x01
    36d4:	a2 83       	std	Z+2, r26	; 0x02
    36d6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    36d8:	8e 01       	movw	r16, r28
    36da:	01 5c       	subi	r16, 0xC1	; 193
    36dc:	1f 4f       	sbci	r17, 0xFF	; 255
    36de:	fe 01       	movw	r30, r28
    36e0:	ed 5b       	subi	r30, 0xBD	; 189
    36e2:	ff 4f       	sbci	r31, 0xFF	; 255
    36e4:	60 81       	ld	r22, Z
    36e6:	71 81       	ldd	r23, Z+1	; 0x01
    36e8:	82 81       	ldd	r24, Z+2	; 0x02
    36ea:	93 81       	ldd	r25, Z+3	; 0x03
    36ec:	20 e0       	ldi	r18, 0x00	; 0
    36ee:	30 e0       	ldi	r19, 0x00	; 0
    36f0:	4a ef       	ldi	r20, 0xFA	; 250
    36f2:	54 e4       	ldi	r21, 0x44	; 68
    36f4:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    36f8:	dc 01       	movw	r26, r24
    36fa:	cb 01       	movw	r24, r22
    36fc:	f8 01       	movw	r30, r16
    36fe:	80 83       	st	Z, r24
    3700:	91 83       	std	Z+1, r25	; 0x01
    3702:	a2 83       	std	Z+2, r26	; 0x02
    3704:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3706:	fe 01       	movw	r30, r28
    3708:	ff 96       	adiw	r30, 0x3f	; 63
    370a:	60 81       	ld	r22, Z
    370c:	71 81       	ldd	r23, Z+1	; 0x01
    370e:	82 81       	ldd	r24, Z+2	; 0x02
    3710:	93 81       	ldd	r25, Z+3	; 0x03
    3712:	20 e0       	ldi	r18, 0x00	; 0
    3714:	30 e0       	ldi	r19, 0x00	; 0
    3716:	40 e8       	ldi	r20, 0x80	; 128
    3718:	5f e3       	ldi	r21, 0x3F	; 63
    371a:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
    371e:	88 23       	and	r24, r24
    3720:	2c f4       	brge	.+10     	; 0x372c <LCD_Command+0x4f2>
		__ticks = 1;
    3722:	81 e0       	ldi	r24, 0x01	; 1
    3724:	90 e0       	ldi	r25, 0x00	; 0
    3726:	9e af       	std	Y+62, r25	; 0x3e
    3728:	8d af       	std	Y+61, r24	; 0x3d
    372a:	46 c0       	rjmp	.+140    	; 0x37b8 <LCD_Command+0x57e>
	else if (__tmp > 65535)
    372c:	fe 01       	movw	r30, r28
    372e:	ff 96       	adiw	r30, 0x3f	; 63
    3730:	60 81       	ld	r22, Z
    3732:	71 81       	ldd	r23, Z+1	; 0x01
    3734:	82 81       	ldd	r24, Z+2	; 0x02
    3736:	93 81       	ldd	r25, Z+3	; 0x03
    3738:	20 e0       	ldi	r18, 0x00	; 0
    373a:	3f ef       	ldi	r19, 0xFF	; 255
    373c:	4f e7       	ldi	r20, 0x7F	; 127
    373e:	57 e4       	ldi	r21, 0x47	; 71
    3740:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__gtsf2>
    3744:	18 16       	cp	r1, r24
    3746:	64 f5       	brge	.+88     	; 0x37a0 <LCD_Command+0x566>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3748:	fe 01       	movw	r30, r28
    374a:	ed 5b       	subi	r30, 0xBD	; 189
    374c:	ff 4f       	sbci	r31, 0xFF	; 255
    374e:	60 81       	ld	r22, Z
    3750:	71 81       	ldd	r23, Z+1	; 0x01
    3752:	82 81       	ldd	r24, Z+2	; 0x02
    3754:	93 81       	ldd	r25, Z+3	; 0x03
    3756:	20 e0       	ldi	r18, 0x00	; 0
    3758:	30 e0       	ldi	r19, 0x00	; 0
    375a:	40 e2       	ldi	r20, 0x20	; 32
    375c:	51 e4       	ldi	r21, 0x41	; 65
    375e:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3762:	dc 01       	movw	r26, r24
    3764:	cb 01       	movw	r24, r22
    3766:	bc 01       	movw	r22, r24
    3768:	cd 01       	movw	r24, r26
    376a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    376e:	dc 01       	movw	r26, r24
    3770:	cb 01       	movw	r24, r22
    3772:	9e af       	std	Y+62, r25	; 0x3e
    3774:	8d af       	std	Y+61, r24	; 0x3d
    3776:	0f c0       	rjmp	.+30     	; 0x3796 <LCD_Command+0x55c>
    3778:	88 ec       	ldi	r24, 0xC8	; 200
    377a:	90 e0       	ldi	r25, 0x00	; 0
    377c:	9c af       	std	Y+60, r25	; 0x3c
    377e:	8b af       	std	Y+59, r24	; 0x3b
    3780:	8b ad       	ldd	r24, Y+59	; 0x3b
    3782:	9c ad       	ldd	r25, Y+60	; 0x3c
    3784:	01 97       	sbiw	r24, 0x01	; 1
    3786:	f1 f7       	brne	.-4      	; 0x3784 <LCD_Command+0x54a>
    3788:	9c af       	std	Y+60, r25	; 0x3c
    378a:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    378c:	8d ad       	ldd	r24, Y+61	; 0x3d
    378e:	9e ad       	ldd	r25, Y+62	; 0x3e
    3790:	01 97       	sbiw	r24, 0x01	; 1
    3792:	9e af       	std	Y+62, r25	; 0x3e
    3794:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3796:	8d ad       	ldd	r24, Y+61	; 0x3d
    3798:	9e ad       	ldd	r25, Y+62	; 0x3e
    379a:	00 97       	sbiw	r24, 0x00	; 0
    379c:	69 f7       	brne	.-38     	; 0x3778 <LCD_Command+0x53e>
    379e:	16 c0       	rjmp	.+44     	; 0x37cc <LCD_Command+0x592>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    37a0:	fe 01       	movw	r30, r28
    37a2:	ff 96       	adiw	r30, 0x3f	; 63
    37a4:	60 81       	ld	r22, Z
    37a6:	71 81       	ldd	r23, Z+1	; 0x01
    37a8:	82 81       	ldd	r24, Z+2	; 0x02
    37aa:	93 81       	ldd	r25, Z+3	; 0x03
    37ac:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    37b0:	dc 01       	movw	r26, r24
    37b2:	cb 01       	movw	r24, r22
    37b4:	9e af       	std	Y+62, r25	; 0x3e
    37b6:	8d af       	std	Y+61, r24	; 0x3d
    37b8:	8d ad       	ldd	r24, Y+61	; 0x3d
    37ba:	9e ad       	ldd	r25, Y+62	; 0x3e
    37bc:	9a af       	std	Y+58, r25	; 0x3a
    37be:	89 af       	std	Y+57, r24	; 0x39
    37c0:	89 ad       	ldd	r24, Y+57	; 0x39
    37c2:	9a ad       	ldd	r25, Y+58	; 0x3a
    37c4:	01 97       	sbiw	r24, 0x01	; 1
    37c6:	f1 f7       	brne	.-4      	; 0x37c4 <LCD_Command+0x58a>
    37c8:	9a af       	std	Y+58, r25	; 0x3a
    37ca:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(1);
	DIO_WritePin(E_LCD,high);
    37cc:	83 e0       	ldi	r24, 0x03	; 3
    37ce:	61 e0       	ldi	r22, 0x01	; 1
    37d0:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
    37d4:	80 e0       	ldi	r24, 0x00	; 0
    37d6:	90 e0       	ldi	r25, 0x00	; 0
    37d8:	a0 e8       	ldi	r26, 0x80	; 128
    37da:	bf e3       	ldi	r27, 0x3F	; 63
    37dc:	8d ab       	std	Y+53, r24	; 0x35
    37de:	9e ab       	std	Y+54, r25	; 0x36
    37e0:	af ab       	std	Y+55, r26	; 0x37
    37e2:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    37e4:	6d a9       	ldd	r22, Y+53	; 0x35
    37e6:	7e a9       	ldd	r23, Y+54	; 0x36
    37e8:	8f a9       	ldd	r24, Y+55	; 0x37
    37ea:	98 ad       	ldd	r25, Y+56	; 0x38
    37ec:	20 e0       	ldi	r18, 0x00	; 0
    37ee:	30 e0       	ldi	r19, 0x00	; 0
    37f0:	4a ef       	ldi	r20, 0xFA	; 250
    37f2:	54 e4       	ldi	r21, 0x44	; 68
    37f4:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    37f8:	dc 01       	movw	r26, r24
    37fa:	cb 01       	movw	r24, r22
    37fc:	89 ab       	std	Y+49, r24	; 0x31
    37fe:	9a ab       	std	Y+50, r25	; 0x32
    3800:	ab ab       	std	Y+51, r26	; 0x33
    3802:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3804:	69 a9       	ldd	r22, Y+49	; 0x31
    3806:	7a a9       	ldd	r23, Y+50	; 0x32
    3808:	8b a9       	ldd	r24, Y+51	; 0x33
    380a:	9c a9       	ldd	r25, Y+52	; 0x34
    380c:	20 e0       	ldi	r18, 0x00	; 0
    380e:	30 e0       	ldi	r19, 0x00	; 0
    3810:	40 e8       	ldi	r20, 0x80	; 128
    3812:	5f e3       	ldi	r21, 0x3F	; 63
    3814:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
    3818:	88 23       	and	r24, r24
    381a:	2c f4       	brge	.+10     	; 0x3826 <LCD_Command+0x5ec>
		__ticks = 1;
    381c:	81 e0       	ldi	r24, 0x01	; 1
    381e:	90 e0       	ldi	r25, 0x00	; 0
    3820:	98 ab       	std	Y+48, r25	; 0x30
    3822:	8f a7       	std	Y+47, r24	; 0x2f
    3824:	3f c0       	rjmp	.+126    	; 0x38a4 <LCD_Command+0x66a>
	else if (__tmp > 65535)
    3826:	69 a9       	ldd	r22, Y+49	; 0x31
    3828:	7a a9       	ldd	r23, Y+50	; 0x32
    382a:	8b a9       	ldd	r24, Y+51	; 0x33
    382c:	9c a9       	ldd	r25, Y+52	; 0x34
    382e:	20 e0       	ldi	r18, 0x00	; 0
    3830:	3f ef       	ldi	r19, 0xFF	; 255
    3832:	4f e7       	ldi	r20, 0x7F	; 127
    3834:	57 e4       	ldi	r21, 0x47	; 71
    3836:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__gtsf2>
    383a:	18 16       	cp	r1, r24
    383c:	4c f5       	brge	.+82     	; 0x3890 <LCD_Command+0x656>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    383e:	6d a9       	ldd	r22, Y+53	; 0x35
    3840:	7e a9       	ldd	r23, Y+54	; 0x36
    3842:	8f a9       	ldd	r24, Y+55	; 0x37
    3844:	98 ad       	ldd	r25, Y+56	; 0x38
    3846:	20 e0       	ldi	r18, 0x00	; 0
    3848:	30 e0       	ldi	r19, 0x00	; 0
    384a:	40 e2       	ldi	r20, 0x20	; 32
    384c:	51 e4       	ldi	r21, 0x41	; 65
    384e:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3852:	dc 01       	movw	r26, r24
    3854:	cb 01       	movw	r24, r22
    3856:	bc 01       	movw	r22, r24
    3858:	cd 01       	movw	r24, r26
    385a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    385e:	dc 01       	movw	r26, r24
    3860:	cb 01       	movw	r24, r22
    3862:	98 ab       	std	Y+48, r25	; 0x30
    3864:	8f a7       	std	Y+47, r24	; 0x2f
    3866:	0f c0       	rjmp	.+30     	; 0x3886 <LCD_Command+0x64c>
    3868:	88 ec       	ldi	r24, 0xC8	; 200
    386a:	90 e0       	ldi	r25, 0x00	; 0
    386c:	9e a7       	std	Y+46, r25	; 0x2e
    386e:	8d a7       	std	Y+45, r24	; 0x2d
    3870:	8d a5       	ldd	r24, Y+45	; 0x2d
    3872:	9e a5       	ldd	r25, Y+46	; 0x2e
    3874:	01 97       	sbiw	r24, 0x01	; 1
    3876:	f1 f7       	brne	.-4      	; 0x3874 <LCD_Command+0x63a>
    3878:	9e a7       	std	Y+46, r25	; 0x2e
    387a:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    387c:	8f a5       	ldd	r24, Y+47	; 0x2f
    387e:	98 a9       	ldd	r25, Y+48	; 0x30
    3880:	01 97       	sbiw	r24, 0x01	; 1
    3882:	98 ab       	std	Y+48, r25	; 0x30
    3884:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3886:	8f a5       	ldd	r24, Y+47	; 0x2f
    3888:	98 a9       	ldd	r25, Y+48	; 0x30
    388a:	00 97       	sbiw	r24, 0x00	; 0
    388c:	69 f7       	brne	.-38     	; 0x3868 <LCD_Command+0x62e>
    388e:	14 c0       	rjmp	.+40     	; 0x38b8 <LCD_Command+0x67e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3890:	69 a9       	ldd	r22, Y+49	; 0x31
    3892:	7a a9       	ldd	r23, Y+50	; 0x32
    3894:	8b a9       	ldd	r24, Y+51	; 0x33
    3896:	9c a9       	ldd	r25, Y+52	; 0x34
    3898:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    389c:	dc 01       	movw	r26, r24
    389e:	cb 01       	movw	r24, r22
    38a0:	98 ab       	std	Y+48, r25	; 0x30
    38a2:	8f a7       	std	Y+47, r24	; 0x2f
    38a4:	8f a5       	ldd	r24, Y+47	; 0x2f
    38a6:	98 a9       	ldd	r25, Y+48	; 0x30
    38a8:	9c a7       	std	Y+44, r25	; 0x2c
    38aa:	8b a7       	std	Y+43, r24	; 0x2b
    38ac:	8b a5       	ldd	r24, Y+43	; 0x2b
    38ae:	9c a5       	ldd	r25, Y+44	; 0x2c
    38b0:	01 97       	sbiw	r24, 0x01	; 1
    38b2:	f1 f7       	brne	.-4      	; 0x38b0 <LCD_Command+0x676>
    38b4:	9c a7       	std	Y+44, r25	; 0x2c
    38b6:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);


	PORT_LCD=(PORT_LCD & 0x0f)|((u8Commandcopy & 0x0f) <<4 );
    38b8:	ab e3       	ldi	r26, 0x3B	; 59
    38ba:	b0 e0       	ldi	r27, 0x00	; 0
    38bc:	eb e3       	ldi	r30, 0x3B	; 59
    38be:	f0 e0       	ldi	r31, 0x00	; 0
    38c0:	80 81       	ld	r24, Z
    38c2:	28 2f       	mov	r18, r24
    38c4:	2f 70       	andi	r18, 0x0F	; 15
    38c6:	fe 01       	movw	r30, r28
    38c8:	ef 58       	subi	r30, 0x8F	; 143
    38ca:	ff 4f       	sbci	r31, 0xFF	; 255
    38cc:	80 81       	ld	r24, Z
    38ce:	88 2f       	mov	r24, r24
    38d0:	90 e0       	ldi	r25, 0x00	; 0
    38d2:	82 95       	swap	r24
    38d4:	92 95       	swap	r25
    38d6:	90 7f       	andi	r25, 0xF0	; 240
    38d8:	98 27       	eor	r25, r24
    38da:	80 7f       	andi	r24, 0xF0	; 240
    38dc:	98 27       	eor	r25, r24
    38de:	82 2b       	or	r24, r18
    38e0:	8c 93       	st	X, r24
    38e2:	80 e0       	ldi	r24, 0x00	; 0
    38e4:	90 e0       	ldi	r25, 0x00	; 0
    38e6:	a0 e8       	ldi	r26, 0x80	; 128
    38e8:	bf e3       	ldi	r27, 0x3F	; 63
    38ea:	8f a3       	std	Y+39, r24	; 0x27
    38ec:	98 a7       	std	Y+40, r25	; 0x28
    38ee:	a9 a7       	std	Y+41, r26	; 0x29
    38f0:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    38f2:	6f a1       	ldd	r22, Y+39	; 0x27
    38f4:	78 a5       	ldd	r23, Y+40	; 0x28
    38f6:	89 a5       	ldd	r24, Y+41	; 0x29
    38f8:	9a a5       	ldd	r25, Y+42	; 0x2a
    38fa:	20 e0       	ldi	r18, 0x00	; 0
    38fc:	30 e0       	ldi	r19, 0x00	; 0
    38fe:	4a ef       	ldi	r20, 0xFA	; 250
    3900:	54 e4       	ldi	r21, 0x44	; 68
    3902:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3906:	dc 01       	movw	r26, r24
    3908:	cb 01       	movw	r24, r22
    390a:	8b a3       	std	Y+35, r24	; 0x23
    390c:	9c a3       	std	Y+36, r25	; 0x24
    390e:	ad a3       	std	Y+37, r26	; 0x25
    3910:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    3912:	6b a1       	ldd	r22, Y+35	; 0x23
    3914:	7c a1       	ldd	r23, Y+36	; 0x24
    3916:	8d a1       	ldd	r24, Y+37	; 0x25
    3918:	9e a1       	ldd	r25, Y+38	; 0x26
    391a:	20 e0       	ldi	r18, 0x00	; 0
    391c:	30 e0       	ldi	r19, 0x00	; 0
    391e:	40 e8       	ldi	r20, 0x80	; 128
    3920:	5f e3       	ldi	r21, 0x3F	; 63
    3922:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
    3926:	88 23       	and	r24, r24
    3928:	2c f4       	brge	.+10     	; 0x3934 <LCD_Command+0x6fa>
		__ticks = 1;
    392a:	81 e0       	ldi	r24, 0x01	; 1
    392c:	90 e0       	ldi	r25, 0x00	; 0
    392e:	9a a3       	std	Y+34, r25	; 0x22
    3930:	89 a3       	std	Y+33, r24	; 0x21
    3932:	3f c0       	rjmp	.+126    	; 0x39b2 <LCD_Command+0x778>
	else if (__tmp > 65535)
    3934:	6b a1       	ldd	r22, Y+35	; 0x23
    3936:	7c a1       	ldd	r23, Y+36	; 0x24
    3938:	8d a1       	ldd	r24, Y+37	; 0x25
    393a:	9e a1       	ldd	r25, Y+38	; 0x26
    393c:	20 e0       	ldi	r18, 0x00	; 0
    393e:	3f ef       	ldi	r19, 0xFF	; 255
    3940:	4f e7       	ldi	r20, 0x7F	; 127
    3942:	57 e4       	ldi	r21, 0x47	; 71
    3944:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__gtsf2>
    3948:	18 16       	cp	r1, r24
    394a:	4c f5       	brge	.+82     	; 0x399e <LCD_Command+0x764>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    394c:	6f a1       	ldd	r22, Y+39	; 0x27
    394e:	78 a5       	ldd	r23, Y+40	; 0x28
    3950:	89 a5       	ldd	r24, Y+41	; 0x29
    3952:	9a a5       	ldd	r25, Y+42	; 0x2a
    3954:	20 e0       	ldi	r18, 0x00	; 0
    3956:	30 e0       	ldi	r19, 0x00	; 0
    3958:	40 e2       	ldi	r20, 0x20	; 32
    395a:	51 e4       	ldi	r21, 0x41	; 65
    395c:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3960:	dc 01       	movw	r26, r24
    3962:	cb 01       	movw	r24, r22
    3964:	bc 01       	movw	r22, r24
    3966:	cd 01       	movw	r24, r26
    3968:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    396c:	dc 01       	movw	r26, r24
    396e:	cb 01       	movw	r24, r22
    3970:	9a a3       	std	Y+34, r25	; 0x22
    3972:	89 a3       	std	Y+33, r24	; 0x21
    3974:	0f c0       	rjmp	.+30     	; 0x3994 <LCD_Command+0x75a>
    3976:	88 ec       	ldi	r24, 0xC8	; 200
    3978:	90 e0       	ldi	r25, 0x00	; 0
    397a:	98 a3       	std	Y+32, r25	; 0x20
    397c:	8f 8f       	std	Y+31, r24	; 0x1f
    397e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3980:	98 a1       	ldd	r25, Y+32	; 0x20
    3982:	01 97       	sbiw	r24, 0x01	; 1
    3984:	f1 f7       	brne	.-4      	; 0x3982 <LCD_Command+0x748>
    3986:	98 a3       	std	Y+32, r25	; 0x20
    3988:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    398a:	89 a1       	ldd	r24, Y+33	; 0x21
    398c:	9a a1       	ldd	r25, Y+34	; 0x22
    398e:	01 97       	sbiw	r24, 0x01	; 1
    3990:	9a a3       	std	Y+34, r25	; 0x22
    3992:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3994:	89 a1       	ldd	r24, Y+33	; 0x21
    3996:	9a a1       	ldd	r25, Y+34	; 0x22
    3998:	00 97       	sbiw	r24, 0x00	; 0
    399a:	69 f7       	brne	.-38     	; 0x3976 <LCD_Command+0x73c>
    399c:	14 c0       	rjmp	.+40     	; 0x39c6 <LCD_Command+0x78c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    399e:	6b a1       	ldd	r22, Y+35	; 0x23
    39a0:	7c a1       	ldd	r23, Y+36	; 0x24
    39a2:	8d a1       	ldd	r24, Y+37	; 0x25
    39a4:	9e a1       	ldd	r25, Y+38	; 0x26
    39a6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    39aa:	dc 01       	movw	r26, r24
    39ac:	cb 01       	movw	r24, r22
    39ae:	9a a3       	std	Y+34, r25	; 0x22
    39b0:	89 a3       	std	Y+33, r24	; 0x21
    39b2:	89 a1       	ldd	r24, Y+33	; 0x21
    39b4:	9a a1       	ldd	r25, Y+34	; 0x22
    39b6:	9e 8f       	std	Y+30, r25	; 0x1e
    39b8:	8d 8f       	std	Y+29, r24	; 0x1d
    39ba:	8d 8d       	ldd	r24, Y+29	; 0x1d
    39bc:	9e 8d       	ldd	r25, Y+30	; 0x1e
    39be:	01 97       	sbiw	r24, 0x01	; 1
    39c0:	f1 f7       	brne	.-4      	; 0x39be <LCD_Command+0x784>
    39c2:	9e 8f       	std	Y+30, r25	; 0x1e
    39c4:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	DIO_WritePin(E_LCD,low);
    39c6:	83 e0       	ldi	r24, 0x03	; 3
    39c8:	60 e0       	ldi	r22, 0x00	; 0
    39ca:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
    39ce:	80 e0       	ldi	r24, 0x00	; 0
    39d0:	90 e0       	ldi	r25, 0x00	; 0
    39d2:	a0 e8       	ldi	r26, 0x80	; 128
    39d4:	bf e3       	ldi	r27, 0x3F	; 63
    39d6:	89 8f       	std	Y+25, r24	; 0x19
    39d8:	9a 8f       	std	Y+26, r25	; 0x1a
    39da:	ab 8f       	std	Y+27, r26	; 0x1b
    39dc:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    39de:	69 8d       	ldd	r22, Y+25	; 0x19
    39e0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    39e2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    39e4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    39e6:	20 e0       	ldi	r18, 0x00	; 0
    39e8:	30 e0       	ldi	r19, 0x00	; 0
    39ea:	4a ef       	ldi	r20, 0xFA	; 250
    39ec:	54 e4       	ldi	r21, 0x44	; 68
    39ee:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    39f2:	dc 01       	movw	r26, r24
    39f4:	cb 01       	movw	r24, r22
    39f6:	8d 8b       	std	Y+21, r24	; 0x15
    39f8:	9e 8b       	std	Y+22, r25	; 0x16
    39fa:	af 8b       	std	Y+23, r26	; 0x17
    39fc:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    39fe:	6d 89       	ldd	r22, Y+21	; 0x15
    3a00:	7e 89       	ldd	r23, Y+22	; 0x16
    3a02:	8f 89       	ldd	r24, Y+23	; 0x17
    3a04:	98 8d       	ldd	r25, Y+24	; 0x18
    3a06:	20 e0       	ldi	r18, 0x00	; 0
    3a08:	30 e0       	ldi	r19, 0x00	; 0
    3a0a:	40 e8       	ldi	r20, 0x80	; 128
    3a0c:	5f e3       	ldi	r21, 0x3F	; 63
    3a0e:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
    3a12:	88 23       	and	r24, r24
    3a14:	2c f4       	brge	.+10     	; 0x3a20 <LCD_Command+0x7e6>
		__ticks = 1;
    3a16:	81 e0       	ldi	r24, 0x01	; 1
    3a18:	90 e0       	ldi	r25, 0x00	; 0
    3a1a:	9c 8b       	std	Y+20, r25	; 0x14
    3a1c:	8b 8b       	std	Y+19, r24	; 0x13
    3a1e:	3f c0       	rjmp	.+126    	; 0x3a9e <LCD_Command+0x864>
	else if (__tmp > 65535)
    3a20:	6d 89       	ldd	r22, Y+21	; 0x15
    3a22:	7e 89       	ldd	r23, Y+22	; 0x16
    3a24:	8f 89       	ldd	r24, Y+23	; 0x17
    3a26:	98 8d       	ldd	r25, Y+24	; 0x18
    3a28:	20 e0       	ldi	r18, 0x00	; 0
    3a2a:	3f ef       	ldi	r19, 0xFF	; 255
    3a2c:	4f e7       	ldi	r20, 0x7F	; 127
    3a2e:	57 e4       	ldi	r21, 0x47	; 71
    3a30:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__gtsf2>
    3a34:	18 16       	cp	r1, r24
    3a36:	4c f5       	brge	.+82     	; 0x3a8a <LCD_Command+0x850>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3a38:	69 8d       	ldd	r22, Y+25	; 0x19
    3a3a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3a3c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3a3e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3a40:	20 e0       	ldi	r18, 0x00	; 0
    3a42:	30 e0       	ldi	r19, 0x00	; 0
    3a44:	40 e2       	ldi	r20, 0x20	; 32
    3a46:	51 e4       	ldi	r21, 0x41	; 65
    3a48:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3a4c:	dc 01       	movw	r26, r24
    3a4e:	cb 01       	movw	r24, r22
    3a50:	bc 01       	movw	r22, r24
    3a52:	cd 01       	movw	r24, r26
    3a54:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3a58:	dc 01       	movw	r26, r24
    3a5a:	cb 01       	movw	r24, r22
    3a5c:	9c 8b       	std	Y+20, r25	; 0x14
    3a5e:	8b 8b       	std	Y+19, r24	; 0x13
    3a60:	0f c0       	rjmp	.+30     	; 0x3a80 <LCD_Command+0x846>
    3a62:	88 ec       	ldi	r24, 0xC8	; 200
    3a64:	90 e0       	ldi	r25, 0x00	; 0
    3a66:	9a 8b       	std	Y+18, r25	; 0x12
    3a68:	89 8b       	std	Y+17, r24	; 0x11
    3a6a:	89 89       	ldd	r24, Y+17	; 0x11
    3a6c:	9a 89       	ldd	r25, Y+18	; 0x12
    3a6e:	01 97       	sbiw	r24, 0x01	; 1
    3a70:	f1 f7       	brne	.-4      	; 0x3a6e <LCD_Command+0x834>
    3a72:	9a 8b       	std	Y+18, r25	; 0x12
    3a74:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3a76:	8b 89       	ldd	r24, Y+19	; 0x13
    3a78:	9c 89       	ldd	r25, Y+20	; 0x14
    3a7a:	01 97       	sbiw	r24, 0x01	; 1
    3a7c:	9c 8b       	std	Y+20, r25	; 0x14
    3a7e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3a80:	8b 89       	ldd	r24, Y+19	; 0x13
    3a82:	9c 89       	ldd	r25, Y+20	; 0x14
    3a84:	00 97       	sbiw	r24, 0x00	; 0
    3a86:	69 f7       	brne	.-38     	; 0x3a62 <LCD_Command+0x828>
    3a88:	14 c0       	rjmp	.+40     	; 0x3ab2 <LCD_Command+0x878>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3a8a:	6d 89       	ldd	r22, Y+21	; 0x15
    3a8c:	7e 89       	ldd	r23, Y+22	; 0x16
    3a8e:	8f 89       	ldd	r24, Y+23	; 0x17
    3a90:	98 8d       	ldd	r25, Y+24	; 0x18
    3a92:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3a96:	dc 01       	movw	r26, r24
    3a98:	cb 01       	movw	r24, r22
    3a9a:	9c 8b       	std	Y+20, r25	; 0x14
    3a9c:	8b 8b       	std	Y+19, r24	; 0x13
    3a9e:	8b 89       	ldd	r24, Y+19	; 0x13
    3aa0:	9c 89       	ldd	r25, Y+20	; 0x14
    3aa2:	98 8b       	std	Y+16, r25	; 0x10
    3aa4:	8f 87       	std	Y+15, r24	; 0x0f
    3aa6:	8f 85       	ldd	r24, Y+15	; 0x0f
    3aa8:	98 89       	ldd	r25, Y+16	; 0x10
    3aaa:	01 97       	sbiw	r24, 0x01	; 1
    3aac:	f1 f7       	brne	.-4      	; 0x3aaa <LCD_Command+0x870>
    3aae:	98 8b       	std	Y+16, r25	; 0x10
    3ab0:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_WritePin(E_LCD,high);
    3ab2:	83 e0       	ldi	r24, 0x03	; 3
    3ab4:	61 e0       	ldi	r22, 0x01	; 1
    3ab6:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
    3aba:	80 e0       	ldi	r24, 0x00	; 0
    3abc:	90 e0       	ldi	r25, 0x00	; 0
    3abe:	a0 e7       	ldi	r26, 0x70	; 112
    3ac0:	b1 e4       	ldi	r27, 0x41	; 65
    3ac2:	8b 87       	std	Y+11, r24	; 0x0b
    3ac4:	9c 87       	std	Y+12, r25	; 0x0c
    3ac6:	ad 87       	std	Y+13, r26	; 0x0d
    3ac8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3aca:	6b 85       	ldd	r22, Y+11	; 0x0b
    3acc:	7c 85       	ldd	r23, Y+12	; 0x0c
    3ace:	8d 85       	ldd	r24, Y+13	; 0x0d
    3ad0:	9e 85       	ldd	r25, Y+14	; 0x0e
    3ad2:	20 e0       	ldi	r18, 0x00	; 0
    3ad4:	30 e0       	ldi	r19, 0x00	; 0
    3ad6:	4a ef       	ldi	r20, 0xFA	; 250
    3ad8:	54 e4       	ldi	r21, 0x44	; 68
    3ada:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3ade:	dc 01       	movw	r26, r24
    3ae0:	cb 01       	movw	r24, r22
    3ae2:	8f 83       	std	Y+7, r24	; 0x07
    3ae4:	98 87       	std	Y+8, r25	; 0x08
    3ae6:	a9 87       	std	Y+9, r26	; 0x09
    3ae8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3aea:	6f 81       	ldd	r22, Y+7	; 0x07
    3aec:	78 85       	ldd	r23, Y+8	; 0x08
    3aee:	89 85       	ldd	r24, Y+9	; 0x09
    3af0:	9a 85       	ldd	r25, Y+10	; 0x0a
    3af2:	20 e0       	ldi	r18, 0x00	; 0
    3af4:	30 e0       	ldi	r19, 0x00	; 0
    3af6:	40 e8       	ldi	r20, 0x80	; 128
    3af8:	5f e3       	ldi	r21, 0x3F	; 63
    3afa:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
    3afe:	88 23       	and	r24, r24
    3b00:	2c f4       	brge	.+10     	; 0x3b0c <LCD_Command+0x8d2>
		__ticks = 1;
    3b02:	81 e0       	ldi	r24, 0x01	; 1
    3b04:	90 e0       	ldi	r25, 0x00	; 0
    3b06:	9e 83       	std	Y+6, r25	; 0x06
    3b08:	8d 83       	std	Y+5, r24	; 0x05
    3b0a:	3f c0       	rjmp	.+126    	; 0x3b8a <LCD_Command+0x950>
	else if (__tmp > 65535)
    3b0c:	6f 81       	ldd	r22, Y+7	; 0x07
    3b0e:	78 85       	ldd	r23, Y+8	; 0x08
    3b10:	89 85       	ldd	r24, Y+9	; 0x09
    3b12:	9a 85       	ldd	r25, Y+10	; 0x0a
    3b14:	20 e0       	ldi	r18, 0x00	; 0
    3b16:	3f ef       	ldi	r19, 0xFF	; 255
    3b18:	4f e7       	ldi	r20, 0x7F	; 127
    3b1a:	57 e4       	ldi	r21, 0x47	; 71
    3b1c:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__gtsf2>
    3b20:	18 16       	cp	r1, r24
    3b22:	4c f5       	brge	.+82     	; 0x3b76 <LCD_Command+0x93c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3b24:	6b 85       	ldd	r22, Y+11	; 0x0b
    3b26:	7c 85       	ldd	r23, Y+12	; 0x0c
    3b28:	8d 85       	ldd	r24, Y+13	; 0x0d
    3b2a:	9e 85       	ldd	r25, Y+14	; 0x0e
    3b2c:	20 e0       	ldi	r18, 0x00	; 0
    3b2e:	30 e0       	ldi	r19, 0x00	; 0
    3b30:	40 e2       	ldi	r20, 0x20	; 32
    3b32:	51 e4       	ldi	r21, 0x41	; 65
    3b34:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3b38:	dc 01       	movw	r26, r24
    3b3a:	cb 01       	movw	r24, r22
    3b3c:	bc 01       	movw	r22, r24
    3b3e:	cd 01       	movw	r24, r26
    3b40:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3b44:	dc 01       	movw	r26, r24
    3b46:	cb 01       	movw	r24, r22
    3b48:	9e 83       	std	Y+6, r25	; 0x06
    3b4a:	8d 83       	std	Y+5, r24	; 0x05
    3b4c:	0f c0       	rjmp	.+30     	; 0x3b6c <LCD_Command+0x932>
    3b4e:	88 ec       	ldi	r24, 0xC8	; 200
    3b50:	90 e0       	ldi	r25, 0x00	; 0
    3b52:	9c 83       	std	Y+4, r25	; 0x04
    3b54:	8b 83       	std	Y+3, r24	; 0x03
    3b56:	8b 81       	ldd	r24, Y+3	; 0x03
    3b58:	9c 81       	ldd	r25, Y+4	; 0x04
    3b5a:	01 97       	sbiw	r24, 0x01	; 1
    3b5c:	f1 f7       	brne	.-4      	; 0x3b5a <LCD_Command+0x920>
    3b5e:	9c 83       	std	Y+4, r25	; 0x04
    3b60:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b62:	8d 81       	ldd	r24, Y+5	; 0x05
    3b64:	9e 81       	ldd	r25, Y+6	; 0x06
    3b66:	01 97       	sbiw	r24, 0x01	; 1
    3b68:	9e 83       	std	Y+6, r25	; 0x06
    3b6a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b6c:	8d 81       	ldd	r24, Y+5	; 0x05
    3b6e:	9e 81       	ldd	r25, Y+6	; 0x06
    3b70:	00 97       	sbiw	r24, 0x00	; 0
    3b72:	69 f7       	brne	.-38     	; 0x3b4e <LCD_Command+0x914>
    3b74:	14 c0       	rjmp	.+40     	; 0x3b9e <LCD_Command+0x964>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b76:	6f 81       	ldd	r22, Y+7	; 0x07
    3b78:	78 85       	ldd	r23, Y+8	; 0x08
    3b7a:	89 85       	ldd	r24, Y+9	; 0x09
    3b7c:	9a 85       	ldd	r25, Y+10	; 0x0a
    3b7e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3b82:	dc 01       	movw	r26, r24
    3b84:	cb 01       	movw	r24, r22
    3b86:	9e 83       	std	Y+6, r25	; 0x06
    3b88:	8d 83       	std	Y+5, r24	; 0x05
    3b8a:	8d 81       	ldd	r24, Y+5	; 0x05
    3b8c:	9e 81       	ldd	r25, Y+6	; 0x06
    3b8e:	9a 83       	std	Y+2, r25	; 0x02
    3b90:	89 83       	std	Y+1, r24	; 0x01
    3b92:	89 81       	ldd	r24, Y+1	; 0x01
    3b94:	9a 81       	ldd	r25, Y+2	; 0x02
    3b96:	01 97       	sbiw	r24, 0x01	; 1
    3b98:	f1 f7       	brne	.-4      	; 0x3b96 <LCD_Command+0x95c>
    3b9a:	9a 83       	std	Y+2, r25	; 0x02
    3b9c:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(15);
}
    3b9e:	cf 58       	subi	r28, 0x8F	; 143
    3ba0:	df 4f       	sbci	r29, 0xFF	; 255
    3ba2:	0f b6       	in	r0, 0x3f	; 63
    3ba4:	f8 94       	cli
    3ba6:	de bf       	out	0x3e, r29	; 62
    3ba8:	0f be       	out	0x3f, r0	; 63
    3baa:	cd bf       	out	0x3d, r28	; 61
    3bac:	cf 91       	pop	r28
    3bae:	df 91       	pop	r29
    3bb0:	1f 91       	pop	r17
    3bb2:	0f 91       	pop	r16
    3bb4:	08 95       	ret

00003bb6 <LCD_Write_ASCII>:


void LCD_Write_ASCII (uint8 u8Datacopy)
{
    3bb6:	0f 93       	push	r16
    3bb8:	1f 93       	push	r17
    3bba:	df 93       	push	r29
    3bbc:	cf 93       	push	r28
    3bbe:	cd b7       	in	r28, 0x3d	; 61
    3bc0:	de b7       	in	r29, 0x3e	; 62
    3bc2:	c1 57       	subi	r28, 0x71	; 113
    3bc4:	d0 40       	sbci	r29, 0x00	; 0
    3bc6:	0f b6       	in	r0, 0x3f	; 63
    3bc8:	f8 94       	cli
    3bca:	de bf       	out	0x3e, r29	; 62
    3bcc:	0f be       	out	0x3f, r0	; 63
    3bce:	cd bf       	out	0x3d, r28	; 61
    3bd0:	fe 01       	movw	r30, r28
    3bd2:	ef 58       	subi	r30, 0x8F	; 143
    3bd4:	ff 4f       	sbci	r31, 0xFF	; 255
    3bd6:	80 83       	st	Z, r24
	DIO_WritePin(RS_LCD,high);
    3bd8:	81 e0       	ldi	r24, 0x01	; 1
    3bda:	61 e0       	ldi	r22, 0x01	; 1
    3bdc:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
    3be0:	fe 01       	movw	r30, r28
    3be2:	e3 59       	subi	r30, 0x93	; 147
    3be4:	ff 4f       	sbci	r31, 0xFF	; 255
    3be6:	80 e0       	ldi	r24, 0x00	; 0
    3be8:	90 e0       	ldi	r25, 0x00	; 0
    3bea:	a0 e8       	ldi	r26, 0x80	; 128
    3bec:	bf e3       	ldi	r27, 0x3F	; 63
    3bee:	80 83       	st	Z, r24
    3bf0:	91 83       	std	Z+1, r25	; 0x01
    3bf2:	a2 83       	std	Z+2, r26	; 0x02
    3bf4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3bf6:	8e 01       	movw	r16, r28
    3bf8:	07 59       	subi	r16, 0x97	; 151
    3bfa:	1f 4f       	sbci	r17, 0xFF	; 255
    3bfc:	fe 01       	movw	r30, r28
    3bfe:	e3 59       	subi	r30, 0x93	; 147
    3c00:	ff 4f       	sbci	r31, 0xFF	; 255
    3c02:	60 81       	ld	r22, Z
    3c04:	71 81       	ldd	r23, Z+1	; 0x01
    3c06:	82 81       	ldd	r24, Z+2	; 0x02
    3c08:	93 81       	ldd	r25, Z+3	; 0x03
    3c0a:	20 e0       	ldi	r18, 0x00	; 0
    3c0c:	30 e0       	ldi	r19, 0x00	; 0
    3c0e:	4a ef       	ldi	r20, 0xFA	; 250
    3c10:	54 e4       	ldi	r21, 0x44	; 68
    3c12:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3c16:	dc 01       	movw	r26, r24
    3c18:	cb 01       	movw	r24, r22
    3c1a:	f8 01       	movw	r30, r16
    3c1c:	80 83       	st	Z, r24
    3c1e:	91 83       	std	Z+1, r25	; 0x01
    3c20:	a2 83       	std	Z+2, r26	; 0x02
    3c22:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3c24:	fe 01       	movw	r30, r28
    3c26:	e7 59       	subi	r30, 0x97	; 151
    3c28:	ff 4f       	sbci	r31, 0xFF	; 255
    3c2a:	60 81       	ld	r22, Z
    3c2c:	71 81       	ldd	r23, Z+1	; 0x01
    3c2e:	82 81       	ldd	r24, Z+2	; 0x02
    3c30:	93 81       	ldd	r25, Z+3	; 0x03
    3c32:	20 e0       	ldi	r18, 0x00	; 0
    3c34:	30 e0       	ldi	r19, 0x00	; 0
    3c36:	40 e8       	ldi	r20, 0x80	; 128
    3c38:	5f e3       	ldi	r21, 0x3F	; 63
    3c3a:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
    3c3e:	88 23       	and	r24, r24
    3c40:	44 f4       	brge	.+16     	; 0x3c52 <LCD_Write_ASCII+0x9c>
		__ticks = 1;
    3c42:	fe 01       	movw	r30, r28
    3c44:	e9 59       	subi	r30, 0x99	; 153
    3c46:	ff 4f       	sbci	r31, 0xFF	; 255
    3c48:	81 e0       	ldi	r24, 0x01	; 1
    3c4a:	90 e0       	ldi	r25, 0x00	; 0
    3c4c:	91 83       	std	Z+1, r25	; 0x01
    3c4e:	80 83       	st	Z, r24
    3c50:	64 c0       	rjmp	.+200    	; 0x3d1a <LCD_Write_ASCII+0x164>
	else if (__tmp > 65535)
    3c52:	fe 01       	movw	r30, r28
    3c54:	e7 59       	subi	r30, 0x97	; 151
    3c56:	ff 4f       	sbci	r31, 0xFF	; 255
    3c58:	60 81       	ld	r22, Z
    3c5a:	71 81       	ldd	r23, Z+1	; 0x01
    3c5c:	82 81       	ldd	r24, Z+2	; 0x02
    3c5e:	93 81       	ldd	r25, Z+3	; 0x03
    3c60:	20 e0       	ldi	r18, 0x00	; 0
    3c62:	3f ef       	ldi	r19, 0xFF	; 255
    3c64:	4f e7       	ldi	r20, 0x7F	; 127
    3c66:	57 e4       	ldi	r21, 0x47	; 71
    3c68:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__gtsf2>
    3c6c:	18 16       	cp	r1, r24
    3c6e:	0c f0       	brlt	.+2      	; 0x3c72 <LCD_Write_ASCII+0xbc>
    3c70:	43 c0       	rjmp	.+134    	; 0x3cf8 <LCD_Write_ASCII+0x142>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c72:	fe 01       	movw	r30, r28
    3c74:	e3 59       	subi	r30, 0x93	; 147
    3c76:	ff 4f       	sbci	r31, 0xFF	; 255
    3c78:	60 81       	ld	r22, Z
    3c7a:	71 81       	ldd	r23, Z+1	; 0x01
    3c7c:	82 81       	ldd	r24, Z+2	; 0x02
    3c7e:	93 81       	ldd	r25, Z+3	; 0x03
    3c80:	20 e0       	ldi	r18, 0x00	; 0
    3c82:	30 e0       	ldi	r19, 0x00	; 0
    3c84:	40 e2       	ldi	r20, 0x20	; 32
    3c86:	51 e4       	ldi	r21, 0x41	; 65
    3c88:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3c8c:	dc 01       	movw	r26, r24
    3c8e:	cb 01       	movw	r24, r22
    3c90:	8e 01       	movw	r16, r28
    3c92:	09 59       	subi	r16, 0x99	; 153
    3c94:	1f 4f       	sbci	r17, 0xFF	; 255
    3c96:	bc 01       	movw	r22, r24
    3c98:	cd 01       	movw	r24, r26
    3c9a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3c9e:	dc 01       	movw	r26, r24
    3ca0:	cb 01       	movw	r24, r22
    3ca2:	f8 01       	movw	r30, r16
    3ca4:	91 83       	std	Z+1, r25	; 0x01
    3ca6:	80 83       	st	Z, r24
    3ca8:	1f c0       	rjmp	.+62     	; 0x3ce8 <LCD_Write_ASCII+0x132>
    3caa:	fe 01       	movw	r30, r28
    3cac:	eb 59       	subi	r30, 0x9B	; 155
    3cae:	ff 4f       	sbci	r31, 0xFF	; 255
    3cb0:	88 ec       	ldi	r24, 0xC8	; 200
    3cb2:	90 e0       	ldi	r25, 0x00	; 0
    3cb4:	91 83       	std	Z+1, r25	; 0x01
    3cb6:	80 83       	st	Z, r24
    3cb8:	fe 01       	movw	r30, r28
    3cba:	eb 59       	subi	r30, 0x9B	; 155
    3cbc:	ff 4f       	sbci	r31, 0xFF	; 255
    3cbe:	80 81       	ld	r24, Z
    3cc0:	91 81       	ldd	r25, Z+1	; 0x01
    3cc2:	01 97       	sbiw	r24, 0x01	; 1
    3cc4:	f1 f7       	brne	.-4      	; 0x3cc2 <LCD_Write_ASCII+0x10c>
    3cc6:	fe 01       	movw	r30, r28
    3cc8:	eb 59       	subi	r30, 0x9B	; 155
    3cca:	ff 4f       	sbci	r31, 0xFF	; 255
    3ccc:	91 83       	std	Z+1, r25	; 0x01
    3cce:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3cd0:	de 01       	movw	r26, r28
    3cd2:	a9 59       	subi	r26, 0x99	; 153
    3cd4:	bf 4f       	sbci	r27, 0xFF	; 255
    3cd6:	fe 01       	movw	r30, r28
    3cd8:	e9 59       	subi	r30, 0x99	; 153
    3cda:	ff 4f       	sbci	r31, 0xFF	; 255
    3cdc:	80 81       	ld	r24, Z
    3cde:	91 81       	ldd	r25, Z+1	; 0x01
    3ce0:	01 97       	sbiw	r24, 0x01	; 1
    3ce2:	11 96       	adiw	r26, 0x01	; 1
    3ce4:	9c 93       	st	X, r25
    3ce6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3ce8:	fe 01       	movw	r30, r28
    3cea:	e9 59       	subi	r30, 0x99	; 153
    3cec:	ff 4f       	sbci	r31, 0xFF	; 255
    3cee:	80 81       	ld	r24, Z
    3cf0:	91 81       	ldd	r25, Z+1	; 0x01
    3cf2:	00 97       	sbiw	r24, 0x00	; 0
    3cf4:	d1 f6       	brne	.-76     	; 0x3caa <LCD_Write_ASCII+0xf4>
    3cf6:	27 c0       	rjmp	.+78     	; 0x3d46 <LCD_Write_ASCII+0x190>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3cf8:	8e 01       	movw	r16, r28
    3cfa:	09 59       	subi	r16, 0x99	; 153
    3cfc:	1f 4f       	sbci	r17, 0xFF	; 255
    3cfe:	fe 01       	movw	r30, r28
    3d00:	e7 59       	subi	r30, 0x97	; 151
    3d02:	ff 4f       	sbci	r31, 0xFF	; 255
    3d04:	60 81       	ld	r22, Z
    3d06:	71 81       	ldd	r23, Z+1	; 0x01
    3d08:	82 81       	ldd	r24, Z+2	; 0x02
    3d0a:	93 81       	ldd	r25, Z+3	; 0x03
    3d0c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3d10:	dc 01       	movw	r26, r24
    3d12:	cb 01       	movw	r24, r22
    3d14:	f8 01       	movw	r30, r16
    3d16:	91 83       	std	Z+1, r25	; 0x01
    3d18:	80 83       	st	Z, r24
    3d1a:	de 01       	movw	r26, r28
    3d1c:	ad 59       	subi	r26, 0x9D	; 157
    3d1e:	bf 4f       	sbci	r27, 0xFF	; 255
    3d20:	fe 01       	movw	r30, r28
    3d22:	e9 59       	subi	r30, 0x99	; 153
    3d24:	ff 4f       	sbci	r31, 0xFF	; 255
    3d26:	80 81       	ld	r24, Z
    3d28:	91 81       	ldd	r25, Z+1	; 0x01
    3d2a:	8d 93       	st	X+, r24
    3d2c:	9c 93       	st	X, r25
    3d2e:	fe 01       	movw	r30, r28
    3d30:	ed 59       	subi	r30, 0x9D	; 157
    3d32:	ff 4f       	sbci	r31, 0xFF	; 255
    3d34:	80 81       	ld	r24, Z
    3d36:	91 81       	ldd	r25, Z+1	; 0x01
    3d38:	01 97       	sbiw	r24, 0x01	; 1
    3d3a:	f1 f7       	brne	.-4      	; 0x3d38 <LCD_Write_ASCII+0x182>
    3d3c:	fe 01       	movw	r30, r28
    3d3e:	ed 59       	subi	r30, 0x9D	; 157
    3d40:	ff 4f       	sbci	r31, 0xFF	; 255
    3d42:	91 83       	std	Z+1, r25	; 0x01
    3d44:	80 83       	st	Z, r24
	_delay_ms(1);
	DIO_WritePin(E_LCD,high);
    3d46:	83 e0       	ldi	r24, 0x03	; 3
    3d48:	61 e0       	ldi	r22, 0x01	; 1
    3d4a:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
    3d4e:	fe 01       	movw	r30, r28
    3d50:	e1 5a       	subi	r30, 0xA1	; 161
    3d52:	ff 4f       	sbci	r31, 0xFF	; 255
    3d54:	80 e0       	ldi	r24, 0x00	; 0
    3d56:	90 e0       	ldi	r25, 0x00	; 0
    3d58:	a0 e8       	ldi	r26, 0x80	; 128
    3d5a:	bf e3       	ldi	r27, 0x3F	; 63
    3d5c:	80 83       	st	Z, r24
    3d5e:	91 83       	std	Z+1, r25	; 0x01
    3d60:	a2 83       	std	Z+2, r26	; 0x02
    3d62:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3d64:	8e 01       	movw	r16, r28
    3d66:	05 5a       	subi	r16, 0xA5	; 165
    3d68:	1f 4f       	sbci	r17, 0xFF	; 255
    3d6a:	fe 01       	movw	r30, r28
    3d6c:	e1 5a       	subi	r30, 0xA1	; 161
    3d6e:	ff 4f       	sbci	r31, 0xFF	; 255
    3d70:	60 81       	ld	r22, Z
    3d72:	71 81       	ldd	r23, Z+1	; 0x01
    3d74:	82 81       	ldd	r24, Z+2	; 0x02
    3d76:	93 81       	ldd	r25, Z+3	; 0x03
    3d78:	20 e0       	ldi	r18, 0x00	; 0
    3d7a:	30 e0       	ldi	r19, 0x00	; 0
    3d7c:	4a ef       	ldi	r20, 0xFA	; 250
    3d7e:	54 e4       	ldi	r21, 0x44	; 68
    3d80:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3d84:	dc 01       	movw	r26, r24
    3d86:	cb 01       	movw	r24, r22
    3d88:	f8 01       	movw	r30, r16
    3d8a:	80 83       	st	Z, r24
    3d8c:	91 83       	std	Z+1, r25	; 0x01
    3d8e:	a2 83       	std	Z+2, r26	; 0x02
    3d90:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3d92:	fe 01       	movw	r30, r28
    3d94:	e5 5a       	subi	r30, 0xA5	; 165
    3d96:	ff 4f       	sbci	r31, 0xFF	; 255
    3d98:	60 81       	ld	r22, Z
    3d9a:	71 81       	ldd	r23, Z+1	; 0x01
    3d9c:	82 81       	ldd	r24, Z+2	; 0x02
    3d9e:	93 81       	ldd	r25, Z+3	; 0x03
    3da0:	20 e0       	ldi	r18, 0x00	; 0
    3da2:	30 e0       	ldi	r19, 0x00	; 0
    3da4:	40 e8       	ldi	r20, 0x80	; 128
    3da6:	5f e3       	ldi	r21, 0x3F	; 63
    3da8:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
    3dac:	88 23       	and	r24, r24
    3dae:	44 f4       	brge	.+16     	; 0x3dc0 <LCD_Write_ASCII+0x20a>
		__ticks = 1;
    3db0:	fe 01       	movw	r30, r28
    3db2:	e7 5a       	subi	r30, 0xA7	; 167
    3db4:	ff 4f       	sbci	r31, 0xFF	; 255
    3db6:	81 e0       	ldi	r24, 0x01	; 1
    3db8:	90 e0       	ldi	r25, 0x00	; 0
    3dba:	91 83       	std	Z+1, r25	; 0x01
    3dbc:	80 83       	st	Z, r24
    3dbe:	64 c0       	rjmp	.+200    	; 0x3e88 <LCD_Write_ASCII+0x2d2>
	else if (__tmp > 65535)
    3dc0:	fe 01       	movw	r30, r28
    3dc2:	e5 5a       	subi	r30, 0xA5	; 165
    3dc4:	ff 4f       	sbci	r31, 0xFF	; 255
    3dc6:	60 81       	ld	r22, Z
    3dc8:	71 81       	ldd	r23, Z+1	; 0x01
    3dca:	82 81       	ldd	r24, Z+2	; 0x02
    3dcc:	93 81       	ldd	r25, Z+3	; 0x03
    3dce:	20 e0       	ldi	r18, 0x00	; 0
    3dd0:	3f ef       	ldi	r19, 0xFF	; 255
    3dd2:	4f e7       	ldi	r20, 0x7F	; 127
    3dd4:	57 e4       	ldi	r21, 0x47	; 71
    3dd6:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__gtsf2>
    3dda:	18 16       	cp	r1, r24
    3ddc:	0c f0       	brlt	.+2      	; 0x3de0 <LCD_Write_ASCII+0x22a>
    3dde:	43 c0       	rjmp	.+134    	; 0x3e66 <LCD_Write_ASCII+0x2b0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3de0:	fe 01       	movw	r30, r28
    3de2:	e1 5a       	subi	r30, 0xA1	; 161
    3de4:	ff 4f       	sbci	r31, 0xFF	; 255
    3de6:	60 81       	ld	r22, Z
    3de8:	71 81       	ldd	r23, Z+1	; 0x01
    3dea:	82 81       	ldd	r24, Z+2	; 0x02
    3dec:	93 81       	ldd	r25, Z+3	; 0x03
    3dee:	20 e0       	ldi	r18, 0x00	; 0
    3df0:	30 e0       	ldi	r19, 0x00	; 0
    3df2:	40 e2       	ldi	r20, 0x20	; 32
    3df4:	51 e4       	ldi	r21, 0x41	; 65
    3df6:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3dfa:	dc 01       	movw	r26, r24
    3dfc:	cb 01       	movw	r24, r22
    3dfe:	8e 01       	movw	r16, r28
    3e00:	07 5a       	subi	r16, 0xA7	; 167
    3e02:	1f 4f       	sbci	r17, 0xFF	; 255
    3e04:	bc 01       	movw	r22, r24
    3e06:	cd 01       	movw	r24, r26
    3e08:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3e0c:	dc 01       	movw	r26, r24
    3e0e:	cb 01       	movw	r24, r22
    3e10:	f8 01       	movw	r30, r16
    3e12:	91 83       	std	Z+1, r25	; 0x01
    3e14:	80 83       	st	Z, r24
    3e16:	1f c0       	rjmp	.+62     	; 0x3e56 <LCD_Write_ASCII+0x2a0>
    3e18:	fe 01       	movw	r30, r28
    3e1a:	e9 5a       	subi	r30, 0xA9	; 169
    3e1c:	ff 4f       	sbci	r31, 0xFF	; 255
    3e1e:	88 ec       	ldi	r24, 0xC8	; 200
    3e20:	90 e0       	ldi	r25, 0x00	; 0
    3e22:	91 83       	std	Z+1, r25	; 0x01
    3e24:	80 83       	st	Z, r24
    3e26:	fe 01       	movw	r30, r28
    3e28:	e9 5a       	subi	r30, 0xA9	; 169
    3e2a:	ff 4f       	sbci	r31, 0xFF	; 255
    3e2c:	80 81       	ld	r24, Z
    3e2e:	91 81       	ldd	r25, Z+1	; 0x01
    3e30:	01 97       	sbiw	r24, 0x01	; 1
    3e32:	f1 f7       	brne	.-4      	; 0x3e30 <LCD_Write_ASCII+0x27a>
    3e34:	fe 01       	movw	r30, r28
    3e36:	e9 5a       	subi	r30, 0xA9	; 169
    3e38:	ff 4f       	sbci	r31, 0xFF	; 255
    3e3a:	91 83       	std	Z+1, r25	; 0x01
    3e3c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3e3e:	de 01       	movw	r26, r28
    3e40:	a7 5a       	subi	r26, 0xA7	; 167
    3e42:	bf 4f       	sbci	r27, 0xFF	; 255
    3e44:	fe 01       	movw	r30, r28
    3e46:	e7 5a       	subi	r30, 0xA7	; 167
    3e48:	ff 4f       	sbci	r31, 0xFF	; 255
    3e4a:	80 81       	ld	r24, Z
    3e4c:	91 81       	ldd	r25, Z+1	; 0x01
    3e4e:	01 97       	sbiw	r24, 0x01	; 1
    3e50:	11 96       	adiw	r26, 0x01	; 1
    3e52:	9c 93       	st	X, r25
    3e54:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3e56:	fe 01       	movw	r30, r28
    3e58:	e7 5a       	subi	r30, 0xA7	; 167
    3e5a:	ff 4f       	sbci	r31, 0xFF	; 255
    3e5c:	80 81       	ld	r24, Z
    3e5e:	91 81       	ldd	r25, Z+1	; 0x01
    3e60:	00 97       	sbiw	r24, 0x00	; 0
    3e62:	d1 f6       	brne	.-76     	; 0x3e18 <LCD_Write_ASCII+0x262>
    3e64:	27 c0       	rjmp	.+78     	; 0x3eb4 <LCD_Write_ASCII+0x2fe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3e66:	8e 01       	movw	r16, r28
    3e68:	07 5a       	subi	r16, 0xA7	; 167
    3e6a:	1f 4f       	sbci	r17, 0xFF	; 255
    3e6c:	fe 01       	movw	r30, r28
    3e6e:	e5 5a       	subi	r30, 0xA5	; 165
    3e70:	ff 4f       	sbci	r31, 0xFF	; 255
    3e72:	60 81       	ld	r22, Z
    3e74:	71 81       	ldd	r23, Z+1	; 0x01
    3e76:	82 81       	ldd	r24, Z+2	; 0x02
    3e78:	93 81       	ldd	r25, Z+3	; 0x03
    3e7a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3e7e:	dc 01       	movw	r26, r24
    3e80:	cb 01       	movw	r24, r22
    3e82:	f8 01       	movw	r30, r16
    3e84:	91 83       	std	Z+1, r25	; 0x01
    3e86:	80 83       	st	Z, r24
    3e88:	de 01       	movw	r26, r28
    3e8a:	ab 5a       	subi	r26, 0xAB	; 171
    3e8c:	bf 4f       	sbci	r27, 0xFF	; 255
    3e8e:	fe 01       	movw	r30, r28
    3e90:	e7 5a       	subi	r30, 0xA7	; 167
    3e92:	ff 4f       	sbci	r31, 0xFF	; 255
    3e94:	80 81       	ld	r24, Z
    3e96:	91 81       	ldd	r25, Z+1	; 0x01
    3e98:	8d 93       	st	X+, r24
    3e9a:	9c 93       	st	X, r25
    3e9c:	fe 01       	movw	r30, r28
    3e9e:	eb 5a       	subi	r30, 0xAB	; 171
    3ea0:	ff 4f       	sbci	r31, 0xFF	; 255
    3ea2:	80 81       	ld	r24, Z
    3ea4:	91 81       	ldd	r25, Z+1	; 0x01
    3ea6:	01 97       	sbiw	r24, 0x01	; 1
    3ea8:	f1 f7       	brne	.-4      	; 0x3ea6 <LCD_Write_ASCII+0x2f0>
    3eaa:	fe 01       	movw	r30, r28
    3eac:	eb 5a       	subi	r30, 0xAB	; 171
    3eae:	ff 4f       	sbci	r31, 0xFF	; 255
    3eb0:	91 83       	std	Z+1, r25	; 0x01
    3eb2:	80 83       	st	Z, r24
	_delay_ms(1);

	PORT_LCD=(PORT_LCD & 0x0f)|(u8Datacopy & 0xf0);
    3eb4:	ab e3       	ldi	r26, 0x3B	; 59
    3eb6:	b0 e0       	ldi	r27, 0x00	; 0
    3eb8:	eb e3       	ldi	r30, 0x3B	; 59
    3eba:	f0 e0       	ldi	r31, 0x00	; 0
    3ebc:	80 81       	ld	r24, Z
    3ebe:	98 2f       	mov	r25, r24
    3ec0:	9f 70       	andi	r25, 0x0F	; 15
    3ec2:	fe 01       	movw	r30, r28
    3ec4:	ef 58       	subi	r30, 0x8F	; 143
    3ec6:	ff 4f       	sbci	r31, 0xFF	; 255
    3ec8:	80 81       	ld	r24, Z
    3eca:	80 7f       	andi	r24, 0xF0	; 240
    3ecc:	89 2b       	or	r24, r25
    3ece:	8c 93       	st	X, r24
    3ed0:	fe 01       	movw	r30, r28
    3ed2:	ef 5a       	subi	r30, 0xAF	; 175
    3ed4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ed6:	80 e0       	ldi	r24, 0x00	; 0
    3ed8:	90 e0       	ldi	r25, 0x00	; 0
    3eda:	a0 e8       	ldi	r26, 0x80	; 128
    3edc:	bf e3       	ldi	r27, 0x3F	; 63
    3ede:	80 83       	st	Z, r24
    3ee0:	91 83       	std	Z+1, r25	; 0x01
    3ee2:	a2 83       	std	Z+2, r26	; 0x02
    3ee4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3ee6:	8e 01       	movw	r16, r28
    3ee8:	03 5b       	subi	r16, 0xB3	; 179
    3eea:	1f 4f       	sbci	r17, 0xFF	; 255
    3eec:	fe 01       	movw	r30, r28
    3eee:	ef 5a       	subi	r30, 0xAF	; 175
    3ef0:	ff 4f       	sbci	r31, 0xFF	; 255
    3ef2:	60 81       	ld	r22, Z
    3ef4:	71 81       	ldd	r23, Z+1	; 0x01
    3ef6:	82 81       	ldd	r24, Z+2	; 0x02
    3ef8:	93 81       	ldd	r25, Z+3	; 0x03
    3efa:	20 e0       	ldi	r18, 0x00	; 0
    3efc:	30 e0       	ldi	r19, 0x00	; 0
    3efe:	4a ef       	ldi	r20, 0xFA	; 250
    3f00:	54 e4       	ldi	r21, 0x44	; 68
    3f02:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3f06:	dc 01       	movw	r26, r24
    3f08:	cb 01       	movw	r24, r22
    3f0a:	f8 01       	movw	r30, r16
    3f0c:	80 83       	st	Z, r24
    3f0e:	91 83       	std	Z+1, r25	; 0x01
    3f10:	a2 83       	std	Z+2, r26	; 0x02
    3f12:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3f14:	fe 01       	movw	r30, r28
    3f16:	e3 5b       	subi	r30, 0xB3	; 179
    3f18:	ff 4f       	sbci	r31, 0xFF	; 255
    3f1a:	60 81       	ld	r22, Z
    3f1c:	71 81       	ldd	r23, Z+1	; 0x01
    3f1e:	82 81       	ldd	r24, Z+2	; 0x02
    3f20:	93 81       	ldd	r25, Z+3	; 0x03
    3f22:	20 e0       	ldi	r18, 0x00	; 0
    3f24:	30 e0       	ldi	r19, 0x00	; 0
    3f26:	40 e8       	ldi	r20, 0x80	; 128
    3f28:	5f e3       	ldi	r21, 0x3F	; 63
    3f2a:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
    3f2e:	88 23       	and	r24, r24
    3f30:	44 f4       	brge	.+16     	; 0x3f42 <LCD_Write_ASCII+0x38c>
		__ticks = 1;
    3f32:	fe 01       	movw	r30, r28
    3f34:	e5 5b       	subi	r30, 0xB5	; 181
    3f36:	ff 4f       	sbci	r31, 0xFF	; 255
    3f38:	81 e0       	ldi	r24, 0x01	; 1
    3f3a:	90 e0       	ldi	r25, 0x00	; 0
    3f3c:	91 83       	std	Z+1, r25	; 0x01
    3f3e:	80 83       	st	Z, r24
    3f40:	64 c0       	rjmp	.+200    	; 0x400a <LCD_Write_ASCII+0x454>
	else if (__tmp > 65535)
    3f42:	fe 01       	movw	r30, r28
    3f44:	e3 5b       	subi	r30, 0xB3	; 179
    3f46:	ff 4f       	sbci	r31, 0xFF	; 255
    3f48:	60 81       	ld	r22, Z
    3f4a:	71 81       	ldd	r23, Z+1	; 0x01
    3f4c:	82 81       	ldd	r24, Z+2	; 0x02
    3f4e:	93 81       	ldd	r25, Z+3	; 0x03
    3f50:	20 e0       	ldi	r18, 0x00	; 0
    3f52:	3f ef       	ldi	r19, 0xFF	; 255
    3f54:	4f e7       	ldi	r20, 0x7F	; 127
    3f56:	57 e4       	ldi	r21, 0x47	; 71
    3f58:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__gtsf2>
    3f5c:	18 16       	cp	r1, r24
    3f5e:	0c f0       	brlt	.+2      	; 0x3f62 <LCD_Write_ASCII+0x3ac>
    3f60:	43 c0       	rjmp	.+134    	; 0x3fe8 <LCD_Write_ASCII+0x432>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3f62:	fe 01       	movw	r30, r28
    3f64:	ef 5a       	subi	r30, 0xAF	; 175
    3f66:	ff 4f       	sbci	r31, 0xFF	; 255
    3f68:	60 81       	ld	r22, Z
    3f6a:	71 81       	ldd	r23, Z+1	; 0x01
    3f6c:	82 81       	ldd	r24, Z+2	; 0x02
    3f6e:	93 81       	ldd	r25, Z+3	; 0x03
    3f70:	20 e0       	ldi	r18, 0x00	; 0
    3f72:	30 e0       	ldi	r19, 0x00	; 0
    3f74:	40 e2       	ldi	r20, 0x20	; 32
    3f76:	51 e4       	ldi	r21, 0x41	; 65
    3f78:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3f7c:	dc 01       	movw	r26, r24
    3f7e:	cb 01       	movw	r24, r22
    3f80:	8e 01       	movw	r16, r28
    3f82:	05 5b       	subi	r16, 0xB5	; 181
    3f84:	1f 4f       	sbci	r17, 0xFF	; 255
    3f86:	bc 01       	movw	r22, r24
    3f88:	cd 01       	movw	r24, r26
    3f8a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3f8e:	dc 01       	movw	r26, r24
    3f90:	cb 01       	movw	r24, r22
    3f92:	f8 01       	movw	r30, r16
    3f94:	91 83       	std	Z+1, r25	; 0x01
    3f96:	80 83       	st	Z, r24
    3f98:	1f c0       	rjmp	.+62     	; 0x3fd8 <LCD_Write_ASCII+0x422>
    3f9a:	fe 01       	movw	r30, r28
    3f9c:	e7 5b       	subi	r30, 0xB7	; 183
    3f9e:	ff 4f       	sbci	r31, 0xFF	; 255
    3fa0:	88 ec       	ldi	r24, 0xC8	; 200
    3fa2:	90 e0       	ldi	r25, 0x00	; 0
    3fa4:	91 83       	std	Z+1, r25	; 0x01
    3fa6:	80 83       	st	Z, r24
    3fa8:	fe 01       	movw	r30, r28
    3faa:	e7 5b       	subi	r30, 0xB7	; 183
    3fac:	ff 4f       	sbci	r31, 0xFF	; 255
    3fae:	80 81       	ld	r24, Z
    3fb0:	91 81       	ldd	r25, Z+1	; 0x01
    3fb2:	01 97       	sbiw	r24, 0x01	; 1
    3fb4:	f1 f7       	brne	.-4      	; 0x3fb2 <LCD_Write_ASCII+0x3fc>
    3fb6:	fe 01       	movw	r30, r28
    3fb8:	e7 5b       	subi	r30, 0xB7	; 183
    3fba:	ff 4f       	sbci	r31, 0xFF	; 255
    3fbc:	91 83       	std	Z+1, r25	; 0x01
    3fbe:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3fc0:	de 01       	movw	r26, r28
    3fc2:	a5 5b       	subi	r26, 0xB5	; 181
    3fc4:	bf 4f       	sbci	r27, 0xFF	; 255
    3fc6:	fe 01       	movw	r30, r28
    3fc8:	e5 5b       	subi	r30, 0xB5	; 181
    3fca:	ff 4f       	sbci	r31, 0xFF	; 255
    3fcc:	80 81       	ld	r24, Z
    3fce:	91 81       	ldd	r25, Z+1	; 0x01
    3fd0:	01 97       	sbiw	r24, 0x01	; 1
    3fd2:	11 96       	adiw	r26, 0x01	; 1
    3fd4:	9c 93       	st	X, r25
    3fd6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3fd8:	fe 01       	movw	r30, r28
    3fda:	e5 5b       	subi	r30, 0xB5	; 181
    3fdc:	ff 4f       	sbci	r31, 0xFF	; 255
    3fde:	80 81       	ld	r24, Z
    3fe0:	91 81       	ldd	r25, Z+1	; 0x01
    3fe2:	00 97       	sbiw	r24, 0x00	; 0
    3fe4:	d1 f6       	brne	.-76     	; 0x3f9a <LCD_Write_ASCII+0x3e4>
    3fe6:	27 c0       	rjmp	.+78     	; 0x4036 <LCD_Write_ASCII+0x480>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3fe8:	8e 01       	movw	r16, r28
    3fea:	05 5b       	subi	r16, 0xB5	; 181
    3fec:	1f 4f       	sbci	r17, 0xFF	; 255
    3fee:	fe 01       	movw	r30, r28
    3ff0:	e3 5b       	subi	r30, 0xB3	; 179
    3ff2:	ff 4f       	sbci	r31, 0xFF	; 255
    3ff4:	60 81       	ld	r22, Z
    3ff6:	71 81       	ldd	r23, Z+1	; 0x01
    3ff8:	82 81       	ldd	r24, Z+2	; 0x02
    3ffa:	93 81       	ldd	r25, Z+3	; 0x03
    3ffc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4000:	dc 01       	movw	r26, r24
    4002:	cb 01       	movw	r24, r22
    4004:	f8 01       	movw	r30, r16
    4006:	91 83       	std	Z+1, r25	; 0x01
    4008:	80 83       	st	Z, r24
    400a:	de 01       	movw	r26, r28
    400c:	a9 5b       	subi	r26, 0xB9	; 185
    400e:	bf 4f       	sbci	r27, 0xFF	; 255
    4010:	fe 01       	movw	r30, r28
    4012:	e5 5b       	subi	r30, 0xB5	; 181
    4014:	ff 4f       	sbci	r31, 0xFF	; 255
    4016:	80 81       	ld	r24, Z
    4018:	91 81       	ldd	r25, Z+1	; 0x01
    401a:	8d 93       	st	X+, r24
    401c:	9c 93       	st	X, r25
    401e:	fe 01       	movw	r30, r28
    4020:	e9 5b       	subi	r30, 0xB9	; 185
    4022:	ff 4f       	sbci	r31, 0xFF	; 255
    4024:	80 81       	ld	r24, Z
    4026:	91 81       	ldd	r25, Z+1	; 0x01
    4028:	01 97       	sbiw	r24, 0x01	; 1
    402a:	f1 f7       	brne	.-4      	; 0x4028 <LCD_Write_ASCII+0x472>
    402c:	fe 01       	movw	r30, r28
    402e:	e9 5b       	subi	r30, 0xB9	; 185
    4030:	ff 4f       	sbci	r31, 0xFF	; 255
    4032:	91 83       	std	Z+1, r25	; 0x01
    4034:	80 83       	st	Z, r24
	_delay_ms(1);
	DIO_WritePin(E_LCD,low);
    4036:	83 e0       	ldi	r24, 0x03	; 3
    4038:	60 e0       	ldi	r22, 0x00	; 0
    403a:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
    403e:	fe 01       	movw	r30, r28
    4040:	ed 5b       	subi	r30, 0xBD	; 189
    4042:	ff 4f       	sbci	r31, 0xFF	; 255
    4044:	80 e0       	ldi	r24, 0x00	; 0
    4046:	90 e0       	ldi	r25, 0x00	; 0
    4048:	a0 e8       	ldi	r26, 0x80	; 128
    404a:	bf e3       	ldi	r27, 0x3F	; 63
    404c:	80 83       	st	Z, r24
    404e:	91 83       	std	Z+1, r25	; 0x01
    4050:	a2 83       	std	Z+2, r26	; 0x02
    4052:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4054:	8e 01       	movw	r16, r28
    4056:	01 5c       	subi	r16, 0xC1	; 193
    4058:	1f 4f       	sbci	r17, 0xFF	; 255
    405a:	fe 01       	movw	r30, r28
    405c:	ed 5b       	subi	r30, 0xBD	; 189
    405e:	ff 4f       	sbci	r31, 0xFF	; 255
    4060:	60 81       	ld	r22, Z
    4062:	71 81       	ldd	r23, Z+1	; 0x01
    4064:	82 81       	ldd	r24, Z+2	; 0x02
    4066:	93 81       	ldd	r25, Z+3	; 0x03
    4068:	20 e0       	ldi	r18, 0x00	; 0
    406a:	30 e0       	ldi	r19, 0x00	; 0
    406c:	4a ef       	ldi	r20, 0xFA	; 250
    406e:	54 e4       	ldi	r21, 0x44	; 68
    4070:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    4074:	dc 01       	movw	r26, r24
    4076:	cb 01       	movw	r24, r22
    4078:	f8 01       	movw	r30, r16
    407a:	80 83       	st	Z, r24
    407c:	91 83       	std	Z+1, r25	; 0x01
    407e:	a2 83       	std	Z+2, r26	; 0x02
    4080:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4082:	fe 01       	movw	r30, r28
    4084:	ff 96       	adiw	r30, 0x3f	; 63
    4086:	60 81       	ld	r22, Z
    4088:	71 81       	ldd	r23, Z+1	; 0x01
    408a:	82 81       	ldd	r24, Z+2	; 0x02
    408c:	93 81       	ldd	r25, Z+3	; 0x03
    408e:	20 e0       	ldi	r18, 0x00	; 0
    4090:	30 e0       	ldi	r19, 0x00	; 0
    4092:	40 e8       	ldi	r20, 0x80	; 128
    4094:	5f e3       	ldi	r21, 0x3F	; 63
    4096:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
    409a:	88 23       	and	r24, r24
    409c:	2c f4       	brge	.+10     	; 0x40a8 <LCD_Write_ASCII+0x4f2>
		__ticks = 1;
    409e:	81 e0       	ldi	r24, 0x01	; 1
    40a0:	90 e0       	ldi	r25, 0x00	; 0
    40a2:	9e af       	std	Y+62, r25	; 0x3e
    40a4:	8d af       	std	Y+61, r24	; 0x3d
    40a6:	46 c0       	rjmp	.+140    	; 0x4134 <LCD_Write_ASCII+0x57e>
	else if (__tmp > 65535)
    40a8:	fe 01       	movw	r30, r28
    40aa:	ff 96       	adiw	r30, 0x3f	; 63
    40ac:	60 81       	ld	r22, Z
    40ae:	71 81       	ldd	r23, Z+1	; 0x01
    40b0:	82 81       	ldd	r24, Z+2	; 0x02
    40b2:	93 81       	ldd	r25, Z+3	; 0x03
    40b4:	20 e0       	ldi	r18, 0x00	; 0
    40b6:	3f ef       	ldi	r19, 0xFF	; 255
    40b8:	4f e7       	ldi	r20, 0x7F	; 127
    40ba:	57 e4       	ldi	r21, 0x47	; 71
    40bc:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__gtsf2>
    40c0:	18 16       	cp	r1, r24
    40c2:	64 f5       	brge	.+88     	; 0x411c <LCD_Write_ASCII+0x566>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    40c4:	fe 01       	movw	r30, r28
    40c6:	ed 5b       	subi	r30, 0xBD	; 189
    40c8:	ff 4f       	sbci	r31, 0xFF	; 255
    40ca:	60 81       	ld	r22, Z
    40cc:	71 81       	ldd	r23, Z+1	; 0x01
    40ce:	82 81       	ldd	r24, Z+2	; 0x02
    40d0:	93 81       	ldd	r25, Z+3	; 0x03
    40d2:	20 e0       	ldi	r18, 0x00	; 0
    40d4:	30 e0       	ldi	r19, 0x00	; 0
    40d6:	40 e2       	ldi	r20, 0x20	; 32
    40d8:	51 e4       	ldi	r21, 0x41	; 65
    40da:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    40de:	dc 01       	movw	r26, r24
    40e0:	cb 01       	movw	r24, r22
    40e2:	bc 01       	movw	r22, r24
    40e4:	cd 01       	movw	r24, r26
    40e6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    40ea:	dc 01       	movw	r26, r24
    40ec:	cb 01       	movw	r24, r22
    40ee:	9e af       	std	Y+62, r25	; 0x3e
    40f0:	8d af       	std	Y+61, r24	; 0x3d
    40f2:	0f c0       	rjmp	.+30     	; 0x4112 <LCD_Write_ASCII+0x55c>
    40f4:	88 ec       	ldi	r24, 0xC8	; 200
    40f6:	90 e0       	ldi	r25, 0x00	; 0
    40f8:	9c af       	std	Y+60, r25	; 0x3c
    40fa:	8b af       	std	Y+59, r24	; 0x3b
    40fc:	8b ad       	ldd	r24, Y+59	; 0x3b
    40fe:	9c ad       	ldd	r25, Y+60	; 0x3c
    4100:	01 97       	sbiw	r24, 0x01	; 1
    4102:	f1 f7       	brne	.-4      	; 0x4100 <LCD_Write_ASCII+0x54a>
    4104:	9c af       	std	Y+60, r25	; 0x3c
    4106:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4108:	8d ad       	ldd	r24, Y+61	; 0x3d
    410a:	9e ad       	ldd	r25, Y+62	; 0x3e
    410c:	01 97       	sbiw	r24, 0x01	; 1
    410e:	9e af       	std	Y+62, r25	; 0x3e
    4110:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4112:	8d ad       	ldd	r24, Y+61	; 0x3d
    4114:	9e ad       	ldd	r25, Y+62	; 0x3e
    4116:	00 97       	sbiw	r24, 0x00	; 0
    4118:	69 f7       	brne	.-38     	; 0x40f4 <LCD_Write_ASCII+0x53e>
    411a:	16 c0       	rjmp	.+44     	; 0x4148 <LCD_Write_ASCII+0x592>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    411c:	fe 01       	movw	r30, r28
    411e:	ff 96       	adiw	r30, 0x3f	; 63
    4120:	60 81       	ld	r22, Z
    4122:	71 81       	ldd	r23, Z+1	; 0x01
    4124:	82 81       	ldd	r24, Z+2	; 0x02
    4126:	93 81       	ldd	r25, Z+3	; 0x03
    4128:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    412c:	dc 01       	movw	r26, r24
    412e:	cb 01       	movw	r24, r22
    4130:	9e af       	std	Y+62, r25	; 0x3e
    4132:	8d af       	std	Y+61, r24	; 0x3d
    4134:	8d ad       	ldd	r24, Y+61	; 0x3d
    4136:	9e ad       	ldd	r25, Y+62	; 0x3e
    4138:	9a af       	std	Y+58, r25	; 0x3a
    413a:	89 af       	std	Y+57, r24	; 0x39
    413c:	89 ad       	ldd	r24, Y+57	; 0x39
    413e:	9a ad       	ldd	r25, Y+58	; 0x3a
    4140:	01 97       	sbiw	r24, 0x01	; 1
    4142:	f1 f7       	brne	.-4      	; 0x4140 <LCD_Write_ASCII+0x58a>
    4144:	9a af       	std	Y+58, r25	; 0x3a
    4146:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(1);
	DIO_WritePin(E_LCD,high);
    4148:	83 e0       	ldi	r24, 0x03	; 3
    414a:	61 e0       	ldi	r22, 0x01	; 1
    414c:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
    4150:	80 e0       	ldi	r24, 0x00	; 0
    4152:	90 e0       	ldi	r25, 0x00	; 0
    4154:	a0 e8       	ldi	r26, 0x80	; 128
    4156:	bf e3       	ldi	r27, 0x3F	; 63
    4158:	8d ab       	std	Y+53, r24	; 0x35
    415a:	9e ab       	std	Y+54, r25	; 0x36
    415c:	af ab       	std	Y+55, r26	; 0x37
    415e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4160:	6d a9       	ldd	r22, Y+53	; 0x35
    4162:	7e a9       	ldd	r23, Y+54	; 0x36
    4164:	8f a9       	ldd	r24, Y+55	; 0x37
    4166:	98 ad       	ldd	r25, Y+56	; 0x38
    4168:	20 e0       	ldi	r18, 0x00	; 0
    416a:	30 e0       	ldi	r19, 0x00	; 0
    416c:	4a ef       	ldi	r20, 0xFA	; 250
    416e:	54 e4       	ldi	r21, 0x44	; 68
    4170:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    4174:	dc 01       	movw	r26, r24
    4176:	cb 01       	movw	r24, r22
    4178:	89 ab       	std	Y+49, r24	; 0x31
    417a:	9a ab       	std	Y+50, r25	; 0x32
    417c:	ab ab       	std	Y+51, r26	; 0x33
    417e:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    4180:	69 a9       	ldd	r22, Y+49	; 0x31
    4182:	7a a9       	ldd	r23, Y+50	; 0x32
    4184:	8b a9       	ldd	r24, Y+51	; 0x33
    4186:	9c a9       	ldd	r25, Y+52	; 0x34
    4188:	20 e0       	ldi	r18, 0x00	; 0
    418a:	30 e0       	ldi	r19, 0x00	; 0
    418c:	40 e8       	ldi	r20, 0x80	; 128
    418e:	5f e3       	ldi	r21, 0x3F	; 63
    4190:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
    4194:	88 23       	and	r24, r24
    4196:	2c f4       	brge	.+10     	; 0x41a2 <LCD_Write_ASCII+0x5ec>
		__ticks = 1;
    4198:	81 e0       	ldi	r24, 0x01	; 1
    419a:	90 e0       	ldi	r25, 0x00	; 0
    419c:	98 ab       	std	Y+48, r25	; 0x30
    419e:	8f a7       	std	Y+47, r24	; 0x2f
    41a0:	3f c0       	rjmp	.+126    	; 0x4220 <LCD_Write_ASCII+0x66a>
	else if (__tmp > 65535)
    41a2:	69 a9       	ldd	r22, Y+49	; 0x31
    41a4:	7a a9       	ldd	r23, Y+50	; 0x32
    41a6:	8b a9       	ldd	r24, Y+51	; 0x33
    41a8:	9c a9       	ldd	r25, Y+52	; 0x34
    41aa:	20 e0       	ldi	r18, 0x00	; 0
    41ac:	3f ef       	ldi	r19, 0xFF	; 255
    41ae:	4f e7       	ldi	r20, 0x7F	; 127
    41b0:	57 e4       	ldi	r21, 0x47	; 71
    41b2:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__gtsf2>
    41b6:	18 16       	cp	r1, r24
    41b8:	4c f5       	brge	.+82     	; 0x420c <LCD_Write_ASCII+0x656>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    41ba:	6d a9       	ldd	r22, Y+53	; 0x35
    41bc:	7e a9       	ldd	r23, Y+54	; 0x36
    41be:	8f a9       	ldd	r24, Y+55	; 0x37
    41c0:	98 ad       	ldd	r25, Y+56	; 0x38
    41c2:	20 e0       	ldi	r18, 0x00	; 0
    41c4:	30 e0       	ldi	r19, 0x00	; 0
    41c6:	40 e2       	ldi	r20, 0x20	; 32
    41c8:	51 e4       	ldi	r21, 0x41	; 65
    41ca:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    41ce:	dc 01       	movw	r26, r24
    41d0:	cb 01       	movw	r24, r22
    41d2:	bc 01       	movw	r22, r24
    41d4:	cd 01       	movw	r24, r26
    41d6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    41da:	dc 01       	movw	r26, r24
    41dc:	cb 01       	movw	r24, r22
    41de:	98 ab       	std	Y+48, r25	; 0x30
    41e0:	8f a7       	std	Y+47, r24	; 0x2f
    41e2:	0f c0       	rjmp	.+30     	; 0x4202 <LCD_Write_ASCII+0x64c>
    41e4:	88 ec       	ldi	r24, 0xC8	; 200
    41e6:	90 e0       	ldi	r25, 0x00	; 0
    41e8:	9e a7       	std	Y+46, r25	; 0x2e
    41ea:	8d a7       	std	Y+45, r24	; 0x2d
    41ec:	8d a5       	ldd	r24, Y+45	; 0x2d
    41ee:	9e a5       	ldd	r25, Y+46	; 0x2e
    41f0:	01 97       	sbiw	r24, 0x01	; 1
    41f2:	f1 f7       	brne	.-4      	; 0x41f0 <LCD_Write_ASCII+0x63a>
    41f4:	9e a7       	std	Y+46, r25	; 0x2e
    41f6:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    41f8:	8f a5       	ldd	r24, Y+47	; 0x2f
    41fa:	98 a9       	ldd	r25, Y+48	; 0x30
    41fc:	01 97       	sbiw	r24, 0x01	; 1
    41fe:	98 ab       	std	Y+48, r25	; 0x30
    4200:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4202:	8f a5       	ldd	r24, Y+47	; 0x2f
    4204:	98 a9       	ldd	r25, Y+48	; 0x30
    4206:	00 97       	sbiw	r24, 0x00	; 0
    4208:	69 f7       	brne	.-38     	; 0x41e4 <LCD_Write_ASCII+0x62e>
    420a:	14 c0       	rjmp	.+40     	; 0x4234 <LCD_Write_ASCII+0x67e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    420c:	69 a9       	ldd	r22, Y+49	; 0x31
    420e:	7a a9       	ldd	r23, Y+50	; 0x32
    4210:	8b a9       	ldd	r24, Y+51	; 0x33
    4212:	9c a9       	ldd	r25, Y+52	; 0x34
    4214:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4218:	dc 01       	movw	r26, r24
    421a:	cb 01       	movw	r24, r22
    421c:	98 ab       	std	Y+48, r25	; 0x30
    421e:	8f a7       	std	Y+47, r24	; 0x2f
    4220:	8f a5       	ldd	r24, Y+47	; 0x2f
    4222:	98 a9       	ldd	r25, Y+48	; 0x30
    4224:	9c a7       	std	Y+44, r25	; 0x2c
    4226:	8b a7       	std	Y+43, r24	; 0x2b
    4228:	8b a5       	ldd	r24, Y+43	; 0x2b
    422a:	9c a5       	ldd	r25, Y+44	; 0x2c
    422c:	01 97       	sbiw	r24, 0x01	; 1
    422e:	f1 f7       	brne	.-4      	; 0x422c <LCD_Write_ASCII+0x676>
    4230:	9c a7       	std	Y+44, r25	; 0x2c
    4232:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);


	PORT_LCD=(PORT_LCD & 0x0f)|((u8Datacopy & 0x0f) <<4 );
    4234:	ab e3       	ldi	r26, 0x3B	; 59
    4236:	b0 e0       	ldi	r27, 0x00	; 0
    4238:	eb e3       	ldi	r30, 0x3B	; 59
    423a:	f0 e0       	ldi	r31, 0x00	; 0
    423c:	80 81       	ld	r24, Z
    423e:	28 2f       	mov	r18, r24
    4240:	2f 70       	andi	r18, 0x0F	; 15
    4242:	fe 01       	movw	r30, r28
    4244:	ef 58       	subi	r30, 0x8F	; 143
    4246:	ff 4f       	sbci	r31, 0xFF	; 255
    4248:	80 81       	ld	r24, Z
    424a:	88 2f       	mov	r24, r24
    424c:	90 e0       	ldi	r25, 0x00	; 0
    424e:	82 95       	swap	r24
    4250:	92 95       	swap	r25
    4252:	90 7f       	andi	r25, 0xF0	; 240
    4254:	98 27       	eor	r25, r24
    4256:	80 7f       	andi	r24, 0xF0	; 240
    4258:	98 27       	eor	r25, r24
    425a:	82 2b       	or	r24, r18
    425c:	8c 93       	st	X, r24
    425e:	80 e0       	ldi	r24, 0x00	; 0
    4260:	90 e0       	ldi	r25, 0x00	; 0
    4262:	a0 e8       	ldi	r26, 0x80	; 128
    4264:	bf e3       	ldi	r27, 0x3F	; 63
    4266:	8f a3       	std	Y+39, r24	; 0x27
    4268:	98 a7       	std	Y+40, r25	; 0x28
    426a:	a9 a7       	std	Y+41, r26	; 0x29
    426c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    426e:	6f a1       	ldd	r22, Y+39	; 0x27
    4270:	78 a5       	ldd	r23, Y+40	; 0x28
    4272:	89 a5       	ldd	r24, Y+41	; 0x29
    4274:	9a a5       	ldd	r25, Y+42	; 0x2a
    4276:	20 e0       	ldi	r18, 0x00	; 0
    4278:	30 e0       	ldi	r19, 0x00	; 0
    427a:	4a ef       	ldi	r20, 0xFA	; 250
    427c:	54 e4       	ldi	r21, 0x44	; 68
    427e:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    4282:	dc 01       	movw	r26, r24
    4284:	cb 01       	movw	r24, r22
    4286:	8b a3       	std	Y+35, r24	; 0x23
    4288:	9c a3       	std	Y+36, r25	; 0x24
    428a:	ad a3       	std	Y+37, r26	; 0x25
    428c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    428e:	6b a1       	ldd	r22, Y+35	; 0x23
    4290:	7c a1       	ldd	r23, Y+36	; 0x24
    4292:	8d a1       	ldd	r24, Y+37	; 0x25
    4294:	9e a1       	ldd	r25, Y+38	; 0x26
    4296:	20 e0       	ldi	r18, 0x00	; 0
    4298:	30 e0       	ldi	r19, 0x00	; 0
    429a:	40 e8       	ldi	r20, 0x80	; 128
    429c:	5f e3       	ldi	r21, 0x3F	; 63
    429e:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
    42a2:	88 23       	and	r24, r24
    42a4:	2c f4       	brge	.+10     	; 0x42b0 <LCD_Write_ASCII+0x6fa>
		__ticks = 1;
    42a6:	81 e0       	ldi	r24, 0x01	; 1
    42a8:	90 e0       	ldi	r25, 0x00	; 0
    42aa:	9a a3       	std	Y+34, r25	; 0x22
    42ac:	89 a3       	std	Y+33, r24	; 0x21
    42ae:	3f c0       	rjmp	.+126    	; 0x432e <LCD_Write_ASCII+0x778>
	else if (__tmp > 65535)
    42b0:	6b a1       	ldd	r22, Y+35	; 0x23
    42b2:	7c a1       	ldd	r23, Y+36	; 0x24
    42b4:	8d a1       	ldd	r24, Y+37	; 0x25
    42b6:	9e a1       	ldd	r25, Y+38	; 0x26
    42b8:	20 e0       	ldi	r18, 0x00	; 0
    42ba:	3f ef       	ldi	r19, 0xFF	; 255
    42bc:	4f e7       	ldi	r20, 0x7F	; 127
    42be:	57 e4       	ldi	r21, 0x47	; 71
    42c0:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__gtsf2>
    42c4:	18 16       	cp	r1, r24
    42c6:	4c f5       	brge	.+82     	; 0x431a <LCD_Write_ASCII+0x764>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    42c8:	6f a1       	ldd	r22, Y+39	; 0x27
    42ca:	78 a5       	ldd	r23, Y+40	; 0x28
    42cc:	89 a5       	ldd	r24, Y+41	; 0x29
    42ce:	9a a5       	ldd	r25, Y+42	; 0x2a
    42d0:	20 e0       	ldi	r18, 0x00	; 0
    42d2:	30 e0       	ldi	r19, 0x00	; 0
    42d4:	40 e2       	ldi	r20, 0x20	; 32
    42d6:	51 e4       	ldi	r21, 0x41	; 65
    42d8:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    42dc:	dc 01       	movw	r26, r24
    42de:	cb 01       	movw	r24, r22
    42e0:	bc 01       	movw	r22, r24
    42e2:	cd 01       	movw	r24, r26
    42e4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    42e8:	dc 01       	movw	r26, r24
    42ea:	cb 01       	movw	r24, r22
    42ec:	9a a3       	std	Y+34, r25	; 0x22
    42ee:	89 a3       	std	Y+33, r24	; 0x21
    42f0:	0f c0       	rjmp	.+30     	; 0x4310 <LCD_Write_ASCII+0x75a>
    42f2:	88 ec       	ldi	r24, 0xC8	; 200
    42f4:	90 e0       	ldi	r25, 0x00	; 0
    42f6:	98 a3       	std	Y+32, r25	; 0x20
    42f8:	8f 8f       	std	Y+31, r24	; 0x1f
    42fa:	8f 8d       	ldd	r24, Y+31	; 0x1f
    42fc:	98 a1       	ldd	r25, Y+32	; 0x20
    42fe:	01 97       	sbiw	r24, 0x01	; 1
    4300:	f1 f7       	brne	.-4      	; 0x42fe <LCD_Write_ASCII+0x748>
    4302:	98 a3       	std	Y+32, r25	; 0x20
    4304:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4306:	89 a1       	ldd	r24, Y+33	; 0x21
    4308:	9a a1       	ldd	r25, Y+34	; 0x22
    430a:	01 97       	sbiw	r24, 0x01	; 1
    430c:	9a a3       	std	Y+34, r25	; 0x22
    430e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4310:	89 a1       	ldd	r24, Y+33	; 0x21
    4312:	9a a1       	ldd	r25, Y+34	; 0x22
    4314:	00 97       	sbiw	r24, 0x00	; 0
    4316:	69 f7       	brne	.-38     	; 0x42f2 <LCD_Write_ASCII+0x73c>
    4318:	14 c0       	rjmp	.+40     	; 0x4342 <LCD_Write_ASCII+0x78c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    431a:	6b a1       	ldd	r22, Y+35	; 0x23
    431c:	7c a1       	ldd	r23, Y+36	; 0x24
    431e:	8d a1       	ldd	r24, Y+37	; 0x25
    4320:	9e a1       	ldd	r25, Y+38	; 0x26
    4322:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4326:	dc 01       	movw	r26, r24
    4328:	cb 01       	movw	r24, r22
    432a:	9a a3       	std	Y+34, r25	; 0x22
    432c:	89 a3       	std	Y+33, r24	; 0x21
    432e:	89 a1       	ldd	r24, Y+33	; 0x21
    4330:	9a a1       	ldd	r25, Y+34	; 0x22
    4332:	9e 8f       	std	Y+30, r25	; 0x1e
    4334:	8d 8f       	std	Y+29, r24	; 0x1d
    4336:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4338:	9e 8d       	ldd	r25, Y+30	; 0x1e
    433a:	01 97       	sbiw	r24, 0x01	; 1
    433c:	f1 f7       	brne	.-4      	; 0x433a <LCD_Write_ASCII+0x784>
    433e:	9e 8f       	std	Y+30, r25	; 0x1e
    4340:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	DIO_WritePin(E_LCD,low);
    4342:	83 e0       	ldi	r24, 0x03	; 3
    4344:	60 e0       	ldi	r22, 0x00	; 0
    4346:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
    434a:	80 e0       	ldi	r24, 0x00	; 0
    434c:	90 e0       	ldi	r25, 0x00	; 0
    434e:	a0 e8       	ldi	r26, 0x80	; 128
    4350:	bf e3       	ldi	r27, 0x3F	; 63
    4352:	89 8f       	std	Y+25, r24	; 0x19
    4354:	9a 8f       	std	Y+26, r25	; 0x1a
    4356:	ab 8f       	std	Y+27, r26	; 0x1b
    4358:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    435a:	69 8d       	ldd	r22, Y+25	; 0x19
    435c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    435e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4360:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4362:	20 e0       	ldi	r18, 0x00	; 0
    4364:	30 e0       	ldi	r19, 0x00	; 0
    4366:	4a ef       	ldi	r20, 0xFA	; 250
    4368:	54 e4       	ldi	r21, 0x44	; 68
    436a:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    436e:	dc 01       	movw	r26, r24
    4370:	cb 01       	movw	r24, r22
    4372:	8d 8b       	std	Y+21, r24	; 0x15
    4374:	9e 8b       	std	Y+22, r25	; 0x16
    4376:	af 8b       	std	Y+23, r26	; 0x17
    4378:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    437a:	6d 89       	ldd	r22, Y+21	; 0x15
    437c:	7e 89       	ldd	r23, Y+22	; 0x16
    437e:	8f 89       	ldd	r24, Y+23	; 0x17
    4380:	98 8d       	ldd	r25, Y+24	; 0x18
    4382:	20 e0       	ldi	r18, 0x00	; 0
    4384:	30 e0       	ldi	r19, 0x00	; 0
    4386:	40 e8       	ldi	r20, 0x80	; 128
    4388:	5f e3       	ldi	r21, 0x3F	; 63
    438a:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
    438e:	88 23       	and	r24, r24
    4390:	2c f4       	brge	.+10     	; 0x439c <LCD_Write_ASCII+0x7e6>
		__ticks = 1;
    4392:	81 e0       	ldi	r24, 0x01	; 1
    4394:	90 e0       	ldi	r25, 0x00	; 0
    4396:	9c 8b       	std	Y+20, r25	; 0x14
    4398:	8b 8b       	std	Y+19, r24	; 0x13
    439a:	3f c0       	rjmp	.+126    	; 0x441a <LCD_Write_ASCII+0x864>
	else if (__tmp > 65535)
    439c:	6d 89       	ldd	r22, Y+21	; 0x15
    439e:	7e 89       	ldd	r23, Y+22	; 0x16
    43a0:	8f 89       	ldd	r24, Y+23	; 0x17
    43a2:	98 8d       	ldd	r25, Y+24	; 0x18
    43a4:	20 e0       	ldi	r18, 0x00	; 0
    43a6:	3f ef       	ldi	r19, 0xFF	; 255
    43a8:	4f e7       	ldi	r20, 0x7F	; 127
    43aa:	57 e4       	ldi	r21, 0x47	; 71
    43ac:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__gtsf2>
    43b0:	18 16       	cp	r1, r24
    43b2:	4c f5       	brge	.+82     	; 0x4406 <LCD_Write_ASCII+0x850>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    43b4:	69 8d       	ldd	r22, Y+25	; 0x19
    43b6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    43b8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    43ba:	9c 8d       	ldd	r25, Y+28	; 0x1c
    43bc:	20 e0       	ldi	r18, 0x00	; 0
    43be:	30 e0       	ldi	r19, 0x00	; 0
    43c0:	40 e2       	ldi	r20, 0x20	; 32
    43c2:	51 e4       	ldi	r21, 0x41	; 65
    43c4:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    43c8:	dc 01       	movw	r26, r24
    43ca:	cb 01       	movw	r24, r22
    43cc:	bc 01       	movw	r22, r24
    43ce:	cd 01       	movw	r24, r26
    43d0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    43d4:	dc 01       	movw	r26, r24
    43d6:	cb 01       	movw	r24, r22
    43d8:	9c 8b       	std	Y+20, r25	; 0x14
    43da:	8b 8b       	std	Y+19, r24	; 0x13
    43dc:	0f c0       	rjmp	.+30     	; 0x43fc <LCD_Write_ASCII+0x846>
    43de:	88 ec       	ldi	r24, 0xC8	; 200
    43e0:	90 e0       	ldi	r25, 0x00	; 0
    43e2:	9a 8b       	std	Y+18, r25	; 0x12
    43e4:	89 8b       	std	Y+17, r24	; 0x11
    43e6:	89 89       	ldd	r24, Y+17	; 0x11
    43e8:	9a 89       	ldd	r25, Y+18	; 0x12
    43ea:	01 97       	sbiw	r24, 0x01	; 1
    43ec:	f1 f7       	brne	.-4      	; 0x43ea <LCD_Write_ASCII+0x834>
    43ee:	9a 8b       	std	Y+18, r25	; 0x12
    43f0:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    43f2:	8b 89       	ldd	r24, Y+19	; 0x13
    43f4:	9c 89       	ldd	r25, Y+20	; 0x14
    43f6:	01 97       	sbiw	r24, 0x01	; 1
    43f8:	9c 8b       	std	Y+20, r25	; 0x14
    43fa:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    43fc:	8b 89       	ldd	r24, Y+19	; 0x13
    43fe:	9c 89       	ldd	r25, Y+20	; 0x14
    4400:	00 97       	sbiw	r24, 0x00	; 0
    4402:	69 f7       	brne	.-38     	; 0x43de <LCD_Write_ASCII+0x828>
    4404:	14 c0       	rjmp	.+40     	; 0x442e <LCD_Write_ASCII+0x878>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4406:	6d 89       	ldd	r22, Y+21	; 0x15
    4408:	7e 89       	ldd	r23, Y+22	; 0x16
    440a:	8f 89       	ldd	r24, Y+23	; 0x17
    440c:	98 8d       	ldd	r25, Y+24	; 0x18
    440e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4412:	dc 01       	movw	r26, r24
    4414:	cb 01       	movw	r24, r22
    4416:	9c 8b       	std	Y+20, r25	; 0x14
    4418:	8b 8b       	std	Y+19, r24	; 0x13
    441a:	8b 89       	ldd	r24, Y+19	; 0x13
    441c:	9c 89       	ldd	r25, Y+20	; 0x14
    441e:	98 8b       	std	Y+16, r25	; 0x10
    4420:	8f 87       	std	Y+15, r24	; 0x0f
    4422:	8f 85       	ldd	r24, Y+15	; 0x0f
    4424:	98 89       	ldd	r25, Y+16	; 0x10
    4426:	01 97       	sbiw	r24, 0x01	; 1
    4428:	f1 f7       	brne	.-4      	; 0x4426 <LCD_Write_ASCII+0x870>
    442a:	98 8b       	std	Y+16, r25	; 0x10
    442c:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_WritePin(E_LCD,high);
    442e:	83 e0       	ldi	r24, 0x03	; 3
    4430:	61 e0       	ldi	r22, 0x01	; 1
    4432:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
    4436:	80 e0       	ldi	r24, 0x00	; 0
    4438:	90 e0       	ldi	r25, 0x00	; 0
    443a:	a0 e7       	ldi	r26, 0x70	; 112
    443c:	b1 e4       	ldi	r27, 0x41	; 65
    443e:	8b 87       	std	Y+11, r24	; 0x0b
    4440:	9c 87       	std	Y+12, r25	; 0x0c
    4442:	ad 87       	std	Y+13, r26	; 0x0d
    4444:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4446:	6b 85       	ldd	r22, Y+11	; 0x0b
    4448:	7c 85       	ldd	r23, Y+12	; 0x0c
    444a:	8d 85       	ldd	r24, Y+13	; 0x0d
    444c:	9e 85       	ldd	r25, Y+14	; 0x0e
    444e:	20 e0       	ldi	r18, 0x00	; 0
    4450:	30 e0       	ldi	r19, 0x00	; 0
    4452:	4a ef       	ldi	r20, 0xFA	; 250
    4454:	54 e4       	ldi	r21, 0x44	; 68
    4456:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    445a:	dc 01       	movw	r26, r24
    445c:	cb 01       	movw	r24, r22
    445e:	8f 83       	std	Y+7, r24	; 0x07
    4460:	98 87       	std	Y+8, r25	; 0x08
    4462:	a9 87       	std	Y+9, r26	; 0x09
    4464:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4466:	6f 81       	ldd	r22, Y+7	; 0x07
    4468:	78 85       	ldd	r23, Y+8	; 0x08
    446a:	89 85       	ldd	r24, Y+9	; 0x09
    446c:	9a 85       	ldd	r25, Y+10	; 0x0a
    446e:	20 e0       	ldi	r18, 0x00	; 0
    4470:	30 e0       	ldi	r19, 0x00	; 0
    4472:	40 e8       	ldi	r20, 0x80	; 128
    4474:	5f e3       	ldi	r21, 0x3F	; 63
    4476:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
    447a:	88 23       	and	r24, r24
    447c:	2c f4       	brge	.+10     	; 0x4488 <LCD_Write_ASCII+0x8d2>
		__ticks = 1;
    447e:	81 e0       	ldi	r24, 0x01	; 1
    4480:	90 e0       	ldi	r25, 0x00	; 0
    4482:	9e 83       	std	Y+6, r25	; 0x06
    4484:	8d 83       	std	Y+5, r24	; 0x05
    4486:	3f c0       	rjmp	.+126    	; 0x4506 <LCD_Write_ASCII+0x950>
	else if (__tmp > 65535)
    4488:	6f 81       	ldd	r22, Y+7	; 0x07
    448a:	78 85       	ldd	r23, Y+8	; 0x08
    448c:	89 85       	ldd	r24, Y+9	; 0x09
    448e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4490:	20 e0       	ldi	r18, 0x00	; 0
    4492:	3f ef       	ldi	r19, 0xFF	; 255
    4494:	4f e7       	ldi	r20, 0x7F	; 127
    4496:	57 e4       	ldi	r21, 0x47	; 71
    4498:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__gtsf2>
    449c:	18 16       	cp	r1, r24
    449e:	4c f5       	brge	.+82     	; 0x44f2 <LCD_Write_ASCII+0x93c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    44a0:	6b 85       	ldd	r22, Y+11	; 0x0b
    44a2:	7c 85       	ldd	r23, Y+12	; 0x0c
    44a4:	8d 85       	ldd	r24, Y+13	; 0x0d
    44a6:	9e 85       	ldd	r25, Y+14	; 0x0e
    44a8:	20 e0       	ldi	r18, 0x00	; 0
    44aa:	30 e0       	ldi	r19, 0x00	; 0
    44ac:	40 e2       	ldi	r20, 0x20	; 32
    44ae:	51 e4       	ldi	r21, 0x41	; 65
    44b0:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    44b4:	dc 01       	movw	r26, r24
    44b6:	cb 01       	movw	r24, r22
    44b8:	bc 01       	movw	r22, r24
    44ba:	cd 01       	movw	r24, r26
    44bc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    44c0:	dc 01       	movw	r26, r24
    44c2:	cb 01       	movw	r24, r22
    44c4:	9e 83       	std	Y+6, r25	; 0x06
    44c6:	8d 83       	std	Y+5, r24	; 0x05
    44c8:	0f c0       	rjmp	.+30     	; 0x44e8 <LCD_Write_ASCII+0x932>
    44ca:	88 ec       	ldi	r24, 0xC8	; 200
    44cc:	90 e0       	ldi	r25, 0x00	; 0
    44ce:	9c 83       	std	Y+4, r25	; 0x04
    44d0:	8b 83       	std	Y+3, r24	; 0x03
    44d2:	8b 81       	ldd	r24, Y+3	; 0x03
    44d4:	9c 81       	ldd	r25, Y+4	; 0x04
    44d6:	01 97       	sbiw	r24, 0x01	; 1
    44d8:	f1 f7       	brne	.-4      	; 0x44d6 <LCD_Write_ASCII+0x920>
    44da:	9c 83       	std	Y+4, r25	; 0x04
    44dc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    44de:	8d 81       	ldd	r24, Y+5	; 0x05
    44e0:	9e 81       	ldd	r25, Y+6	; 0x06
    44e2:	01 97       	sbiw	r24, 0x01	; 1
    44e4:	9e 83       	std	Y+6, r25	; 0x06
    44e6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    44e8:	8d 81       	ldd	r24, Y+5	; 0x05
    44ea:	9e 81       	ldd	r25, Y+6	; 0x06
    44ec:	00 97       	sbiw	r24, 0x00	; 0
    44ee:	69 f7       	brne	.-38     	; 0x44ca <LCD_Write_ASCII+0x914>
    44f0:	14 c0       	rjmp	.+40     	; 0x451a <LCD_Write_ASCII+0x964>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    44f2:	6f 81       	ldd	r22, Y+7	; 0x07
    44f4:	78 85       	ldd	r23, Y+8	; 0x08
    44f6:	89 85       	ldd	r24, Y+9	; 0x09
    44f8:	9a 85       	ldd	r25, Y+10	; 0x0a
    44fa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    44fe:	dc 01       	movw	r26, r24
    4500:	cb 01       	movw	r24, r22
    4502:	9e 83       	std	Y+6, r25	; 0x06
    4504:	8d 83       	std	Y+5, r24	; 0x05
    4506:	8d 81       	ldd	r24, Y+5	; 0x05
    4508:	9e 81       	ldd	r25, Y+6	; 0x06
    450a:	9a 83       	std	Y+2, r25	; 0x02
    450c:	89 83       	std	Y+1, r24	; 0x01
    450e:	89 81       	ldd	r24, Y+1	; 0x01
    4510:	9a 81       	ldd	r25, Y+2	; 0x02
    4512:	01 97       	sbiw	r24, 0x01	; 1
    4514:	f1 f7       	brne	.-4      	; 0x4512 <LCD_Write_ASCII+0x95c>
    4516:	9a 83       	std	Y+2, r25	; 0x02
    4518:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(15);

}
    451a:	cf 58       	subi	r28, 0x8F	; 143
    451c:	df 4f       	sbci	r29, 0xFF	; 255
    451e:	0f b6       	in	r0, 0x3f	; 63
    4520:	f8 94       	cli
    4522:	de bf       	out	0x3e, r29	; 62
    4524:	0f be       	out	0x3f, r0	; 63
    4526:	cd bf       	out	0x3d, r28	; 61
    4528:	cf 91       	pop	r28
    452a:	df 91       	pop	r29
    452c:	1f 91       	pop	r17
    452e:	0f 91       	pop	r16
    4530:	08 95       	ret

00004532 <LCD_GOTO>:


void LCD_GOTO (uint8 LINE,uint8 COLUMN)
{
    4532:	df 93       	push	r29
    4534:	cf 93       	push	r28
    4536:	00 d0       	rcall	.+0      	; 0x4538 <LCD_GOTO+0x6>
    4538:	00 d0       	rcall	.+0      	; 0x453a <LCD_GOTO+0x8>
    453a:	cd b7       	in	r28, 0x3d	; 61
    453c:	de b7       	in	r29, 0x3e	; 62
    453e:	89 83       	std	Y+1, r24	; 0x01
    4540:	6a 83       	std	Y+2, r22	; 0x02
	if ( ( COLUMN > COLUMN_MIN ) && ( COLUMN <= COLUMN_MAX ) )
    4542:	8a 81       	ldd	r24, Y+2	; 0x02
    4544:	88 23       	and	r24, r24
    4546:	e1 f0       	breq	.+56     	; 0x4580 <LCD_GOTO+0x4e>
    4548:	8a 81       	ldd	r24, Y+2	; 0x02
    454a:	81 31       	cpi	r24, 0x11	; 17
    454c:	c8 f4       	brcc	.+50     	; 0x4580 <LCD_GOTO+0x4e>
	{
		switch (LINE)
    454e:	89 81       	ldd	r24, Y+1	; 0x01
    4550:	28 2f       	mov	r18, r24
    4552:	30 e0       	ldi	r19, 0x00	; 0
    4554:	3c 83       	std	Y+4, r19	; 0x04
    4556:	2b 83       	std	Y+3, r18	; 0x03
    4558:	8b 81       	ldd	r24, Y+3	; 0x03
    455a:	9c 81       	ldd	r25, Y+4	; 0x04
    455c:	81 30       	cpi	r24, 0x01	; 1
    455e:	91 05       	cpc	r25, r1
    4560:	31 f0       	breq	.+12     	; 0x456e <LCD_GOTO+0x3c>
    4562:	2b 81       	ldd	r18, Y+3	; 0x03
    4564:	3c 81       	ldd	r19, Y+4	; 0x04
    4566:	22 30       	cpi	r18, 0x02	; 2
    4568:	31 05       	cpc	r19, r1
    456a:	31 f0       	breq	.+12     	; 0x4578 <LCD_GOTO+0x46>
    456c:	09 c0       	rjmp	.+18     	; 0x4580 <LCD_GOTO+0x4e>
		{
			case LINE_1 :
							LCD_Command( ( lcd_line_1_address ) + ( COLUMN ) );
    456e:	8a 81       	ldd	r24, Y+2	; 0x02
    4570:	81 58       	subi	r24, 0x81	; 129
    4572:	0e 94 1d 19 	call	0x323a	; 0x323a <LCD_Command>
    4576:	04 c0       	rjmp	.+8      	; 0x4580 <LCD_GOTO+0x4e>
							break;

			case LINE_2 :
							LCD_Command( ( lcd_line_2_address ) + ( COLUMN ) );
    4578:	8a 81       	ldd	r24, Y+2	; 0x02
    457a:	81 54       	subi	r24, 0x41	; 65
    457c:	0e 94 1d 19 	call	0x323a	; 0x323a <LCD_Command>
	else
	{

	}

}
    4580:	0f 90       	pop	r0
    4582:	0f 90       	pop	r0
    4584:	0f 90       	pop	r0
    4586:	0f 90       	pop	r0
    4588:	cf 91       	pop	r28
    458a:	df 91       	pop	r29
    458c:	08 95       	ret

0000458e <LCD_Write_Word>:


void LCD_Write_Word(uint8* word)
{
    458e:	df 93       	push	r29
    4590:	cf 93       	push	r28
    4592:	00 d0       	rcall	.+0      	; 0x4594 <LCD_Write_Word+0x6>
    4594:	0f 92       	push	r0
    4596:	cd b7       	in	r28, 0x3d	; 61
    4598:	de b7       	in	r29, 0x3e	; 62
    459a:	9b 83       	std	Y+3, r25	; 0x03
    459c:	8a 83       	std	Y+2, r24	; 0x02
	uint8 iterator;
	for( iterator=0;word[iterator]!=0;iterator++ )
    459e:	19 82       	std	Y+1, r1	; 0x01
    45a0:	0e c0       	rjmp	.+28     	; 0x45be <LCD_Write_Word+0x30>
	{
		LCD_Write_ASCII( word[iterator] );
    45a2:	89 81       	ldd	r24, Y+1	; 0x01
    45a4:	28 2f       	mov	r18, r24
    45a6:	30 e0       	ldi	r19, 0x00	; 0
    45a8:	8a 81       	ldd	r24, Y+2	; 0x02
    45aa:	9b 81       	ldd	r25, Y+3	; 0x03
    45ac:	fc 01       	movw	r30, r24
    45ae:	e2 0f       	add	r30, r18
    45b0:	f3 1f       	adc	r31, r19
    45b2:	80 81       	ld	r24, Z
    45b4:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <LCD_Write_ASCII>


void LCD_Write_Word(uint8* word)
{
	uint8 iterator;
	for( iterator=0;word[iterator]!=0;iterator++ )
    45b8:	89 81       	ldd	r24, Y+1	; 0x01
    45ba:	8f 5f       	subi	r24, 0xFF	; 255
    45bc:	89 83       	std	Y+1, r24	; 0x01
    45be:	89 81       	ldd	r24, Y+1	; 0x01
    45c0:	28 2f       	mov	r18, r24
    45c2:	30 e0       	ldi	r19, 0x00	; 0
    45c4:	8a 81       	ldd	r24, Y+2	; 0x02
    45c6:	9b 81       	ldd	r25, Y+3	; 0x03
    45c8:	fc 01       	movw	r30, r24
    45ca:	e2 0f       	add	r30, r18
    45cc:	f3 1f       	adc	r31, r19
    45ce:	80 81       	ld	r24, Z
    45d0:	88 23       	and	r24, r24
    45d2:	39 f7       	brne	.-50     	; 0x45a2 <LCD_Write_Word+0x14>
	{
		LCD_Write_ASCII( word[iterator] );
	}

}
    45d4:	0f 90       	pop	r0
    45d6:	0f 90       	pop	r0
    45d8:	0f 90       	pop	r0
    45da:	cf 91       	pop	r28
    45dc:	df 91       	pop	r29
    45de:	08 95       	ret

000045e0 <reverse>:


// a function to reverse a string
void reverse (uint8 *str, uint8 length)
{
    45e0:	df 93       	push	r29
    45e2:	cf 93       	push	r28
    45e4:	00 d0       	rcall	.+0      	; 0x45e6 <reverse+0x6>
    45e6:	00 d0       	rcall	.+0      	; 0x45e8 <reverse+0x8>
    45e8:	00 d0       	rcall	.+0      	; 0x45ea <reverse+0xa>
    45ea:	cd b7       	in	r28, 0x3d	; 61
    45ec:	de b7       	in	r29, 0x3e	; 62
    45ee:	9d 83       	std	Y+5, r25	; 0x05
    45f0:	8c 83       	std	Y+4, r24	; 0x04
    45f2:	6e 83       	std	Y+6, r22	; 0x06
	uint8 start = 0;
    45f4:	1b 82       	std	Y+3, r1	; 0x03
	uint8 end = length-1;
    45f6:	8e 81       	ldd	r24, Y+6	; 0x06
    45f8:	81 50       	subi	r24, 0x01	; 1
    45fa:	8a 83       	std	Y+2, r24	; 0x02
    45fc:	2c c0       	rjmp	.+88     	; 0x4656 <reverse+0x76>
	while( start < end )
	{
		uint8 temp = str[start] ;
    45fe:	8b 81       	ldd	r24, Y+3	; 0x03
    4600:	28 2f       	mov	r18, r24
    4602:	30 e0       	ldi	r19, 0x00	; 0
    4604:	8c 81       	ldd	r24, Y+4	; 0x04
    4606:	9d 81       	ldd	r25, Y+5	; 0x05
    4608:	fc 01       	movw	r30, r24
    460a:	e2 0f       	add	r30, r18
    460c:	f3 1f       	adc	r31, r19
    460e:	80 81       	ld	r24, Z
    4610:	89 83       	std	Y+1, r24	; 0x01

		str[start] = str[end];
    4612:	8b 81       	ldd	r24, Y+3	; 0x03
    4614:	28 2f       	mov	r18, r24
    4616:	30 e0       	ldi	r19, 0x00	; 0
    4618:	8c 81       	ldd	r24, Y+4	; 0x04
    461a:	9d 81       	ldd	r25, Y+5	; 0x05
    461c:	dc 01       	movw	r26, r24
    461e:	a2 0f       	add	r26, r18
    4620:	b3 1f       	adc	r27, r19
    4622:	8a 81       	ldd	r24, Y+2	; 0x02
    4624:	28 2f       	mov	r18, r24
    4626:	30 e0       	ldi	r19, 0x00	; 0
    4628:	8c 81       	ldd	r24, Y+4	; 0x04
    462a:	9d 81       	ldd	r25, Y+5	; 0x05
    462c:	fc 01       	movw	r30, r24
    462e:	e2 0f       	add	r30, r18
    4630:	f3 1f       	adc	r31, r19
    4632:	80 81       	ld	r24, Z
    4634:	8c 93       	st	X, r24

		str[end] = temp;
    4636:	8a 81       	ldd	r24, Y+2	; 0x02
    4638:	28 2f       	mov	r18, r24
    463a:	30 e0       	ldi	r19, 0x00	; 0
    463c:	8c 81       	ldd	r24, Y+4	; 0x04
    463e:	9d 81       	ldd	r25, Y+5	; 0x05
    4640:	fc 01       	movw	r30, r24
    4642:	e2 0f       	add	r30, r18
    4644:	f3 1f       	adc	r31, r19
    4646:	89 81       	ldd	r24, Y+1	; 0x01
    4648:	80 83       	st	Z, r24

		start++;
    464a:	8b 81       	ldd	r24, Y+3	; 0x03
    464c:	8f 5f       	subi	r24, 0xFF	; 255
    464e:	8b 83       	std	Y+3, r24	; 0x03
		end--;
    4650:	8a 81       	ldd	r24, Y+2	; 0x02
    4652:	81 50       	subi	r24, 0x01	; 1
    4654:	8a 83       	std	Y+2, r24	; 0x02
// a function to reverse a string
void reverse (uint8 *str, uint8 length)
{
	uint8 start = 0;
	uint8 end = length-1;
	while( start < end )
    4656:	9b 81       	ldd	r25, Y+3	; 0x03
    4658:	8a 81       	ldd	r24, Y+2	; 0x02
    465a:	98 17       	cp	r25, r24
    465c:	80 f2       	brcs	.-96     	; 0x45fe <reverse+0x1e>

		start++;
		end--;
	}

}
    465e:	26 96       	adiw	r28, 0x06	; 6
    4660:	0f b6       	in	r0, 0x3f	; 63
    4662:	f8 94       	cli
    4664:	de bf       	out	0x3e, r29	; 62
    4666:	0f be       	out	0x3f, r0	; 63
    4668:	cd bf       	out	0x3d, r28	; 61
    466a:	cf 91       	pop	r28
    466c:	df 91       	pop	r29
    466e:	08 95       	ret

00004670 <integer_to_string>:


uint8* integer_to_string (sint32 number,uint8* str,uint8 base)

{
    4670:	df 93       	push	r29
    4672:	cf 93       	push	r28
    4674:	cd b7       	in	r28, 0x3d	; 61
    4676:	de b7       	in	r29, 0x3e	; 62
    4678:	2c 97       	sbiw	r28, 0x0c	; 12
    467a:	0f b6       	in	r0, 0x3f	; 63
    467c:	f8 94       	cli
    467e:	de bf       	out	0x3e, r29	; 62
    4680:	0f be       	out	0x3f, r0	; 63
    4682:	cd bf       	out	0x3d, r28	; 61
    4684:	6c 83       	std	Y+4, r22	; 0x04
    4686:	7d 83       	std	Y+5, r23	; 0x05
    4688:	8e 83       	std	Y+6, r24	; 0x06
    468a:	9f 83       	std	Y+7, r25	; 0x07
    468c:	59 87       	std	Y+9, r21	; 0x09
    468e:	48 87       	std	Y+8, r20	; 0x08
    4690:	2a 87       	std	Y+10, r18	; 0x0a
	// index for length

	uint8 i = 0;
    4692:	1b 82       	std	Y+3, r1	; 0x03
	uint8 isNegative = 0;
    4694:	1a 82       	std	Y+2, r1	; 0x02

	// Handle 0 explicitely

	if (number == 0)
    4696:	8c 81       	ldd	r24, Y+4	; 0x04
    4698:	9d 81       	ldd	r25, Y+5	; 0x05
    469a:	ae 81       	ldd	r26, Y+6	; 0x06
    469c:	bf 81       	ldd	r27, Y+7	; 0x07
    469e:	00 97       	sbiw	r24, 0x00	; 0
    46a0:	a1 05       	cpc	r26, r1
    46a2:	b1 05       	cpc	r27, r1
    46a4:	d9 f4       	brne	.+54     	; 0x46dc <integer_to_string+0x6c>
	{
		str[i++] = '0';
    46a6:	8b 81       	ldd	r24, Y+3	; 0x03
    46a8:	28 2f       	mov	r18, r24
    46aa:	30 e0       	ldi	r19, 0x00	; 0
    46ac:	88 85       	ldd	r24, Y+8	; 0x08
    46ae:	99 85       	ldd	r25, Y+9	; 0x09
    46b0:	fc 01       	movw	r30, r24
    46b2:	e2 0f       	add	r30, r18
    46b4:	f3 1f       	adc	r31, r19
    46b6:	80 e3       	ldi	r24, 0x30	; 48
    46b8:	80 83       	st	Z, r24
    46ba:	8b 81       	ldd	r24, Y+3	; 0x03
    46bc:	8f 5f       	subi	r24, 0xFF	; 255
    46be:	8b 83       	std	Y+3, r24	; 0x03
		str[i] = '\0';  // the end of the string
    46c0:	8b 81       	ldd	r24, Y+3	; 0x03
    46c2:	28 2f       	mov	r18, r24
    46c4:	30 e0       	ldi	r19, 0x00	; 0
    46c6:	88 85       	ldd	r24, Y+8	; 0x08
    46c8:	99 85       	ldd	r25, Y+9	; 0x09
    46ca:	fc 01       	movw	r30, r24
    46cc:	e2 0f       	add	r30, r18
    46ce:	f3 1f       	adc	r31, r19
    46d0:	10 82       	st	Z, r1
		return str;
    46d2:	88 85       	ldd	r24, Y+8	; 0x08
    46d4:	99 85       	ldd	r25, Y+9	; 0x09
    46d6:	9c 87       	std	Y+12, r25	; 0x0c
    46d8:	8b 87       	std	Y+11, r24	; 0x0b
    46da:	8b c0       	rjmp	.+278    	; 0x47f2 <integer_to_string+0x182>
	}

	// negative numbers are handled only with
	// base 10. Otherwise numbers are considered unsigned

	if (number <0 && base ==10)
    46dc:	8c 81       	ldd	r24, Y+4	; 0x04
    46de:	9d 81       	ldd	r25, Y+5	; 0x05
    46e0:	ae 81       	ldd	r26, Y+6	; 0x06
    46e2:	bf 81       	ldd	r27, Y+7	; 0x07
    46e4:	bb 23       	and	r27, r27
    46e6:	0c f0       	brlt	.+2      	; 0x46ea <integer_to_string+0x7a>
    46e8:	59 c0       	rjmp	.+178    	; 0x479c <integer_to_string+0x12c>
    46ea:	8a 85       	ldd	r24, Y+10	; 0x0a
    46ec:	8a 30       	cpi	r24, 0x0A	; 10
    46ee:	09 f0       	breq	.+2      	; 0x46f2 <integer_to_string+0x82>
    46f0:	55 c0       	rjmp	.+170    	; 0x479c <integer_to_string+0x12c>
	{
		isNegative = 1;
    46f2:	81 e0       	ldi	r24, 0x01	; 1
    46f4:	8a 83       	std	Y+2, r24	; 0x02
		number = -number; // to get the absolute value of the number
    46f6:	8c 81       	ldd	r24, Y+4	; 0x04
    46f8:	9d 81       	ldd	r25, Y+5	; 0x05
    46fa:	ae 81       	ldd	r26, Y+6	; 0x06
    46fc:	bf 81       	ldd	r27, Y+7	; 0x07
    46fe:	b0 95       	com	r27
    4700:	a0 95       	com	r26
    4702:	90 95       	com	r25
    4704:	81 95       	neg	r24
    4706:	9f 4f       	sbci	r25, 0xFF	; 255
    4708:	af 4f       	sbci	r26, 0xFF	; 255
    470a:	bf 4f       	sbci	r27, 0xFF	; 255
    470c:	8c 83       	std	Y+4, r24	; 0x04
    470e:	9d 83       	std	Y+5, r25	; 0x05
    4710:	ae 83       	std	Y+6, r26	; 0x06
    4712:	bf 83       	std	Y+7, r27	; 0x07
    4714:	43 c0       	rjmp	.+134    	; 0x479c <integer_to_string+0x12c>
	}

	while (number != 0)
	{

		uint8 remainder = number % base ;
    4716:	8a 85       	ldd	r24, Y+10	; 0x0a
    4718:	28 2f       	mov	r18, r24
    471a:	30 e0       	ldi	r19, 0x00	; 0
    471c:	40 e0       	ldi	r20, 0x00	; 0
    471e:	50 e0       	ldi	r21, 0x00	; 0
    4720:	8c 81       	ldd	r24, Y+4	; 0x04
    4722:	9d 81       	ldd	r25, Y+5	; 0x05
    4724:	ae 81       	ldd	r26, Y+6	; 0x06
    4726:	bf 81       	ldd	r27, Y+7	; 0x07
    4728:	bc 01       	movw	r22, r24
    472a:	cd 01       	movw	r24, r26
    472c:	0e 94 36 30 	call	0x606c	; 0x606c <__divmodsi4>
    4730:	dc 01       	movw	r26, r24
    4732:	cb 01       	movw	r24, r22
    4734:	89 83       	std	Y+1, r24	; 0x01
		if (remainder > 9)
    4736:	89 81       	ldd	r24, Y+1	; 0x01
    4738:	8a 30       	cpi	r24, 0x0A	; 10
    473a:	78 f0       	brcs	.+30     	; 0x475a <integer_to_string+0xea>
		{
			str[i++] = (remainder-10) + 'A';  // for hexa-decimal only
    473c:	8b 81       	ldd	r24, Y+3	; 0x03
    473e:	28 2f       	mov	r18, r24
    4740:	30 e0       	ldi	r19, 0x00	; 0
    4742:	88 85       	ldd	r24, Y+8	; 0x08
    4744:	99 85       	ldd	r25, Y+9	; 0x09
    4746:	fc 01       	movw	r30, r24
    4748:	e2 0f       	add	r30, r18
    474a:	f3 1f       	adc	r31, r19
    474c:	89 81       	ldd	r24, Y+1	; 0x01
    474e:	89 5c       	subi	r24, 0xC9	; 201
    4750:	80 83       	st	Z, r24
    4752:	8b 81       	ldd	r24, Y+3	; 0x03
    4754:	8f 5f       	subi	r24, 0xFF	; 255
    4756:	8b 83       	std	Y+3, r24	; 0x03
    4758:	0e c0       	rjmp	.+28     	; 0x4776 <integer_to_string+0x106>

		}
		else
		{
			str[i++] = remainder + '0';
    475a:	8b 81       	ldd	r24, Y+3	; 0x03
    475c:	28 2f       	mov	r18, r24
    475e:	30 e0       	ldi	r19, 0x00	; 0
    4760:	88 85       	ldd	r24, Y+8	; 0x08
    4762:	99 85       	ldd	r25, Y+9	; 0x09
    4764:	fc 01       	movw	r30, r24
    4766:	e2 0f       	add	r30, r18
    4768:	f3 1f       	adc	r31, r19
    476a:	89 81       	ldd	r24, Y+1	; 0x01
    476c:	80 5d       	subi	r24, 0xD0	; 208
    476e:	80 83       	st	Z, r24
    4770:	8b 81       	ldd	r24, Y+3	; 0x03
    4772:	8f 5f       	subi	r24, 0xFF	; 255
    4774:	8b 83       	std	Y+3, r24	; 0x03
		}
		number=number/base;
    4776:	8a 85       	ldd	r24, Y+10	; 0x0a
    4778:	28 2f       	mov	r18, r24
    477a:	30 e0       	ldi	r19, 0x00	; 0
    477c:	40 e0       	ldi	r20, 0x00	; 0
    477e:	50 e0       	ldi	r21, 0x00	; 0
    4780:	8c 81       	ldd	r24, Y+4	; 0x04
    4782:	9d 81       	ldd	r25, Y+5	; 0x05
    4784:	ae 81       	ldd	r26, Y+6	; 0x06
    4786:	bf 81       	ldd	r27, Y+7	; 0x07
    4788:	bc 01       	movw	r22, r24
    478a:	cd 01       	movw	r24, r26
    478c:	0e 94 36 30 	call	0x606c	; 0x606c <__divmodsi4>
    4790:	da 01       	movw	r26, r20
    4792:	c9 01       	movw	r24, r18
    4794:	8c 83       	std	Y+4, r24	; 0x04
    4796:	9d 83       	std	Y+5, r25	; 0x05
    4798:	ae 83       	std	Y+6, r26	; 0x06
    479a:	bf 83       	std	Y+7, r27	; 0x07
	{
		isNegative = 1;
		number = -number; // to get the absolute value of the number
	}

	while (number != 0)
    479c:	8c 81       	ldd	r24, Y+4	; 0x04
    479e:	9d 81       	ldd	r25, Y+5	; 0x05
    47a0:	ae 81       	ldd	r26, Y+6	; 0x06
    47a2:	bf 81       	ldd	r27, Y+7	; 0x07
    47a4:	00 97       	sbiw	r24, 0x00	; 0
    47a6:	a1 05       	cpc	r26, r1
    47a8:	b1 05       	cpc	r27, r1
    47aa:	09 f0       	breq	.+2      	; 0x47ae <integer_to_string+0x13e>
    47ac:	b4 cf       	rjmp	.-152    	; 0x4716 <integer_to_string+0xa6>
			str[i++] = remainder + '0';
		}
		number=number/base;
	}

	if (isNegative)
    47ae:	8a 81       	ldd	r24, Y+2	; 0x02
    47b0:	88 23       	and	r24, r24
    47b2:	69 f0       	breq	.+26     	; 0x47ce <integer_to_string+0x15e>
	{
		str[i++] = '-';
    47b4:	8b 81       	ldd	r24, Y+3	; 0x03
    47b6:	28 2f       	mov	r18, r24
    47b8:	30 e0       	ldi	r19, 0x00	; 0
    47ba:	88 85       	ldd	r24, Y+8	; 0x08
    47bc:	99 85       	ldd	r25, Y+9	; 0x09
    47be:	fc 01       	movw	r30, r24
    47c0:	e2 0f       	add	r30, r18
    47c2:	f3 1f       	adc	r31, r19
    47c4:	8d e2       	ldi	r24, 0x2D	; 45
    47c6:	80 83       	st	Z, r24
    47c8:	8b 81       	ldd	r24, Y+3	; 0x03
    47ca:	8f 5f       	subi	r24, 0xFF	; 255
    47cc:	8b 83       	std	Y+3, r24	; 0x03
	}

	str[i] = '\0';  // the end of the string
    47ce:	8b 81       	ldd	r24, Y+3	; 0x03
    47d0:	28 2f       	mov	r18, r24
    47d2:	30 e0       	ldi	r19, 0x00	; 0
    47d4:	88 85       	ldd	r24, Y+8	; 0x08
    47d6:	99 85       	ldd	r25, Y+9	; 0x09
    47d8:	fc 01       	movw	r30, r24
    47da:	e2 0f       	add	r30, r18
    47dc:	f3 1f       	adc	r31, r19
    47de:	10 82       	st	Z, r1

	reverse(str,i); // where i  index for the length of the string
    47e0:	88 85       	ldd	r24, Y+8	; 0x08
    47e2:	99 85       	ldd	r25, Y+9	; 0x09
    47e4:	6b 81       	ldd	r22, Y+3	; 0x03
    47e6:	0e 94 f0 22 	call	0x45e0	; 0x45e0 <reverse>

	return str;
    47ea:	88 85       	ldd	r24, Y+8	; 0x08
    47ec:	99 85       	ldd	r25, Y+9	; 0x09
    47ee:	9c 87       	std	Y+12, r25	; 0x0c
    47f0:	8b 87       	std	Y+11, r24	; 0x0b
    47f2:	8b 85       	ldd	r24, Y+11	; 0x0b
    47f4:	9c 85       	ldd	r25, Y+12	; 0x0c
}
    47f6:	2c 96       	adiw	r28, 0x0c	; 12
    47f8:	0f b6       	in	r0, 0x3f	; 63
    47fa:	f8 94       	cli
    47fc:	de bf       	out	0x3e, r29	; 62
    47fe:	0f be       	out	0x3f, r0	; 63
    4800:	cd bf       	out	0x3d, r28	; 61
    4802:	cf 91       	pop	r28
    4804:	df 91       	pop	r29
    4806:	08 95       	ret

00004808 <LCD_Write_Integer_Number>:


void LCD_Write_Integer_Number (sint32 number )
{
    4808:	df 93       	push	r29
    480a:	cf 93       	push	r28
    480c:	cd b7       	in	r28, 0x3d	; 61
    480e:	de b7       	in	r29, 0x3e	; 62
    4810:	64 97       	sbiw	r28, 0x14	; 20
    4812:	0f b6       	in	r0, 0x3f	; 63
    4814:	f8 94       	cli
    4816:	de bf       	out	0x3e, r29	; 62
    4818:	0f be       	out	0x3f, r0	; 63
    481a:	cd bf       	out	0x3d, r28	; 61
    481c:	69 8b       	std	Y+17, r22	; 0x11
    481e:	7a 8b       	std	Y+18, r23	; 0x12
    4820:	8b 8b       	std	Y+19, r24	; 0x13
    4822:	9c 8b       	std	Y+20, r25	; 0x14
	uint8 str[16];
	integer_to_string(number,str,10) ;
    4824:	89 89       	ldd	r24, Y+17	; 0x11
    4826:	9a 89       	ldd	r25, Y+18	; 0x12
    4828:	ab 89       	ldd	r26, Y+19	; 0x13
    482a:	bc 89       	ldd	r27, Y+20	; 0x14
    482c:	bc 01       	movw	r22, r24
    482e:	cd 01       	movw	r24, r26
    4830:	9e 01       	movw	r18, r28
    4832:	2f 5f       	subi	r18, 0xFF	; 255
    4834:	3f 4f       	sbci	r19, 0xFF	; 255
    4836:	a9 01       	movw	r20, r18
    4838:	2a e0       	ldi	r18, 0x0A	; 10
    483a:	0e 94 38 23 	call	0x4670	; 0x4670 <integer_to_string>

	LCD_Write_Word((uint8*)str);
    483e:	ce 01       	movw	r24, r28
    4840:	01 96       	adiw	r24, 0x01	; 1
    4842:	0e 94 c7 22 	call	0x458e	; 0x458e <LCD_Write_Word>

}
    4846:	64 96       	adiw	r28, 0x14	; 20
    4848:	0f b6       	in	r0, 0x3f	; 63
    484a:	f8 94       	cli
    484c:	de bf       	out	0x3e, r29	; 62
    484e:	0f be       	out	0x3f, r0	; 63
    4850:	cd bf       	out	0x3d, r28	; 61
    4852:	cf 91       	pop	r28
    4854:	df 91       	pop	r29
    4856:	08 95       	ret

00004858 <DIO_WritePin>:
 *  Created on: ???/???/????
 *      Author: Mina
 */
#include "dio.h"
void DIO_WritePin (uint8 PinNum , uint8 PinValue)
{
    4858:	df 93       	push	r29
    485a:	cf 93       	push	r28
    485c:	00 d0       	rcall	.+0      	; 0x485e <DIO_WritePin+0x6>
    485e:	cd b7       	in	r28, 0x3d	; 61
    4860:	de b7       	in	r29, 0x3e	; 62
    4862:	89 83       	std	Y+1, r24	; 0x01
    4864:	6a 83       	std	Y+2, r22	; 0x02
	if((PinNum>=0)&&(PinNum<=7))
    4866:	89 81       	ldd	r24, Y+1	; 0x01
    4868:	88 30       	cpi	r24, 0x08	; 8
    486a:	60 f5       	brcc	.+88     	; 0x48c4 <DIO_WritePin+0x6c>
	{
		if(PinValue==0)
    486c:	8a 81       	ldd	r24, Y+2	; 0x02
    486e:	88 23       	and	r24, r24
    4870:	a9 f4       	brne	.+42     	; 0x489c <DIO_WritePin+0x44>
		{
			Clear_Bit(PORTA,PinNum);
    4872:	ab e3       	ldi	r26, 0x3B	; 59
    4874:	b0 e0       	ldi	r27, 0x00	; 0
    4876:	eb e3       	ldi	r30, 0x3B	; 59
    4878:	f0 e0       	ldi	r31, 0x00	; 0
    487a:	80 81       	ld	r24, Z
    487c:	48 2f       	mov	r20, r24
    487e:	89 81       	ldd	r24, Y+1	; 0x01
    4880:	28 2f       	mov	r18, r24
    4882:	30 e0       	ldi	r19, 0x00	; 0
    4884:	81 e0       	ldi	r24, 0x01	; 1
    4886:	90 e0       	ldi	r25, 0x00	; 0
    4888:	02 2e       	mov	r0, r18
    488a:	02 c0       	rjmp	.+4      	; 0x4890 <DIO_WritePin+0x38>
    488c:	88 0f       	add	r24, r24
    488e:	99 1f       	adc	r25, r25
    4890:	0a 94       	dec	r0
    4892:	e2 f7       	brpl	.-8      	; 0x488c <DIO_WritePin+0x34>
    4894:	80 95       	com	r24
    4896:	84 23       	and	r24, r20
    4898:	8c 93       	st	X, r24
    489a:	bb c0       	rjmp	.+374    	; 0x4a12 <DIO_WritePin+0x1ba>
		}
		else
		{
			Set_Bit(PORTA,PinNum);
    489c:	ab e3       	ldi	r26, 0x3B	; 59
    489e:	b0 e0       	ldi	r27, 0x00	; 0
    48a0:	eb e3       	ldi	r30, 0x3B	; 59
    48a2:	f0 e0       	ldi	r31, 0x00	; 0
    48a4:	80 81       	ld	r24, Z
    48a6:	48 2f       	mov	r20, r24
    48a8:	89 81       	ldd	r24, Y+1	; 0x01
    48aa:	28 2f       	mov	r18, r24
    48ac:	30 e0       	ldi	r19, 0x00	; 0
    48ae:	81 e0       	ldi	r24, 0x01	; 1
    48b0:	90 e0       	ldi	r25, 0x00	; 0
    48b2:	02 2e       	mov	r0, r18
    48b4:	02 c0       	rjmp	.+4      	; 0x48ba <DIO_WritePin+0x62>
    48b6:	88 0f       	add	r24, r24
    48b8:	99 1f       	adc	r25, r25
    48ba:	0a 94       	dec	r0
    48bc:	e2 f7       	brpl	.-8      	; 0x48b6 <DIO_WritePin+0x5e>
    48be:	84 2b       	or	r24, r20
    48c0:	8c 93       	st	X, r24
    48c2:	a7 c0       	rjmp	.+334    	; 0x4a12 <DIO_WritePin+0x1ba>
		}
	}
	else if((PinNum>=8)&&(PinNum<=15))
    48c4:	89 81       	ldd	r24, Y+1	; 0x01
    48c6:	88 30       	cpi	r24, 0x08	; 8
    48c8:	a8 f1       	brcs	.+106    	; 0x4934 <DIO_WritePin+0xdc>
    48ca:	89 81       	ldd	r24, Y+1	; 0x01
    48cc:	80 31       	cpi	r24, 0x10	; 16
    48ce:	90 f5       	brcc	.+100    	; 0x4934 <DIO_WritePin+0xdc>
	{
		if(PinValue==0)
    48d0:	8a 81       	ldd	r24, Y+2	; 0x02
    48d2:	88 23       	and	r24, r24
    48d4:	c1 f4       	brne	.+48     	; 0x4906 <DIO_WritePin+0xae>
		{
			Clear_Bit(PORTB,(PinNum-8));
    48d6:	a8 e3       	ldi	r26, 0x38	; 56
    48d8:	b0 e0       	ldi	r27, 0x00	; 0
    48da:	e8 e3       	ldi	r30, 0x38	; 56
    48dc:	f0 e0       	ldi	r31, 0x00	; 0
    48de:	80 81       	ld	r24, Z
    48e0:	48 2f       	mov	r20, r24
    48e2:	89 81       	ldd	r24, Y+1	; 0x01
    48e4:	88 2f       	mov	r24, r24
    48e6:	90 e0       	ldi	r25, 0x00	; 0
    48e8:	9c 01       	movw	r18, r24
    48ea:	28 50       	subi	r18, 0x08	; 8
    48ec:	30 40       	sbci	r19, 0x00	; 0
    48ee:	81 e0       	ldi	r24, 0x01	; 1
    48f0:	90 e0       	ldi	r25, 0x00	; 0
    48f2:	02 2e       	mov	r0, r18
    48f4:	02 c0       	rjmp	.+4      	; 0x48fa <DIO_WritePin+0xa2>
    48f6:	88 0f       	add	r24, r24
    48f8:	99 1f       	adc	r25, r25
    48fa:	0a 94       	dec	r0
    48fc:	e2 f7       	brpl	.-8      	; 0x48f6 <DIO_WritePin+0x9e>
    48fe:	80 95       	com	r24
    4900:	84 23       	and	r24, r20
    4902:	8c 93       	st	X, r24
    4904:	86 c0       	rjmp	.+268    	; 0x4a12 <DIO_WritePin+0x1ba>
		}
		else
		{
			Set_Bit(PORTB,(PinNum-8));
    4906:	a8 e3       	ldi	r26, 0x38	; 56
    4908:	b0 e0       	ldi	r27, 0x00	; 0
    490a:	e8 e3       	ldi	r30, 0x38	; 56
    490c:	f0 e0       	ldi	r31, 0x00	; 0
    490e:	80 81       	ld	r24, Z
    4910:	48 2f       	mov	r20, r24
    4912:	89 81       	ldd	r24, Y+1	; 0x01
    4914:	88 2f       	mov	r24, r24
    4916:	90 e0       	ldi	r25, 0x00	; 0
    4918:	9c 01       	movw	r18, r24
    491a:	28 50       	subi	r18, 0x08	; 8
    491c:	30 40       	sbci	r19, 0x00	; 0
    491e:	81 e0       	ldi	r24, 0x01	; 1
    4920:	90 e0       	ldi	r25, 0x00	; 0
    4922:	02 2e       	mov	r0, r18
    4924:	02 c0       	rjmp	.+4      	; 0x492a <DIO_WritePin+0xd2>
    4926:	88 0f       	add	r24, r24
    4928:	99 1f       	adc	r25, r25
    492a:	0a 94       	dec	r0
    492c:	e2 f7       	brpl	.-8      	; 0x4926 <DIO_WritePin+0xce>
    492e:	84 2b       	or	r24, r20
    4930:	8c 93       	st	X, r24
    4932:	6f c0       	rjmp	.+222    	; 0x4a12 <DIO_WritePin+0x1ba>
		}
	}
	else if((PinNum>=16)&&(PinNum<=23))
    4934:	89 81       	ldd	r24, Y+1	; 0x01
    4936:	80 31       	cpi	r24, 0x10	; 16
    4938:	a8 f1       	brcs	.+106    	; 0x49a4 <DIO_WritePin+0x14c>
    493a:	89 81       	ldd	r24, Y+1	; 0x01
    493c:	88 31       	cpi	r24, 0x18	; 24
    493e:	90 f5       	brcc	.+100    	; 0x49a4 <DIO_WritePin+0x14c>
	{
		if(PinValue==0)
    4940:	8a 81       	ldd	r24, Y+2	; 0x02
    4942:	88 23       	and	r24, r24
    4944:	c1 f4       	brne	.+48     	; 0x4976 <DIO_WritePin+0x11e>
		{
			Clear_Bit(PORTC,(PinNum-16));
    4946:	a5 e3       	ldi	r26, 0x35	; 53
    4948:	b0 e0       	ldi	r27, 0x00	; 0
    494a:	e5 e3       	ldi	r30, 0x35	; 53
    494c:	f0 e0       	ldi	r31, 0x00	; 0
    494e:	80 81       	ld	r24, Z
    4950:	48 2f       	mov	r20, r24
    4952:	89 81       	ldd	r24, Y+1	; 0x01
    4954:	88 2f       	mov	r24, r24
    4956:	90 e0       	ldi	r25, 0x00	; 0
    4958:	9c 01       	movw	r18, r24
    495a:	20 51       	subi	r18, 0x10	; 16
    495c:	30 40       	sbci	r19, 0x00	; 0
    495e:	81 e0       	ldi	r24, 0x01	; 1
    4960:	90 e0       	ldi	r25, 0x00	; 0
    4962:	02 2e       	mov	r0, r18
    4964:	02 c0       	rjmp	.+4      	; 0x496a <DIO_WritePin+0x112>
    4966:	88 0f       	add	r24, r24
    4968:	99 1f       	adc	r25, r25
    496a:	0a 94       	dec	r0
    496c:	e2 f7       	brpl	.-8      	; 0x4966 <DIO_WritePin+0x10e>
    496e:	80 95       	com	r24
    4970:	84 23       	and	r24, r20
    4972:	8c 93       	st	X, r24
    4974:	4e c0       	rjmp	.+156    	; 0x4a12 <DIO_WritePin+0x1ba>
		}
		else
		{
			Set_Bit(PORTC,(PinNum-16));
    4976:	a5 e3       	ldi	r26, 0x35	; 53
    4978:	b0 e0       	ldi	r27, 0x00	; 0
    497a:	e5 e3       	ldi	r30, 0x35	; 53
    497c:	f0 e0       	ldi	r31, 0x00	; 0
    497e:	80 81       	ld	r24, Z
    4980:	48 2f       	mov	r20, r24
    4982:	89 81       	ldd	r24, Y+1	; 0x01
    4984:	88 2f       	mov	r24, r24
    4986:	90 e0       	ldi	r25, 0x00	; 0
    4988:	9c 01       	movw	r18, r24
    498a:	20 51       	subi	r18, 0x10	; 16
    498c:	30 40       	sbci	r19, 0x00	; 0
    498e:	81 e0       	ldi	r24, 0x01	; 1
    4990:	90 e0       	ldi	r25, 0x00	; 0
    4992:	02 2e       	mov	r0, r18
    4994:	02 c0       	rjmp	.+4      	; 0x499a <DIO_WritePin+0x142>
    4996:	88 0f       	add	r24, r24
    4998:	99 1f       	adc	r25, r25
    499a:	0a 94       	dec	r0
    499c:	e2 f7       	brpl	.-8      	; 0x4996 <DIO_WritePin+0x13e>
    499e:	84 2b       	or	r24, r20
    49a0:	8c 93       	st	X, r24
    49a2:	37 c0       	rjmp	.+110    	; 0x4a12 <DIO_WritePin+0x1ba>
		}
	}
	else if((PinNum>=24)&&((PinNum<=31)))
    49a4:	89 81       	ldd	r24, Y+1	; 0x01
    49a6:	88 31       	cpi	r24, 0x18	; 24
    49a8:	a0 f1       	brcs	.+104    	; 0x4a12 <DIO_WritePin+0x1ba>
    49aa:	89 81       	ldd	r24, Y+1	; 0x01
    49ac:	80 32       	cpi	r24, 0x20	; 32
    49ae:	88 f5       	brcc	.+98     	; 0x4a12 <DIO_WritePin+0x1ba>
	{
		if(PinValue==0)
    49b0:	8a 81       	ldd	r24, Y+2	; 0x02
    49b2:	88 23       	and	r24, r24
    49b4:	c1 f4       	brne	.+48     	; 0x49e6 <DIO_WritePin+0x18e>
		{
			Clear_Bit(PORTD,(PinNum-24));
    49b6:	a2 e3       	ldi	r26, 0x32	; 50
    49b8:	b0 e0       	ldi	r27, 0x00	; 0
    49ba:	e2 e3       	ldi	r30, 0x32	; 50
    49bc:	f0 e0       	ldi	r31, 0x00	; 0
    49be:	80 81       	ld	r24, Z
    49c0:	48 2f       	mov	r20, r24
    49c2:	89 81       	ldd	r24, Y+1	; 0x01
    49c4:	88 2f       	mov	r24, r24
    49c6:	90 e0       	ldi	r25, 0x00	; 0
    49c8:	9c 01       	movw	r18, r24
    49ca:	28 51       	subi	r18, 0x18	; 24
    49cc:	30 40       	sbci	r19, 0x00	; 0
    49ce:	81 e0       	ldi	r24, 0x01	; 1
    49d0:	90 e0       	ldi	r25, 0x00	; 0
    49d2:	02 2e       	mov	r0, r18
    49d4:	02 c0       	rjmp	.+4      	; 0x49da <DIO_WritePin+0x182>
    49d6:	88 0f       	add	r24, r24
    49d8:	99 1f       	adc	r25, r25
    49da:	0a 94       	dec	r0
    49dc:	e2 f7       	brpl	.-8      	; 0x49d6 <DIO_WritePin+0x17e>
    49de:	80 95       	com	r24
    49e0:	84 23       	and	r24, r20
    49e2:	8c 93       	st	X, r24
    49e4:	16 c0       	rjmp	.+44     	; 0x4a12 <DIO_WritePin+0x1ba>
		}
		else
		{
			Set_Bit(PORTD,(PinNum-24));
    49e6:	a2 e3       	ldi	r26, 0x32	; 50
    49e8:	b0 e0       	ldi	r27, 0x00	; 0
    49ea:	e2 e3       	ldi	r30, 0x32	; 50
    49ec:	f0 e0       	ldi	r31, 0x00	; 0
    49ee:	80 81       	ld	r24, Z
    49f0:	48 2f       	mov	r20, r24
    49f2:	89 81       	ldd	r24, Y+1	; 0x01
    49f4:	88 2f       	mov	r24, r24
    49f6:	90 e0       	ldi	r25, 0x00	; 0
    49f8:	9c 01       	movw	r18, r24
    49fa:	28 51       	subi	r18, 0x18	; 24
    49fc:	30 40       	sbci	r19, 0x00	; 0
    49fe:	81 e0       	ldi	r24, 0x01	; 1
    4a00:	90 e0       	ldi	r25, 0x00	; 0
    4a02:	02 2e       	mov	r0, r18
    4a04:	02 c0       	rjmp	.+4      	; 0x4a0a <DIO_WritePin+0x1b2>
    4a06:	88 0f       	add	r24, r24
    4a08:	99 1f       	adc	r25, r25
    4a0a:	0a 94       	dec	r0
    4a0c:	e2 f7       	brpl	.-8      	; 0x4a06 <DIO_WritePin+0x1ae>
    4a0e:	84 2b       	or	r24, r20
    4a10:	8c 93       	st	X, r24
		}
	}
}
    4a12:	0f 90       	pop	r0
    4a14:	0f 90       	pop	r0
    4a16:	cf 91       	pop	r28
    4a18:	df 91       	pop	r29
    4a1a:	08 95       	ret

00004a1c <DIO_ReadPin>:
uint8 DIO_ReadPin(uint8 PinNum)
{
    4a1c:	df 93       	push	r29
    4a1e:	cf 93       	push	r28
    4a20:	00 d0       	rcall	.+0      	; 0x4a22 <DIO_ReadPin+0x6>
    4a22:	cd b7       	in	r28, 0x3d	; 61
    4a24:	de b7       	in	r29, 0x3e	; 62
    4a26:	8a 83       	std	Y+2, r24	; 0x02
	uint8 PinValue;


	if((PinNum >= 0) && (PinNum <= 7))
    4a28:	8a 81       	ldd	r24, Y+2	; 0x02
    4a2a:	88 30       	cpi	r24, 0x08	; 8
    4a2c:	90 f4       	brcc	.+36     	; 0x4a52 <DIO_ReadPin+0x36>
	{
		PinValue = Get_Bit(PINA,PinNum);
    4a2e:	e9 e3       	ldi	r30, 0x39	; 57
    4a30:	f0 e0       	ldi	r31, 0x00	; 0
    4a32:	80 81       	ld	r24, Z
    4a34:	48 2f       	mov	r20, r24
    4a36:	8a 81       	ldd	r24, Y+2	; 0x02
    4a38:	28 2f       	mov	r18, r24
    4a3a:	30 e0       	ldi	r19, 0x00	; 0
    4a3c:	81 e0       	ldi	r24, 0x01	; 1
    4a3e:	90 e0       	ldi	r25, 0x00	; 0
    4a40:	02 2e       	mov	r0, r18
    4a42:	02 c0       	rjmp	.+4      	; 0x4a48 <DIO_ReadPin+0x2c>
    4a44:	88 0f       	add	r24, r24
    4a46:	99 1f       	adc	r25, r25
    4a48:	0a 94       	dec	r0
    4a4a:	e2 f7       	brpl	.-8      	; 0x4a44 <DIO_ReadPin+0x28>
    4a4c:	84 23       	and	r24, r20
    4a4e:	89 83       	std	Y+1, r24	; 0x01
    4a50:	50 c0       	rjmp	.+160    	; 0x4af2 <DIO_ReadPin+0xd6>
	}
	else if((PinNum >= 8) && (PinNum <= 15))
    4a52:	8a 81       	ldd	r24, Y+2	; 0x02
    4a54:	88 30       	cpi	r24, 0x08	; 8
    4a56:	c0 f0       	brcs	.+48     	; 0x4a88 <DIO_ReadPin+0x6c>
    4a58:	8a 81       	ldd	r24, Y+2	; 0x02
    4a5a:	80 31       	cpi	r24, 0x10	; 16
    4a5c:	a8 f4       	brcc	.+42     	; 0x4a88 <DIO_ReadPin+0x6c>
	{
		PinValue = Get_Bit(PINB,(PinNum-8));
    4a5e:	e6 e3       	ldi	r30, 0x36	; 54
    4a60:	f0 e0       	ldi	r31, 0x00	; 0
    4a62:	80 81       	ld	r24, Z
    4a64:	48 2f       	mov	r20, r24
    4a66:	8a 81       	ldd	r24, Y+2	; 0x02
    4a68:	88 2f       	mov	r24, r24
    4a6a:	90 e0       	ldi	r25, 0x00	; 0
    4a6c:	9c 01       	movw	r18, r24
    4a6e:	28 50       	subi	r18, 0x08	; 8
    4a70:	30 40       	sbci	r19, 0x00	; 0
    4a72:	81 e0       	ldi	r24, 0x01	; 1
    4a74:	90 e0       	ldi	r25, 0x00	; 0
    4a76:	02 2e       	mov	r0, r18
    4a78:	02 c0       	rjmp	.+4      	; 0x4a7e <DIO_ReadPin+0x62>
    4a7a:	88 0f       	add	r24, r24
    4a7c:	99 1f       	adc	r25, r25
    4a7e:	0a 94       	dec	r0
    4a80:	e2 f7       	brpl	.-8      	; 0x4a7a <DIO_ReadPin+0x5e>
    4a82:	84 23       	and	r24, r20
    4a84:	89 83       	std	Y+1, r24	; 0x01
    4a86:	35 c0       	rjmp	.+106    	; 0x4af2 <DIO_ReadPin+0xd6>
	}
	else if((PinNum >= 16) && (PinNum <= 23))
    4a88:	8a 81       	ldd	r24, Y+2	; 0x02
    4a8a:	80 31       	cpi	r24, 0x10	; 16
    4a8c:	c0 f0       	brcs	.+48     	; 0x4abe <DIO_ReadPin+0xa2>
    4a8e:	8a 81       	ldd	r24, Y+2	; 0x02
    4a90:	88 31       	cpi	r24, 0x18	; 24
    4a92:	a8 f4       	brcc	.+42     	; 0x4abe <DIO_ReadPin+0xa2>
	{
		PinValue = Get_Bit(PINC,(PinNum-16));
    4a94:	e3 e3       	ldi	r30, 0x33	; 51
    4a96:	f0 e0       	ldi	r31, 0x00	; 0
    4a98:	80 81       	ld	r24, Z
    4a9a:	48 2f       	mov	r20, r24
    4a9c:	8a 81       	ldd	r24, Y+2	; 0x02
    4a9e:	88 2f       	mov	r24, r24
    4aa0:	90 e0       	ldi	r25, 0x00	; 0
    4aa2:	9c 01       	movw	r18, r24
    4aa4:	20 51       	subi	r18, 0x10	; 16
    4aa6:	30 40       	sbci	r19, 0x00	; 0
    4aa8:	81 e0       	ldi	r24, 0x01	; 1
    4aaa:	90 e0       	ldi	r25, 0x00	; 0
    4aac:	02 2e       	mov	r0, r18
    4aae:	02 c0       	rjmp	.+4      	; 0x4ab4 <DIO_ReadPin+0x98>
    4ab0:	88 0f       	add	r24, r24
    4ab2:	99 1f       	adc	r25, r25
    4ab4:	0a 94       	dec	r0
    4ab6:	e2 f7       	brpl	.-8      	; 0x4ab0 <DIO_ReadPin+0x94>
    4ab8:	84 23       	and	r24, r20
    4aba:	89 83       	std	Y+1, r24	; 0x01
    4abc:	1a c0       	rjmp	.+52     	; 0x4af2 <DIO_ReadPin+0xd6>
	}
	else if((PinNum >= 24) && (PinNum <= 31))
    4abe:	8a 81       	ldd	r24, Y+2	; 0x02
    4ac0:	88 31       	cpi	r24, 0x18	; 24
    4ac2:	b8 f0       	brcs	.+46     	; 0x4af2 <DIO_ReadPin+0xd6>
    4ac4:	8a 81       	ldd	r24, Y+2	; 0x02
    4ac6:	80 32       	cpi	r24, 0x20	; 32
    4ac8:	a0 f4       	brcc	.+40     	; 0x4af2 <DIO_ReadPin+0xd6>
	{
		PinValue = Get_Bit(PIND,(PinNum-24));
    4aca:	e0 e3       	ldi	r30, 0x30	; 48
    4acc:	f0 e0       	ldi	r31, 0x00	; 0
    4ace:	80 81       	ld	r24, Z
    4ad0:	48 2f       	mov	r20, r24
    4ad2:	8a 81       	ldd	r24, Y+2	; 0x02
    4ad4:	88 2f       	mov	r24, r24
    4ad6:	90 e0       	ldi	r25, 0x00	; 0
    4ad8:	9c 01       	movw	r18, r24
    4ada:	28 51       	subi	r18, 0x18	; 24
    4adc:	30 40       	sbci	r19, 0x00	; 0
    4ade:	81 e0       	ldi	r24, 0x01	; 1
    4ae0:	90 e0       	ldi	r25, 0x00	; 0
    4ae2:	02 2e       	mov	r0, r18
    4ae4:	02 c0       	rjmp	.+4      	; 0x4aea <DIO_ReadPin+0xce>
    4ae6:	88 0f       	add	r24, r24
    4ae8:	99 1f       	adc	r25, r25
    4aea:	0a 94       	dec	r0
    4aec:	e2 f7       	brpl	.-8      	; 0x4ae6 <DIO_ReadPin+0xca>
    4aee:	84 23       	and	r24, r20
    4af0:	89 83       	std	Y+1, r24	; 0x01
	}

	return PinValue;
    4af2:	89 81       	ldd	r24, Y+1	; 0x01
}
    4af4:	0f 90       	pop	r0
    4af6:	0f 90       	pop	r0
    4af8:	cf 91       	pop	r28
    4afa:	df 91       	pop	r29
    4afc:	08 95       	ret

00004afe <DIO_SetPinDirection>:
void DIO_SetPinDirection(uint8 PinNum,uint8 PinDirection)
{
    4afe:	df 93       	push	r29
    4b00:	cf 93       	push	r28
    4b02:	00 d0       	rcall	.+0      	; 0x4b04 <DIO_SetPinDirection+0x6>
    4b04:	cd b7       	in	r28, 0x3d	; 61
    4b06:	de b7       	in	r29, 0x3e	; 62
    4b08:	89 83       	std	Y+1, r24	; 0x01
    4b0a:	6a 83       	std	Y+2, r22	; 0x02
	if((PinNum>=0)&&(PinNum<=7))
    4b0c:	89 81       	ldd	r24, Y+1	; 0x01
    4b0e:	88 30       	cpi	r24, 0x08	; 8
    4b10:	60 f5       	brcc	.+88     	; 0x4b6a <DIO_SetPinDirection+0x6c>
	{
		if(PinDirection==0)
    4b12:	8a 81       	ldd	r24, Y+2	; 0x02
    4b14:	88 23       	and	r24, r24
    4b16:	a9 f4       	brne	.+42     	; 0x4b42 <DIO_SetPinDirection+0x44>
		{
			Clear_Bit(DDRA,PinNum);
    4b18:	aa e3       	ldi	r26, 0x3A	; 58
    4b1a:	b0 e0       	ldi	r27, 0x00	; 0
    4b1c:	ea e3       	ldi	r30, 0x3A	; 58
    4b1e:	f0 e0       	ldi	r31, 0x00	; 0
    4b20:	80 81       	ld	r24, Z
    4b22:	48 2f       	mov	r20, r24
    4b24:	89 81       	ldd	r24, Y+1	; 0x01
    4b26:	28 2f       	mov	r18, r24
    4b28:	30 e0       	ldi	r19, 0x00	; 0
    4b2a:	81 e0       	ldi	r24, 0x01	; 1
    4b2c:	90 e0       	ldi	r25, 0x00	; 0
    4b2e:	02 2e       	mov	r0, r18
    4b30:	02 c0       	rjmp	.+4      	; 0x4b36 <DIO_SetPinDirection+0x38>
    4b32:	88 0f       	add	r24, r24
    4b34:	99 1f       	adc	r25, r25
    4b36:	0a 94       	dec	r0
    4b38:	e2 f7       	brpl	.-8      	; 0x4b32 <DIO_SetPinDirection+0x34>
    4b3a:	80 95       	com	r24
    4b3c:	84 23       	and	r24, r20
    4b3e:	8c 93       	st	X, r24
    4b40:	bb c0       	rjmp	.+374    	; 0x4cb8 <DIO_SetPinDirection+0x1ba>
		}
		else
		{
			Set_Bit(DDRA,PinNum);
    4b42:	aa e3       	ldi	r26, 0x3A	; 58
    4b44:	b0 e0       	ldi	r27, 0x00	; 0
    4b46:	ea e3       	ldi	r30, 0x3A	; 58
    4b48:	f0 e0       	ldi	r31, 0x00	; 0
    4b4a:	80 81       	ld	r24, Z
    4b4c:	48 2f       	mov	r20, r24
    4b4e:	89 81       	ldd	r24, Y+1	; 0x01
    4b50:	28 2f       	mov	r18, r24
    4b52:	30 e0       	ldi	r19, 0x00	; 0
    4b54:	81 e0       	ldi	r24, 0x01	; 1
    4b56:	90 e0       	ldi	r25, 0x00	; 0
    4b58:	02 2e       	mov	r0, r18
    4b5a:	02 c0       	rjmp	.+4      	; 0x4b60 <DIO_SetPinDirection+0x62>
    4b5c:	88 0f       	add	r24, r24
    4b5e:	99 1f       	adc	r25, r25
    4b60:	0a 94       	dec	r0
    4b62:	e2 f7       	brpl	.-8      	; 0x4b5c <DIO_SetPinDirection+0x5e>
    4b64:	84 2b       	or	r24, r20
    4b66:	8c 93       	st	X, r24
    4b68:	a7 c0       	rjmp	.+334    	; 0x4cb8 <DIO_SetPinDirection+0x1ba>
		}
	}
	else if((PinNum>=8)&&(PinNum<=15))
    4b6a:	89 81       	ldd	r24, Y+1	; 0x01
    4b6c:	88 30       	cpi	r24, 0x08	; 8
    4b6e:	a8 f1       	brcs	.+106    	; 0x4bda <DIO_SetPinDirection+0xdc>
    4b70:	89 81       	ldd	r24, Y+1	; 0x01
    4b72:	80 31       	cpi	r24, 0x10	; 16
    4b74:	90 f5       	brcc	.+100    	; 0x4bda <DIO_SetPinDirection+0xdc>
	{
		if(PinDirection==0)
    4b76:	8a 81       	ldd	r24, Y+2	; 0x02
    4b78:	88 23       	and	r24, r24
    4b7a:	c1 f4       	brne	.+48     	; 0x4bac <DIO_SetPinDirection+0xae>
		{
			Clear_Bit(DDRB,(PinNum-8));
    4b7c:	a7 e3       	ldi	r26, 0x37	; 55
    4b7e:	b0 e0       	ldi	r27, 0x00	; 0
    4b80:	e7 e3       	ldi	r30, 0x37	; 55
    4b82:	f0 e0       	ldi	r31, 0x00	; 0
    4b84:	80 81       	ld	r24, Z
    4b86:	48 2f       	mov	r20, r24
    4b88:	89 81       	ldd	r24, Y+1	; 0x01
    4b8a:	88 2f       	mov	r24, r24
    4b8c:	90 e0       	ldi	r25, 0x00	; 0
    4b8e:	9c 01       	movw	r18, r24
    4b90:	28 50       	subi	r18, 0x08	; 8
    4b92:	30 40       	sbci	r19, 0x00	; 0
    4b94:	81 e0       	ldi	r24, 0x01	; 1
    4b96:	90 e0       	ldi	r25, 0x00	; 0
    4b98:	02 2e       	mov	r0, r18
    4b9a:	02 c0       	rjmp	.+4      	; 0x4ba0 <DIO_SetPinDirection+0xa2>
    4b9c:	88 0f       	add	r24, r24
    4b9e:	99 1f       	adc	r25, r25
    4ba0:	0a 94       	dec	r0
    4ba2:	e2 f7       	brpl	.-8      	; 0x4b9c <DIO_SetPinDirection+0x9e>
    4ba4:	80 95       	com	r24
    4ba6:	84 23       	and	r24, r20
    4ba8:	8c 93       	st	X, r24
    4baa:	86 c0       	rjmp	.+268    	; 0x4cb8 <DIO_SetPinDirection+0x1ba>
		}
		else
		{
			Set_Bit(DDRB,(PinNum-8));
    4bac:	a7 e3       	ldi	r26, 0x37	; 55
    4bae:	b0 e0       	ldi	r27, 0x00	; 0
    4bb0:	e7 e3       	ldi	r30, 0x37	; 55
    4bb2:	f0 e0       	ldi	r31, 0x00	; 0
    4bb4:	80 81       	ld	r24, Z
    4bb6:	48 2f       	mov	r20, r24
    4bb8:	89 81       	ldd	r24, Y+1	; 0x01
    4bba:	88 2f       	mov	r24, r24
    4bbc:	90 e0       	ldi	r25, 0x00	; 0
    4bbe:	9c 01       	movw	r18, r24
    4bc0:	28 50       	subi	r18, 0x08	; 8
    4bc2:	30 40       	sbci	r19, 0x00	; 0
    4bc4:	81 e0       	ldi	r24, 0x01	; 1
    4bc6:	90 e0       	ldi	r25, 0x00	; 0
    4bc8:	02 2e       	mov	r0, r18
    4bca:	02 c0       	rjmp	.+4      	; 0x4bd0 <DIO_SetPinDirection+0xd2>
    4bcc:	88 0f       	add	r24, r24
    4bce:	99 1f       	adc	r25, r25
    4bd0:	0a 94       	dec	r0
    4bd2:	e2 f7       	brpl	.-8      	; 0x4bcc <DIO_SetPinDirection+0xce>
    4bd4:	84 2b       	or	r24, r20
    4bd6:	8c 93       	st	X, r24
    4bd8:	6f c0       	rjmp	.+222    	; 0x4cb8 <DIO_SetPinDirection+0x1ba>
		}
	}
	else if((PinNum>=16)&&(PinNum<=23))
    4bda:	89 81       	ldd	r24, Y+1	; 0x01
    4bdc:	80 31       	cpi	r24, 0x10	; 16
    4bde:	a8 f1       	brcs	.+106    	; 0x4c4a <DIO_SetPinDirection+0x14c>
    4be0:	89 81       	ldd	r24, Y+1	; 0x01
    4be2:	88 31       	cpi	r24, 0x18	; 24
    4be4:	90 f5       	brcc	.+100    	; 0x4c4a <DIO_SetPinDirection+0x14c>
	{
		if(PinDirection==0)
    4be6:	8a 81       	ldd	r24, Y+2	; 0x02
    4be8:	88 23       	and	r24, r24
    4bea:	c1 f4       	brne	.+48     	; 0x4c1c <DIO_SetPinDirection+0x11e>
		{
			Clear_Bit(DDRC,(PinNum-16));
    4bec:	a4 e3       	ldi	r26, 0x34	; 52
    4bee:	b0 e0       	ldi	r27, 0x00	; 0
    4bf0:	e4 e3       	ldi	r30, 0x34	; 52
    4bf2:	f0 e0       	ldi	r31, 0x00	; 0
    4bf4:	80 81       	ld	r24, Z
    4bf6:	48 2f       	mov	r20, r24
    4bf8:	89 81       	ldd	r24, Y+1	; 0x01
    4bfa:	88 2f       	mov	r24, r24
    4bfc:	90 e0       	ldi	r25, 0x00	; 0
    4bfe:	9c 01       	movw	r18, r24
    4c00:	20 51       	subi	r18, 0x10	; 16
    4c02:	30 40       	sbci	r19, 0x00	; 0
    4c04:	81 e0       	ldi	r24, 0x01	; 1
    4c06:	90 e0       	ldi	r25, 0x00	; 0
    4c08:	02 2e       	mov	r0, r18
    4c0a:	02 c0       	rjmp	.+4      	; 0x4c10 <DIO_SetPinDirection+0x112>
    4c0c:	88 0f       	add	r24, r24
    4c0e:	99 1f       	adc	r25, r25
    4c10:	0a 94       	dec	r0
    4c12:	e2 f7       	brpl	.-8      	; 0x4c0c <DIO_SetPinDirection+0x10e>
    4c14:	80 95       	com	r24
    4c16:	84 23       	and	r24, r20
    4c18:	8c 93       	st	X, r24
    4c1a:	4e c0       	rjmp	.+156    	; 0x4cb8 <DIO_SetPinDirection+0x1ba>
		}
		else
		{
			Set_Bit(DDRC,(PinNum-16));
    4c1c:	a4 e3       	ldi	r26, 0x34	; 52
    4c1e:	b0 e0       	ldi	r27, 0x00	; 0
    4c20:	e4 e3       	ldi	r30, 0x34	; 52
    4c22:	f0 e0       	ldi	r31, 0x00	; 0
    4c24:	80 81       	ld	r24, Z
    4c26:	48 2f       	mov	r20, r24
    4c28:	89 81       	ldd	r24, Y+1	; 0x01
    4c2a:	88 2f       	mov	r24, r24
    4c2c:	90 e0       	ldi	r25, 0x00	; 0
    4c2e:	9c 01       	movw	r18, r24
    4c30:	20 51       	subi	r18, 0x10	; 16
    4c32:	30 40       	sbci	r19, 0x00	; 0
    4c34:	81 e0       	ldi	r24, 0x01	; 1
    4c36:	90 e0       	ldi	r25, 0x00	; 0
    4c38:	02 2e       	mov	r0, r18
    4c3a:	02 c0       	rjmp	.+4      	; 0x4c40 <DIO_SetPinDirection+0x142>
    4c3c:	88 0f       	add	r24, r24
    4c3e:	99 1f       	adc	r25, r25
    4c40:	0a 94       	dec	r0
    4c42:	e2 f7       	brpl	.-8      	; 0x4c3c <DIO_SetPinDirection+0x13e>
    4c44:	84 2b       	or	r24, r20
    4c46:	8c 93       	st	X, r24
    4c48:	37 c0       	rjmp	.+110    	; 0x4cb8 <DIO_SetPinDirection+0x1ba>
		}
	}
	else if((PinNum>=24)&&((PinNum<=31)))
    4c4a:	89 81       	ldd	r24, Y+1	; 0x01
    4c4c:	88 31       	cpi	r24, 0x18	; 24
    4c4e:	a0 f1       	brcs	.+104    	; 0x4cb8 <DIO_SetPinDirection+0x1ba>
    4c50:	89 81       	ldd	r24, Y+1	; 0x01
    4c52:	80 32       	cpi	r24, 0x20	; 32
    4c54:	88 f5       	brcc	.+98     	; 0x4cb8 <DIO_SetPinDirection+0x1ba>
	{
		if(PinDirection==0)
    4c56:	8a 81       	ldd	r24, Y+2	; 0x02
    4c58:	88 23       	and	r24, r24
    4c5a:	c1 f4       	brne	.+48     	; 0x4c8c <DIO_SetPinDirection+0x18e>
		{
			Clear_Bit(DDRD,(PinNum-24));
    4c5c:	a1 e3       	ldi	r26, 0x31	; 49
    4c5e:	b0 e0       	ldi	r27, 0x00	; 0
    4c60:	e1 e3       	ldi	r30, 0x31	; 49
    4c62:	f0 e0       	ldi	r31, 0x00	; 0
    4c64:	80 81       	ld	r24, Z
    4c66:	48 2f       	mov	r20, r24
    4c68:	89 81       	ldd	r24, Y+1	; 0x01
    4c6a:	88 2f       	mov	r24, r24
    4c6c:	90 e0       	ldi	r25, 0x00	; 0
    4c6e:	9c 01       	movw	r18, r24
    4c70:	28 51       	subi	r18, 0x18	; 24
    4c72:	30 40       	sbci	r19, 0x00	; 0
    4c74:	81 e0       	ldi	r24, 0x01	; 1
    4c76:	90 e0       	ldi	r25, 0x00	; 0
    4c78:	02 2e       	mov	r0, r18
    4c7a:	02 c0       	rjmp	.+4      	; 0x4c80 <DIO_SetPinDirection+0x182>
    4c7c:	88 0f       	add	r24, r24
    4c7e:	99 1f       	adc	r25, r25
    4c80:	0a 94       	dec	r0
    4c82:	e2 f7       	brpl	.-8      	; 0x4c7c <DIO_SetPinDirection+0x17e>
    4c84:	80 95       	com	r24
    4c86:	84 23       	and	r24, r20
    4c88:	8c 93       	st	X, r24
    4c8a:	16 c0       	rjmp	.+44     	; 0x4cb8 <DIO_SetPinDirection+0x1ba>
		}
		else
		{
			Set_Bit(DDRD,(PinNum-24));
    4c8c:	a1 e3       	ldi	r26, 0x31	; 49
    4c8e:	b0 e0       	ldi	r27, 0x00	; 0
    4c90:	e1 e3       	ldi	r30, 0x31	; 49
    4c92:	f0 e0       	ldi	r31, 0x00	; 0
    4c94:	80 81       	ld	r24, Z
    4c96:	48 2f       	mov	r20, r24
    4c98:	89 81       	ldd	r24, Y+1	; 0x01
    4c9a:	88 2f       	mov	r24, r24
    4c9c:	90 e0       	ldi	r25, 0x00	; 0
    4c9e:	9c 01       	movw	r18, r24
    4ca0:	28 51       	subi	r18, 0x18	; 24
    4ca2:	30 40       	sbci	r19, 0x00	; 0
    4ca4:	81 e0       	ldi	r24, 0x01	; 1
    4ca6:	90 e0       	ldi	r25, 0x00	; 0
    4ca8:	02 2e       	mov	r0, r18
    4caa:	02 c0       	rjmp	.+4      	; 0x4cb0 <DIO_SetPinDirection+0x1b2>
    4cac:	88 0f       	add	r24, r24
    4cae:	99 1f       	adc	r25, r25
    4cb0:	0a 94       	dec	r0
    4cb2:	e2 f7       	brpl	.-8      	; 0x4cac <DIO_SetPinDirection+0x1ae>
    4cb4:	84 2b       	or	r24, r20
    4cb6:	8c 93       	st	X, r24
		}
	}
}
    4cb8:	0f 90       	pop	r0
    4cba:	0f 90       	pop	r0
    4cbc:	cf 91       	pop	r28
    4cbe:	df 91       	pop	r29
    4cc0:	08 95       	ret

00004cc2 <external_interrupt_init>:
 *      Author: Mina
 *
 */
#include "external_interrupt.h"
void external_interrupt_init(uint8 external_INT_num, uint8 edge)
{
    4cc2:	df 93       	push	r29
    4cc4:	cf 93       	push	r28
    4cc6:	00 d0       	rcall	.+0      	; 0x4cc8 <external_interrupt_init+0x6>
    4cc8:	cd b7       	in	r28, 0x3d	; 61
    4cca:	de b7       	in	r29, 0x3e	; 62
    4ccc:	89 83       	std	Y+1, r24	; 0x01
    4cce:	6a 83       	std	Y+2, r22	; 0x02
	SREG |=(1<<7);
    4cd0:	af e5       	ldi	r26, 0x5F	; 95
    4cd2:	b0 e0       	ldi	r27, 0x00	; 0
    4cd4:	ef e5       	ldi	r30, 0x5F	; 95
    4cd6:	f0 e0       	ldi	r31, 0x00	; 0
    4cd8:	80 81       	ld	r24, Z
    4cda:	80 68       	ori	r24, 0x80	; 128
    4cdc:	8c 93       	st	X, r24
	if(external_INT_num == interrupt0)
    4cde:	89 81       	ldd	r24, Y+1	; 0x01
    4ce0:	88 23       	and	r24, r24
    4ce2:	b9 f4       	brne	.+46     	; 0x4d12 <external_interrupt_init+0x50>
	{
		MCUCR =( MCUCR & 0xfc) | (edge & 0x03);
    4ce4:	a5 e5       	ldi	r26, 0x55	; 85
    4ce6:	b0 e0       	ldi	r27, 0x00	; 0
    4ce8:	e5 e5       	ldi	r30, 0x55	; 85
    4cea:	f0 e0       	ldi	r31, 0x00	; 0
    4cec:	80 81       	ld	r24, Z
    4cee:	98 2f       	mov	r25, r24
    4cf0:	9c 7f       	andi	r25, 0xFC	; 252
    4cf2:	8a 81       	ldd	r24, Y+2	; 0x02
    4cf4:	83 70       	andi	r24, 0x03	; 3
    4cf6:	89 2b       	or	r24, r25
    4cf8:	8c 93       	st	X, r24
		GICR |= (1<<INt0);
    4cfa:	ab e5       	ldi	r26, 0x5B	; 91
    4cfc:	b0 e0       	ldi	r27, 0x00	; 0
    4cfe:	eb e5       	ldi	r30, 0x5B	; 91
    4d00:	f0 e0       	ldi	r31, 0x00	; 0
    4d02:	80 81       	ld	r24, Z
    4d04:	80 64       	ori	r24, 0x40	; 64
    4d06:	8c 93       	st	X, r24
		DIO_SetPinDirection(pd2,input);
    4d08:	8a e1       	ldi	r24, 0x1A	; 26
    4d0a:	60 e0       	ldi	r22, 0x00	; 0
    4d0c:	0e 94 7f 25 	call	0x4afe	; 0x4afe <DIO_SetPinDirection>
    4d10:	3a c0       	rjmp	.+116    	; 0x4d86 <external_interrupt_init+0xc4>
	}
	else if(external_INT_num == interrupt1)
    4d12:	89 81       	ldd	r24, Y+1	; 0x01
    4d14:	81 30       	cpi	r24, 0x01	; 1
    4d16:	b9 f4       	brne	.+46     	; 0x4d46 <external_interrupt_init+0x84>
	{
		MCUCR =( MCUCR & 0xf3) | (edge & 0x0c);
    4d18:	a5 e5       	ldi	r26, 0x55	; 85
    4d1a:	b0 e0       	ldi	r27, 0x00	; 0
    4d1c:	e5 e5       	ldi	r30, 0x55	; 85
    4d1e:	f0 e0       	ldi	r31, 0x00	; 0
    4d20:	80 81       	ld	r24, Z
    4d22:	98 2f       	mov	r25, r24
    4d24:	93 7f       	andi	r25, 0xF3	; 243
    4d26:	8a 81       	ldd	r24, Y+2	; 0x02
    4d28:	8c 70       	andi	r24, 0x0C	; 12
    4d2a:	89 2b       	or	r24, r25
    4d2c:	8c 93       	st	X, r24
		GICR |= (1<<INt1);
    4d2e:	ab e5       	ldi	r26, 0x5B	; 91
    4d30:	b0 e0       	ldi	r27, 0x00	; 0
    4d32:	eb e5       	ldi	r30, 0x5B	; 91
    4d34:	f0 e0       	ldi	r31, 0x00	; 0
    4d36:	80 81       	ld	r24, Z
    4d38:	80 68       	ori	r24, 0x80	; 128
    4d3a:	8c 93       	st	X, r24
		DIO_SetPinDirection(pd3,input);
    4d3c:	8b e1       	ldi	r24, 0x1B	; 27
    4d3e:	60 e0       	ldi	r22, 0x00	; 0
    4d40:	0e 94 7f 25 	call	0x4afe	; 0x4afe <DIO_SetPinDirection>
    4d44:	20 c0       	rjmp	.+64     	; 0x4d86 <external_interrupt_init+0xc4>
	}
	else if(external_INT_num == interrupt2)
    4d46:	89 81       	ldd	r24, Y+1	; 0x01
    4d48:	82 30       	cpi	r24, 0x02	; 2
    4d4a:	e9 f4       	brne	.+58     	; 0x4d86 <external_interrupt_init+0xc4>
	{
		if(edge == falling_edge)
    4d4c:	8a 81       	ldd	r24, Y+2	; 0x02
    4d4e:	82 30       	cpi	r24, 0x02	; 2
    4d50:	41 f4       	brne	.+16     	; 0x4d62 <external_interrupt_init+0xa0>
		{
			MCUCSR &=~(1<<ISC2);
    4d52:	a4 e5       	ldi	r26, 0x54	; 84
    4d54:	b0 e0       	ldi	r27, 0x00	; 0
    4d56:	e4 e5       	ldi	r30, 0x54	; 84
    4d58:	f0 e0       	ldi	r31, 0x00	; 0
    4d5a:	80 81       	ld	r24, Z
    4d5c:	8f 7b       	andi	r24, 0xBF	; 191
    4d5e:	8c 93       	st	X, r24
    4d60:	07 c0       	rjmp	.+14     	; 0x4d70 <external_interrupt_init+0xae>
		}
		else
		{
			MCUCSR |=(1<<ISC2);
    4d62:	a4 e5       	ldi	r26, 0x54	; 84
    4d64:	b0 e0       	ldi	r27, 0x00	; 0
    4d66:	e4 e5       	ldi	r30, 0x54	; 84
    4d68:	f0 e0       	ldi	r31, 0x00	; 0
    4d6a:	80 81       	ld	r24, Z
    4d6c:	80 64       	ori	r24, 0x40	; 64
    4d6e:	8c 93       	st	X, r24
		}
		GICR |= (1<<INt2);
    4d70:	ab e5       	ldi	r26, 0x5B	; 91
    4d72:	b0 e0       	ldi	r27, 0x00	; 0
    4d74:	eb e5       	ldi	r30, 0x5B	; 91
    4d76:	f0 e0       	ldi	r31, 0x00	; 0
    4d78:	80 81       	ld	r24, Z
    4d7a:	80 62       	ori	r24, 0x20	; 32
    4d7c:	8c 93       	st	X, r24
		DIO_SetPinDirection(pb2,input);
    4d7e:	8a e0       	ldi	r24, 0x0A	; 10
    4d80:	60 e0       	ldi	r22, 0x00	; 0
    4d82:	0e 94 7f 25 	call	0x4afe	; 0x4afe <DIO_SetPinDirection>
	}


}
    4d86:	0f 90       	pop	r0
    4d88:	0f 90       	pop	r0
    4d8a:	cf 91       	pop	r28
    4d8c:	df 91       	pop	r29
    4d8e:	08 95       	ret

00004d90 <icu_init>:
volatile uint64 g_secondHigh=0;
volatile uint64 g_first_Low=0;
volatile uint64 g_SecondLow=0;

void icu_init(uint8 preScale)
{
    4d90:	df 93       	push	r29
    4d92:	cf 93       	push	r28
    4d94:	0f 92       	push	r0
    4d96:	cd b7       	in	r28, 0x3d	; 61
    4d98:	de b7       	in	r29, 0x3e	; 62
    4d9a:	89 83       	std	Y+1, r24	; 0x01

	DIO_SetPinDirection(pd6,input);
    4d9c:	8e e1       	ldi	r24, 0x1E	; 30
    4d9e:	60 e0       	ldi	r22, 0x00	; 0
    4da0:	0e 94 7f 25 	call	0x4afe	; 0x4afe <DIO_SetPinDirection>

//	TCCR1A = (1<<FOC1A) | (1<<FOC1B);
	TCCR1B = (TCCR1B & 0xBF) | (Rising_edge & 0x40);
    4da4:	ae e4       	ldi	r26, 0x4E	; 78
    4da6:	b0 e0       	ldi	r27, 0x00	; 0
    4da8:	ee e4       	ldi	r30, 0x4E	; 78
    4daa:	f0 e0       	ldi	r31, 0x00	; 0
    4dac:	80 81       	ld	r24, Z
    4dae:	8f 7b       	andi	r24, 0xBF	; 191
    4db0:	8c 93       	st	X, r24
	TCNT1=0;
    4db2:	ec e4       	ldi	r30, 0x4C	; 76
    4db4:	f0 e0       	ldi	r31, 0x00	; 0
    4db6:	11 82       	std	Z+1, r1	; 0x01
    4db8:	10 82       	st	Z, r1
	TIMSK |=(1<<TICIE1)|(1<<TOIE1);
    4dba:	a9 e5       	ldi	r26, 0x59	; 89
    4dbc:	b0 e0       	ldi	r27, 0x00	; 0
    4dbe:	e9 e5       	ldi	r30, 0x59	; 89
    4dc0:	f0 e0       	ldi	r31, 0x00	; 0
    4dc2:	80 81       	ld	r24, Z
    4dc4:	84 62       	ori	r24, 0x24	; 36
    4dc6:	8c 93       	st	X, r24
	TCCR1B = (TCCR1B & 0xF8) | (preScale & 0x07);
    4dc8:	ae e4       	ldi	r26, 0x4E	; 78
    4dca:	b0 e0       	ldi	r27, 0x00	; 0
    4dcc:	ee e4       	ldi	r30, 0x4E	; 78
    4dce:	f0 e0       	ldi	r31, 0x00	; 0
    4dd0:	80 81       	ld	r24, Z
    4dd2:	98 2f       	mov	r25, r24
    4dd4:	98 7f       	andi	r25, 0xF8	; 248
    4dd6:	89 81       	ldd	r24, Y+1	; 0x01
    4dd8:	87 70       	andi	r24, 0x07	; 7
    4dda:	89 2b       	or	r24, r25
    4ddc:	8c 93       	st	X, r24
}
    4dde:	0f 90       	pop	r0
    4de0:	cf 91       	pop	r28
    4de2:	df 91       	pop	r29
    4de4:	08 95       	ret

00004de6 <icu_setEdge>:
void icu_setEdge(uint8 edge_select)
{
    4de6:	df 93       	push	r29
    4de8:	cf 93       	push	r28
    4dea:	0f 92       	push	r0
    4dec:	cd b7       	in	r28, 0x3d	; 61
    4dee:	de b7       	in	r29, 0x3e	; 62
    4df0:	89 83       	std	Y+1, r24	; 0x01
	TCCR1B = (TCCR1B & 0xBF) | (edge_select & 0x40);
    4df2:	ae e4       	ldi	r26, 0x4E	; 78
    4df4:	b0 e0       	ldi	r27, 0x00	; 0
    4df6:	ee e4       	ldi	r30, 0x4E	; 78
    4df8:	f0 e0       	ldi	r31, 0x00	; 0
    4dfa:	80 81       	ld	r24, Z
    4dfc:	98 2f       	mov	r25, r24
    4dfe:	9f 7b       	andi	r25, 0xBF	; 191
    4e00:	89 81       	ldd	r24, Y+1	; 0x01
    4e02:	80 74       	andi	r24, 0x40	; 64
    4e04:	89 2b       	or	r24, r25
    4e06:	8c 93       	st	X, r24
}
    4e08:	0f 90       	pop	r0
    4e0a:	cf 91       	pop	r28
    4e0c:	df 91       	pop	r29
    4e0e:	08 95       	ret

00004e10 <Icu_getCapValue>:
uint64 Icu_getCapValue(void)
{
    4e10:	af 92       	push	r10
    4e12:	bf 92       	push	r11
    4e14:	cf 92       	push	r12
    4e16:	df 92       	push	r13
    4e18:	ef 92       	push	r14
    4e1a:	ff 92       	push	r15
    4e1c:	0f 93       	push	r16
    4e1e:	1f 93       	push	r17
    4e20:	df 93       	push	r29
    4e22:	cf 93       	push	r28
    4e24:	cd b7       	in	r28, 0x3d	; 61
    4e26:	de b7       	in	r29, 0x3e	; 62
    4e28:	28 97       	sbiw	r28, 0x08	; 8
    4e2a:	0f b6       	in	r0, 0x3f	; 63
    4e2c:	f8 94       	cli
    4e2e:	de bf       	out	0x3e, r29	; 62
    4e30:	0f be       	out	0x3f, r0	; 63
    4e32:	cd bf       	out	0x3d, r28	; 61
	uint64 time=0;
    4e34:	19 82       	std	Y+1, r1	; 0x01
    4e36:	1a 82       	std	Y+2, r1	; 0x02
    4e38:	1b 82       	std	Y+3, r1	; 0x03
    4e3a:	1c 82       	std	Y+4, r1	; 0x04
    4e3c:	1d 82       	std	Y+5, r1	; 0x05
    4e3e:	1e 82       	std	Y+6, r1	; 0x06
    4e40:	1f 82       	std	Y+7, r1	; 0x07
    4e42:	18 86       	std	Y+8, r1	; 0x08
	time= (0.125*ICR1);
    4e44:	e6 e4       	ldi	r30, 0x46	; 70
    4e46:	f0 e0       	ldi	r31, 0x00	; 0
    4e48:	80 81       	ld	r24, Z
    4e4a:	91 81       	ldd	r25, Z+1	; 0x01
    4e4c:	cc 01       	movw	r24, r24
    4e4e:	a0 e0       	ldi	r26, 0x00	; 0
    4e50:	b0 e0       	ldi	r27, 0x00	; 0
    4e52:	bc 01       	movw	r22, r24
    4e54:	cd 01       	movw	r24, r26
    4e56:	0e 94 36 12 	call	0x246c	; 0x246c <__floatunsisf>
    4e5a:	dc 01       	movw	r26, r24
    4e5c:	cb 01       	movw	r24, r22
    4e5e:	bc 01       	movw	r22, r24
    4e60:	cd 01       	movw	r24, r26
    4e62:	20 e0       	ldi	r18, 0x00	; 0
    4e64:	30 e0       	ldi	r19, 0x00	; 0
    4e66:	40 e0       	ldi	r20, 0x00	; 0
    4e68:	5e e3       	ldi	r21, 0x3E	; 62
    4e6a:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    4e6e:	dc 01       	movw	r26, r24
    4e70:	cb 01       	movw	r24, r22
    4e72:	bc 01       	movw	r22, r24
    4e74:	cd 01       	movw	r24, r26
    4e76:	0e 94 75 00 	call	0xea	; 0xea <__fixunssfdi>
    4e7a:	a2 2e       	mov	r10, r18
    4e7c:	b3 2e       	mov	r11, r19
    4e7e:	c4 2e       	mov	r12, r20
    4e80:	d5 2e       	mov	r13, r21
    4e82:	e6 2e       	mov	r14, r22
    4e84:	f7 2e       	mov	r15, r23
    4e86:	08 2f       	mov	r16, r24
    4e88:	19 2f       	mov	r17, r25
    4e8a:	a9 82       	std	Y+1, r10	; 0x01
    4e8c:	ba 82       	std	Y+2, r11	; 0x02
    4e8e:	cb 82       	std	Y+3, r12	; 0x03
    4e90:	dc 82       	std	Y+4, r13	; 0x04
    4e92:	ed 82       	std	Y+5, r14	; 0x05
    4e94:	fe 82       	std	Y+6, r15	; 0x06
    4e96:	0f 83       	std	Y+7, r16	; 0x07
    4e98:	18 87       	std	Y+8, r17	; 0x08
	return time;
    4e9a:	29 81       	ldd	r18, Y+1	; 0x01
    4e9c:	3a 81       	ldd	r19, Y+2	; 0x02
    4e9e:	4b 81       	ldd	r20, Y+3	; 0x03
    4ea0:	5c 81       	ldd	r21, Y+4	; 0x04
    4ea2:	6d 81       	ldd	r22, Y+5	; 0x05
    4ea4:	7e 81       	ldd	r23, Y+6	; 0x06
    4ea6:	8f 81       	ldd	r24, Y+7	; 0x07
    4ea8:	98 85       	ldd	r25, Y+8	; 0x08
    4eaa:	a2 2e       	mov	r10, r18
    4eac:	b3 2e       	mov	r11, r19
    4eae:	c4 2e       	mov	r12, r20
    4eb0:	d5 2e       	mov	r13, r21
    4eb2:	e6 2e       	mov	r14, r22
    4eb4:	f7 2e       	mov	r15, r23
    4eb6:	08 2f       	mov	r16, r24
    4eb8:	19 2f       	mov	r17, r25
}
    4eba:	2a 2d       	mov	r18, r10
    4ebc:	3b 2d       	mov	r19, r11
    4ebe:	4c 2d       	mov	r20, r12
    4ec0:	5d 2d       	mov	r21, r13
    4ec2:	6e 2d       	mov	r22, r14
    4ec4:	7f 2d       	mov	r23, r15
    4ec6:	80 2f       	mov	r24, r16
    4ec8:	91 2f       	mov	r25, r17
    4eca:	28 96       	adiw	r28, 0x08	; 8
    4ecc:	0f b6       	in	r0, 0x3f	; 63
    4ece:	f8 94       	cli
    4ed0:	de bf       	out	0x3e, r29	; 62
    4ed2:	0f be       	out	0x3f, r0	; 63
    4ed4:	cd bf       	out	0x3d, r28	; 61
    4ed6:	cf 91       	pop	r28
    4ed8:	df 91       	pop	r29
    4eda:	1f 91       	pop	r17
    4edc:	0f 91       	pop	r16
    4ede:	ff 90       	pop	r15
    4ee0:	ef 90       	pop	r14
    4ee2:	df 90       	pop	r13
    4ee4:	cf 90       	pop	r12
    4ee6:	bf 90       	pop	r11
    4ee8:	af 90       	pop	r10
    4eea:	08 95       	ret

00004eec <Icu_clearTimerValue>:
void Icu_clearTimerValue(void)
{
    4eec:	df 93       	push	r29
    4eee:	cf 93       	push	r28
    4ef0:	cd b7       	in	r28, 0x3d	; 61
    4ef2:	de b7       	in	r29, 0x3e	; 62
	TCNT1 = 0;
    4ef4:	ec e4       	ldi	r30, 0x4C	; 76
    4ef6:	f0 e0       	ldi	r31, 0x00	; 0
    4ef8:	11 82       	std	Z+1, r1	; 0x01
    4efa:	10 82       	st	Z, r1
}
    4efc:	cf 91       	pop	r28
    4efe:	df 91       	pop	r29
    4f00:	08 95       	ret

00004f02 <__vector_6>:

ISR(TIMER1_CAPT_vect)
{
    4f02:	1f 92       	push	r1
    4f04:	0f 92       	push	r0
    4f06:	0f b6       	in	r0, 0x3f	; 63
    4f08:	0f 92       	push	r0
    4f0a:	11 24       	eor	r1, r1
    4f0c:	af 92       	push	r10
    4f0e:	bf 92       	push	r11
    4f10:	cf 92       	push	r12
    4f12:	df 92       	push	r13
    4f14:	ef 92       	push	r14
    4f16:	ff 92       	push	r15
    4f18:	0f 93       	push	r16
    4f1a:	1f 93       	push	r17
    4f1c:	2f 93       	push	r18
    4f1e:	3f 93       	push	r19
    4f20:	4f 93       	push	r20
    4f22:	5f 93       	push	r21
    4f24:	6f 93       	push	r22
    4f26:	7f 93       	push	r23
    4f28:	8f 93       	push	r24
    4f2a:	9f 93       	push	r25
    4f2c:	af 93       	push	r26
    4f2e:	bf 93       	push	r27
    4f30:	ef 93       	push	r30
    4f32:	ff 93       	push	r31
    4f34:	df 93       	push	r29
    4f36:	cf 93       	push	r28
    4f38:	cd b7       	in	r28, 0x3d	; 61
    4f3a:	de b7       	in	r29, 0x3e	; 62
	g_firstHigh=0;
    4f3c:	10 92 6a 01 	sts	0x016A, r1
    4f40:	10 92 6b 01 	sts	0x016B, r1
    4f44:	10 92 6c 01 	sts	0x016C, r1
    4f48:	10 92 6d 01 	sts	0x016D, r1
    4f4c:	10 92 6e 01 	sts	0x016E, r1
    4f50:	10 92 6f 01 	sts	0x016F, r1
    4f54:	10 92 70 01 	sts	0x0170, r1
    4f58:	10 92 71 01 	sts	0x0171, r1
	g_firstHigh=Icu_getCapValue();
    4f5c:	0e 94 08 27 	call	0x4e10	; 0x4e10 <Icu_getCapValue>
    4f60:	a2 2e       	mov	r10, r18
    4f62:	b3 2e       	mov	r11, r19
    4f64:	c4 2e       	mov	r12, r20
    4f66:	d5 2e       	mov	r13, r21
    4f68:	e6 2e       	mov	r14, r22
    4f6a:	f7 2e       	mov	r15, r23
    4f6c:	08 2f       	mov	r16, r24
    4f6e:	19 2f       	mov	r17, r25
    4f70:	a0 92 6a 01 	sts	0x016A, r10
    4f74:	b0 92 6b 01 	sts	0x016B, r11
    4f78:	c0 92 6c 01 	sts	0x016C, r12
    4f7c:	d0 92 6d 01 	sts	0x016D, r13
    4f80:	e0 92 6e 01 	sts	0x016E, r14
    4f84:	f0 92 6f 01 	sts	0x016F, r15
    4f88:	00 93 70 01 	sts	0x0170, r16
    4f8c:	10 93 71 01 	sts	0x0171, r17
}
    4f90:	cf 91       	pop	r28
    4f92:	df 91       	pop	r29
    4f94:	ff 91       	pop	r31
    4f96:	ef 91       	pop	r30
    4f98:	bf 91       	pop	r27
    4f9a:	af 91       	pop	r26
    4f9c:	9f 91       	pop	r25
    4f9e:	8f 91       	pop	r24
    4fa0:	7f 91       	pop	r23
    4fa2:	6f 91       	pop	r22
    4fa4:	5f 91       	pop	r21
    4fa6:	4f 91       	pop	r20
    4fa8:	3f 91       	pop	r19
    4faa:	2f 91       	pop	r18
    4fac:	1f 91       	pop	r17
    4fae:	0f 91       	pop	r16
    4fb0:	ff 90       	pop	r15
    4fb2:	ef 90       	pop	r14
    4fb4:	df 90       	pop	r13
    4fb6:	cf 90       	pop	r12
    4fb8:	bf 90       	pop	r11
    4fba:	af 90       	pop	r10
    4fbc:	0f 90       	pop	r0
    4fbe:	0f be       	out	0x3f, r0	; 63
    4fc0:	0f 90       	pop	r0
    4fc2:	1f 90       	pop	r1
    4fc4:	18 95       	reti

00004fc6 <main>:
void Left(void);
void Stop(void);
volatile uint8 g_timer2=0;
volatile uint8 g_tick=0;
int main(void)
{
    4fc6:	df 93       	push	r29
    4fc8:	cf 93       	push	r28
    4fca:	cd b7       	in	r28, 0x3d	; 61
    4fcc:	de b7       	in	r29, 0x3e	; 62

	sei();
    4fce:	78 94       	sei
	//	DIO_SetPinDirection(pb2,input);
	//	DIO_SetPinDirection(pc4,input);
	DIO_SetPinDirection(inA1,output);
    4fd0:	8a e1       	ldi	r24, 0x1A	; 26
    4fd2:	61 e0       	ldi	r22, 0x01	; 1
    4fd4:	0e 94 7f 25 	call	0x4afe	; 0x4afe <DIO_SetPinDirection>
	DIO_SetPinDirection(inA2,output);
    4fd8:	8b e1       	ldi	r24, 0x1B	; 27
    4fda:	61 e0       	ldi	r22, 0x01	; 1
    4fdc:	0e 94 7f 25 	call	0x4afe	; 0x4afe <DIO_SetPinDirection>
	DIO_SetPinDirection(inB1,output);
    4fe0:	8e e1       	ldi	r24, 0x1E	; 30
    4fe2:	61 e0       	ldi	r22, 0x01	; 1
    4fe4:	0e 94 7f 25 	call	0x4afe	; 0x4afe <DIO_SetPinDirection>
	DIO_SetPinDirection(inB2,output);
    4fe8:	8f e1       	ldi	r24, 0x1F	; 31
    4fea:	61 e0       	ldi	r22, 0x01	; 1
    4fec:	0e 94 7f 25 	call	0x4afe	; 0x4afe <DIO_SetPinDirection>
	//	DIO_SetPinDirection(en1,output);
	//	DIO_SetPinDirection(en2,output);
	DIO_WritePin(inA1,low);
    4ff0:	8a e1       	ldi	r24, 0x1A	; 26
    4ff2:	60 e0       	ldi	r22, 0x00	; 0
    4ff4:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
	DIO_WritePin(inA2,low);
    4ff8:	8b e1       	ldi	r24, 0x1B	; 27
    4ffa:	60 e0       	ldi	r22, 0x00	; 0
    4ffc:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
	DIO_WritePin(inB1,low);
    5000:	8e e1       	ldi	r24, 0x1E	; 30
    5002:	60 e0       	ldi	r22, 0x00	; 0
    5004:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
	DIO_WritePin(inB2,low);
    5008:	8f e1       	ldi	r24, 0x1F	; 31
    500a:	60 e0       	ldi	r22, 0x00	; 0
    500c:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
	//	DIO_WritePin(pd4,high);
	//	DIO_WritePin(pd5,high);
	DIO_SetPinDirection(pb0,output);
    5010:	88 e0       	ldi	r24, 0x08	; 8
    5012:	61 e0       	ldi	r22, 0x01	; 1
    5014:	0e 94 7f 25 	call	0x4afe	; 0x4afe <DIO_SetPinDirection>
	DIO_SetPinDirection(pb5,output);
    5018:	8d e0       	ldi	r24, 0x0D	; 13
    501a:	61 e0       	ldi	r22, 0x01	; 1
    501c:	0e 94 7f 25 	call	0x4afe	; 0x4afe <DIO_SetPinDirection>
	DIO_SetPinDirection(pb6,output);
    5020:	8e e0       	ldi	r24, 0x0E	; 14
    5022:	61 e0       	ldi	r22, 0x01	; 1
    5024:	0e 94 7f 25 	call	0x4afe	; 0x4afe <DIO_SetPinDirection>
	external_interrupt_init(interrupt2,rising_edge);
    5028:	82 e0       	ldi	r24, 0x02	; 2
    502a:	63 e0       	ldi	r22, 0x03	; 3
    502c:	0e 94 61 26 	call	0x4cc2	; 0x4cc2 <external_interrupt_init>
	//unsigned char duty;
	//LCD_Intialization();

	while(1)
	{
		Timer0_PWM_Init(140);
    5030:	8c e8       	ldi	r24, 0x8C	; 140
    5032:	0e 94 1e 28 	call	0x503c	; 0x503c <Timer0_PWM_Init>
		Forward();
    5036:	0e 94 5f 28 	call	0x50be	; 0x50be <Forward>
    503a:	fa cf       	rjmp	.-12     	; 0x5030 <main+0x6a>

0000503c <Timer0_PWM_Init>:
	}

}
void Timer0_PWM_Init(unsigned char set_duty_cycle){
    503c:	df 93       	push	r29
    503e:	cf 93       	push	r28
    5040:	0f 92       	push	r0
    5042:	cd b7       	in	r28, 0x3d	; 61
    5044:	de b7       	in	r29, 0x3e	; 62
    5046:	89 83       	std	Y+1, r24	; 0x01

	TCNT0 = 0; // Timer initial value
    5048:	e2 e5       	ldi	r30, 0x52	; 82
    504a:	f0 e0       	ldi	r31, 0x00	; 0
    504c:	10 82       	st	Z, r1

	OCR0  = set_duty_cycle; //compare value
    504e:	ec e5       	ldi	r30, 0x5C	; 92
    5050:	f0 e0       	ldi	r31, 0x00	; 0
    5052:	89 81       	ldd	r24, Y+1	; 0x01
    5054:	80 83       	st	Z, r24

	DIO_SetPinDirection(pb3,output); //set OC0 as output pin --> pin where the PWM signal is generated from MC
    5056:	8b e0       	ldi	r24, 0x0B	; 11
    5058:	61 e0       	ldi	r22, 0x01	; 1
    505a:	0e 94 7f 25 	call	0x4afe	; 0x4afe <DIO_SetPinDirection>
	 * 1. Fast PWM mode FOC0=0
	 * 2. Fast PWM Mode WGM01=1 & WGM00=1
	 * 3. Clear OC0 when match occurs (non inverted mode) COM00=0 & COM01=1
	 * 4. clock = F_CPU/8 CS00=0 CS01=1 CS02=0
	 */
	TCCR0 = (1<<WGM00) | (1<<WGM01) | (1<<COM01) | (1<<CS01);
    505e:	e3 e5       	ldi	r30, 0x53	; 83
    5060:	f0 e0       	ldi	r31, 0x00	; 0
    5062:	8a e6       	ldi	r24, 0x6A	; 106
    5064:	80 83       	st	Z, r24
}
    5066:	0f 90       	pop	r0
    5068:	cf 91       	pop	r28
    506a:	df 91       	pop	r29
    506c:	08 95       	ret

0000506e <Timer1_Fast_PWM_Init>:

void Timer1_Fast_PWM_Init(unsigned short duty_cycle)
{
    506e:	df 93       	push	r29
    5070:	cf 93       	push	r28
    5072:	00 d0       	rcall	.+0      	; 0x5074 <Timer1_Fast_PWM_Init+0x6>
    5074:	cd b7       	in	r28, 0x3d	; 61
    5076:	de b7       	in	r29, 0x3e	; 62
    5078:	9a 83       	std	Y+2, r25	; 0x02
    507a:	89 83       	std	Y+1, r24	; 0x01
	DIO_SetPinDirection(pd5,output);
    507c:	8d e1       	ldi	r24, 0x1D	; 29
    507e:	61 e0       	ldi	r22, 0x01	; 1
    5080:	0e 94 7f 25 	call	0x4afe	; 0x4afe <DIO_SetPinDirection>
	TCNT1 = 0;		/* Set timer1 initial count to zero */
    5084:	ec e4       	ldi	r30, 0x4C	; 76
    5086:	f0 e0       	ldi	r31, 0x00	; 0
    5088:	11 82       	std	Z+1, r1	; 0x01
    508a:	10 82       	st	Z, r1
	ICR1 = 2499;	/* Set TOP count for timer1 in ICR1 register */
    508c:	e6 e4       	ldi	r30, 0x46	; 70
    508e:	f0 e0       	ldi	r31, 0x00	; 0
    5090:	83 ec       	ldi	r24, 0xC3	; 195
    5092:	99 e0       	ldi	r25, 0x09	; 9
    5094:	91 83       	std	Z+1, r25	; 0x01
    5096:	80 83       	st	Z, r24
	OCR1A = duty_cycle; /* Set the compare value */
    5098:	ea e4       	ldi	r30, 0x4A	; 74
    509a:	f0 e0       	ldi	r31, 0x00	; 0
    509c:	89 81       	ldd	r24, Y+1	; 0x01
    509e:	9a 81       	ldd	r25, Y+2	; 0x02
    50a0:	91 83       	std	Z+1, r25	; 0x01
    50a2:	80 83       	st	Z, r24
	TCCR1A = (1<<WGM11) | (1<<COM1A1);
    50a4:	ef e4       	ldi	r30, 0x4F	; 79
    50a6:	f0 e0       	ldi	r31, 0x00	; 0
    50a8:	82 e8       	ldi	r24, 0x82	; 130
    50aa:	80 83       	st	Z, r24
	TCCR1B = (1<<WGM12) | (1<<WGM13) | (1<<CS10) | (1<<CS11);
    50ac:	ee e4       	ldi	r30, 0x4E	; 78
    50ae:	f0 e0       	ldi	r31, 0x00	; 0
    50b0:	8b e1       	ldi	r24, 0x1B	; 27
    50b2:	80 83       	st	Z, r24
}
    50b4:	0f 90       	pop	r0
    50b6:	0f 90       	pop	r0
    50b8:	cf 91       	pop	r28
    50ba:	df 91       	pop	r29
    50bc:	08 95       	ret

000050be <Forward>:
void Forward(void)
{
    50be:	df 93       	push	r29
    50c0:	cf 93       	push	r28
    50c2:	00 d0       	rcall	.+0      	; 0x50c4 <Forward+0x6>
    50c4:	cd b7       	in	r28, 0x3d	; 61
    50c6:	de b7       	in	r29, 0x3e	; 62
	uint16 distance;
	distance=ultasonic();
    50c8:	0e 94 ee 28 	call	0x51dc	; 0x51dc <ultasonic>
    50cc:	9a 83       	std	Y+2, r25	; 0x02
    50ce:	89 83       	std	Y+1, r24	; 0x01
	if(distance==10)
    50d0:	89 81       	ldd	r24, Y+1	; 0x01
    50d2:	9a 81       	ldd	r25, Y+2	; 0x02
    50d4:	8a 30       	cpi	r24, 0x0A	; 10
    50d6:	91 05       	cpc	r25, r1
    50d8:	19 f4       	brne	.+6      	; 0x50e0 <Forward+0x22>
	{
		Stop();
    50da:	0e 94 d7 28 	call	0x51ae	; 0x51ae <Stop>
    50de:	1d c0       	rjmp	.+58     	; 0x511a <Forward+0x5c>
	}
	else if(distance>10)
    50e0:	89 81       	ldd	r24, Y+1	; 0x01
    50e2:	9a 81       	ldd	r25, Y+2	; 0x02
    50e4:	8b 30       	cpi	r24, 0x0B	; 11
    50e6:	91 05       	cpc	r25, r1
    50e8:	88 f0       	brcs	.+34     	; 0x510c <Forward+0x4e>
	{
		DIO_WritePin(inA1,high);
    50ea:	8a e1       	ldi	r24, 0x1A	; 26
    50ec:	61 e0       	ldi	r22, 0x01	; 1
    50ee:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
		DIO_WritePin(inA2,low);
    50f2:	8b e1       	ldi	r24, 0x1B	; 27
    50f4:	60 e0       	ldi	r22, 0x00	; 0
    50f6:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
		DIO_WritePin(inB1,high);
    50fa:	8e e1       	ldi	r24, 0x1E	; 30
    50fc:	61 e0       	ldi	r22, 0x01	; 1
    50fe:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
		DIO_WritePin(inB2,low);
    5102:	8f e1       	ldi	r24, 0x1F	; 31
    5104:	60 e0       	ldi	r22, 0x00	; 0
    5106:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
    510a:	07 c0       	rjmp	.+14     	; 0x511a <Forward+0x5c>
	}
	else if(distance<10)
    510c:	89 81       	ldd	r24, Y+1	; 0x01
    510e:	9a 81       	ldd	r25, Y+2	; 0x02
    5110:	8a 30       	cpi	r24, 0x0A	; 10
    5112:	91 05       	cpc	r25, r1
    5114:	10 f4       	brcc	.+4      	; 0x511a <Forward+0x5c>
	{
		Backward();
    5116:	0e 94 92 28 	call	0x5124	; 0x5124 <Backward>
	}
}
    511a:	0f 90       	pop	r0
    511c:	0f 90       	pop	r0
    511e:	cf 91       	pop	r28
    5120:	df 91       	pop	r29
    5122:	08 95       	ret

00005124 <Backward>:
void Backward(void)
{
    5124:	df 93       	push	r29
    5126:	cf 93       	push	r28
    5128:	cd b7       	in	r28, 0x3d	; 61
    512a:	de b7       	in	r29, 0x3e	; 62
	DIO_WritePin(inA1,low);
    512c:	8a e1       	ldi	r24, 0x1A	; 26
    512e:	60 e0       	ldi	r22, 0x00	; 0
    5130:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
	DIO_WritePin(inA2,high);
    5134:	8b e1       	ldi	r24, 0x1B	; 27
    5136:	61 e0       	ldi	r22, 0x01	; 1
    5138:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
	DIO_WritePin(inB1,low);
    513c:	8e e1       	ldi	r24, 0x1E	; 30
    513e:	60 e0       	ldi	r22, 0x00	; 0
    5140:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
	DIO_WritePin(inB2,high);
    5144:	8f e1       	ldi	r24, 0x1F	; 31
    5146:	61 e0       	ldi	r22, 0x01	; 1
    5148:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
}
    514c:	cf 91       	pop	r28
    514e:	df 91       	pop	r29
    5150:	08 95       	ret

00005152 <Right>:
void Right(void)
{
    5152:	df 93       	push	r29
    5154:	cf 93       	push	r28
    5156:	cd b7       	in	r28, 0x3d	; 61
    5158:	de b7       	in	r29, 0x3e	; 62
	DIO_WritePin(inA1,high);
    515a:	8a e1       	ldi	r24, 0x1A	; 26
    515c:	61 e0       	ldi	r22, 0x01	; 1
    515e:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
	DIO_WritePin(inA2,low);
    5162:	8b e1       	ldi	r24, 0x1B	; 27
    5164:	60 e0       	ldi	r22, 0x00	; 0
    5166:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
	DIO_WritePin(inB1,low);
    516a:	8e e1       	ldi	r24, 0x1E	; 30
    516c:	60 e0       	ldi	r22, 0x00	; 0
    516e:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
	DIO_WritePin(inB2,high);
    5172:	8f e1       	ldi	r24, 0x1F	; 31
    5174:	61 e0       	ldi	r22, 0x01	; 1
    5176:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
}
    517a:	cf 91       	pop	r28
    517c:	df 91       	pop	r29
    517e:	08 95       	ret

00005180 <Left>:
void Left(void)
{
    5180:	df 93       	push	r29
    5182:	cf 93       	push	r28
    5184:	cd b7       	in	r28, 0x3d	; 61
    5186:	de b7       	in	r29, 0x3e	; 62
	DIO_WritePin(inA1,low);
    5188:	8a e1       	ldi	r24, 0x1A	; 26
    518a:	60 e0       	ldi	r22, 0x00	; 0
    518c:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
	DIO_WritePin(inA2,high);
    5190:	8b e1       	ldi	r24, 0x1B	; 27
    5192:	61 e0       	ldi	r22, 0x01	; 1
    5194:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
	DIO_WritePin(inB1,high);
    5198:	8e e1       	ldi	r24, 0x1E	; 30
    519a:	61 e0       	ldi	r22, 0x01	; 1
    519c:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
	DIO_WritePin(inB2,low);
    51a0:	8f e1       	ldi	r24, 0x1F	; 31
    51a2:	60 e0       	ldi	r22, 0x00	; 0
    51a4:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
}
    51a8:	cf 91       	pop	r28
    51aa:	df 91       	pop	r29
    51ac:	08 95       	ret

000051ae <Stop>:
void Stop(void)
{
    51ae:	df 93       	push	r29
    51b0:	cf 93       	push	r28
    51b2:	cd b7       	in	r28, 0x3d	; 61
    51b4:	de b7       	in	r29, 0x3e	; 62
	DIO_WritePin(inA1,low);
    51b6:	8a e1       	ldi	r24, 0x1A	; 26
    51b8:	60 e0       	ldi	r22, 0x00	; 0
    51ba:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
	DIO_WritePin(inA2,low);
    51be:	8b e1       	ldi	r24, 0x1B	; 27
    51c0:	60 e0       	ldi	r22, 0x00	; 0
    51c2:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
	DIO_WritePin(inB1,low);
    51c6:	8e e1       	ldi	r24, 0x1E	; 30
    51c8:	60 e0       	ldi	r22, 0x00	; 0
    51ca:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
	DIO_WritePin(inB2,low);
    51ce:	8f e1       	ldi	r24, 0x1F	; 31
    51d0:	60 e0       	ldi	r22, 0x00	; 0
    51d2:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
}
    51d6:	cf 91       	pop	r28
    51d8:	df 91       	pop	r29
    51da:	08 95       	ret

000051dc <ultasonic>:
uint16 ultasonic(void)
{
    51dc:	df 93       	push	r29
    51de:	cf 93       	push	r28
    51e0:	cd b7       	in	r28, 0x3d	; 61
    51e2:	de b7       	in	r29, 0x3e	; 62
    51e4:	aa 97       	sbiw	r28, 0x2a	; 42
    51e6:	0f b6       	in	r0, 0x3f	; 63
    51e8:	f8 94       	cli
    51ea:	de bf       	out	0x3e, r29	; 62
    51ec:	0f be       	out	0x3f, r0	; 63
    51ee:	cd bf       	out	0x3d, r28	; 61
	uint16 dist;
	uint16 time;
	DIO_WritePin(pb6,low);
    51f0:	8e e0       	ldi	r24, 0x0E	; 14
    51f2:	60 e0       	ldi	r22, 0x00	; 0
    51f4:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
	DIO_WritePin(pb0,low);
    51f8:	88 e0       	ldi	r24, 0x08	; 8
    51fa:	60 e0       	ldi	r22, 0x00	; 0
    51fc:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
    5200:	80 e0       	ldi	r24, 0x00	; 0
    5202:	90 e0       	ldi	r25, 0x00	; 0
    5204:	a0 e0       	ldi	r26, 0x00	; 0
    5206:	b0 e4       	ldi	r27, 0x40	; 64
    5208:	8b a3       	std	Y+35, r24	; 0x23
    520a:	9c a3       	std	Y+36, r25	; 0x24
    520c:	ad a3       	std	Y+37, r26	; 0x25
    520e:	be a3       	std	Y+38, r27	; 0x26
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5210:	6b a1       	ldd	r22, Y+35	; 0x23
    5212:	7c a1       	ldd	r23, Y+36	; 0x24
    5214:	8d a1       	ldd	r24, Y+37	; 0x25
    5216:	9e a1       	ldd	r25, Y+38	; 0x26
    5218:	20 e0       	ldi	r18, 0x00	; 0
    521a:	30 e0       	ldi	r19, 0x00	; 0
    521c:	4a ef       	ldi	r20, 0xFA	; 250
    521e:	54 e4       	ldi	r21, 0x44	; 68
    5220:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    5224:	dc 01       	movw	r26, r24
    5226:	cb 01       	movw	r24, r22
    5228:	8f 8f       	std	Y+31, r24	; 0x1f
    522a:	98 a3       	std	Y+32, r25	; 0x20
    522c:	a9 a3       	std	Y+33, r26	; 0x21
    522e:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
    5230:	6f 8d       	ldd	r22, Y+31	; 0x1f
    5232:	78 a1       	ldd	r23, Y+32	; 0x20
    5234:	89 a1       	ldd	r24, Y+33	; 0x21
    5236:	9a a1       	ldd	r25, Y+34	; 0x22
    5238:	20 e0       	ldi	r18, 0x00	; 0
    523a:	30 e0       	ldi	r19, 0x00	; 0
    523c:	40 e8       	ldi	r20, 0x80	; 128
    523e:	5f e3       	ldi	r21, 0x3F	; 63
    5240:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
    5244:	88 23       	and	r24, r24
    5246:	2c f4       	brge	.+10     	; 0x5252 <ultasonic+0x76>
		__ticks = 1;
    5248:	81 e0       	ldi	r24, 0x01	; 1
    524a:	90 e0       	ldi	r25, 0x00	; 0
    524c:	9e 8f       	std	Y+30, r25	; 0x1e
    524e:	8d 8f       	std	Y+29, r24	; 0x1d
    5250:	3f c0       	rjmp	.+126    	; 0x52d0 <ultasonic+0xf4>
	else if (__tmp > 65535)
    5252:	6f 8d       	ldd	r22, Y+31	; 0x1f
    5254:	78 a1       	ldd	r23, Y+32	; 0x20
    5256:	89 a1       	ldd	r24, Y+33	; 0x21
    5258:	9a a1       	ldd	r25, Y+34	; 0x22
    525a:	20 e0       	ldi	r18, 0x00	; 0
    525c:	3f ef       	ldi	r19, 0xFF	; 255
    525e:	4f e7       	ldi	r20, 0x7F	; 127
    5260:	57 e4       	ldi	r21, 0x47	; 71
    5262:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__gtsf2>
    5266:	18 16       	cp	r1, r24
    5268:	4c f5       	brge	.+82     	; 0x52bc <ultasonic+0xe0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    526a:	6b a1       	ldd	r22, Y+35	; 0x23
    526c:	7c a1       	ldd	r23, Y+36	; 0x24
    526e:	8d a1       	ldd	r24, Y+37	; 0x25
    5270:	9e a1       	ldd	r25, Y+38	; 0x26
    5272:	20 e0       	ldi	r18, 0x00	; 0
    5274:	30 e0       	ldi	r19, 0x00	; 0
    5276:	40 e2       	ldi	r20, 0x20	; 32
    5278:	51 e4       	ldi	r21, 0x41	; 65
    527a:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    527e:	dc 01       	movw	r26, r24
    5280:	cb 01       	movw	r24, r22
    5282:	bc 01       	movw	r22, r24
    5284:	cd 01       	movw	r24, r26
    5286:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    528a:	dc 01       	movw	r26, r24
    528c:	cb 01       	movw	r24, r22
    528e:	9e 8f       	std	Y+30, r25	; 0x1e
    5290:	8d 8f       	std	Y+29, r24	; 0x1d
    5292:	0f c0       	rjmp	.+30     	; 0x52b2 <ultasonic+0xd6>
    5294:	88 ec       	ldi	r24, 0xC8	; 200
    5296:	90 e0       	ldi	r25, 0x00	; 0
    5298:	9c 8f       	std	Y+28, r25	; 0x1c
    529a:	8b 8f       	std	Y+27, r24	; 0x1b
    529c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    529e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    52a0:	01 97       	sbiw	r24, 0x01	; 1
    52a2:	f1 f7       	brne	.-4      	; 0x52a0 <ultasonic+0xc4>
    52a4:	9c 8f       	std	Y+28, r25	; 0x1c
    52a6:	8b 8f       	std	Y+27, r24	; 0x1b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    52a8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    52aa:	9e 8d       	ldd	r25, Y+30	; 0x1e
    52ac:	01 97       	sbiw	r24, 0x01	; 1
    52ae:	9e 8f       	std	Y+30, r25	; 0x1e
    52b0:	8d 8f       	std	Y+29, r24	; 0x1d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    52b2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    52b4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    52b6:	00 97       	sbiw	r24, 0x00	; 0
    52b8:	69 f7       	brne	.-38     	; 0x5294 <ultasonic+0xb8>
    52ba:	14 c0       	rjmp	.+40     	; 0x52e4 <ultasonic+0x108>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    52bc:	6f 8d       	ldd	r22, Y+31	; 0x1f
    52be:	78 a1       	ldd	r23, Y+32	; 0x20
    52c0:	89 a1       	ldd	r24, Y+33	; 0x21
    52c2:	9a a1       	ldd	r25, Y+34	; 0x22
    52c4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    52c8:	dc 01       	movw	r26, r24
    52ca:	cb 01       	movw	r24, r22
    52cc:	9e 8f       	std	Y+30, r25	; 0x1e
    52ce:	8d 8f       	std	Y+29, r24	; 0x1d
    52d0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    52d2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    52d4:	9a 8f       	std	Y+26, r25	; 0x1a
    52d6:	89 8f       	std	Y+25, r24	; 0x19
    52d8:	89 8d       	ldd	r24, Y+25	; 0x19
    52da:	9a 8d       	ldd	r25, Y+26	; 0x1a
    52dc:	01 97       	sbiw	r24, 0x01	; 1
    52de:	f1 f7       	brne	.-4      	; 0x52dc <ultasonic+0x100>
    52e0:	9a 8f       	std	Y+26, r25	; 0x1a
    52e2:	89 8f       	std	Y+25, r24	; 0x19
	_delay_ms(2);
	DIO_WritePin(pb0,high);
    52e4:	88 e0       	ldi	r24, 0x08	; 8
    52e6:	61 e0       	ldi	r22, 0x01	; 1
    52e8:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
    52ec:	80 e0       	ldi	r24, 0x00	; 0
    52ee:	90 e0       	ldi	r25, 0x00	; 0
    52f0:	a0 e2       	ldi	r26, 0x20	; 32
    52f2:	b1 e4       	ldi	r27, 0x41	; 65
    52f4:	8d 8b       	std	Y+21, r24	; 0x15
    52f6:	9e 8b       	std	Y+22, r25	; 0x16
    52f8:	af 8b       	std	Y+23, r26	; 0x17
    52fa:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    52fc:	6d 89       	ldd	r22, Y+21	; 0x15
    52fe:	7e 89       	ldd	r23, Y+22	; 0x16
    5300:	8f 89       	ldd	r24, Y+23	; 0x17
    5302:	98 8d       	ldd	r25, Y+24	; 0x18
    5304:	2b ea       	ldi	r18, 0xAB	; 171
    5306:	3a ea       	ldi	r19, 0xAA	; 170
    5308:	4a e2       	ldi	r20, 0x2A	; 42
    530a:	50 e4       	ldi	r21, 0x40	; 64
    530c:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    5310:	dc 01       	movw	r26, r24
    5312:	cb 01       	movw	r24, r22
    5314:	89 8b       	std	Y+17, r24	; 0x11
    5316:	9a 8b       	std	Y+18, r25	; 0x12
    5318:	ab 8b       	std	Y+19, r26	; 0x13
    531a:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    531c:	69 89       	ldd	r22, Y+17	; 0x11
    531e:	7a 89       	ldd	r23, Y+18	; 0x12
    5320:	8b 89       	ldd	r24, Y+19	; 0x13
    5322:	9c 89       	ldd	r25, Y+20	; 0x14
    5324:	20 e0       	ldi	r18, 0x00	; 0
    5326:	30 e0       	ldi	r19, 0x00	; 0
    5328:	40 e8       	ldi	r20, 0x80	; 128
    532a:	5f e3       	ldi	r21, 0x3F	; 63
    532c:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
    5330:	88 23       	and	r24, r24
    5332:	1c f4       	brge	.+6      	; 0x533a <ultasonic+0x15e>
		__ticks = 1;
    5334:	81 e0       	ldi	r24, 0x01	; 1
    5336:	88 8b       	std	Y+16, r24	; 0x10
    5338:	91 c0       	rjmp	.+290    	; 0x545c <ultasonic+0x280>
	else if (__tmp > 255)
    533a:	69 89       	ldd	r22, Y+17	; 0x11
    533c:	7a 89       	ldd	r23, Y+18	; 0x12
    533e:	8b 89       	ldd	r24, Y+19	; 0x13
    5340:	9c 89       	ldd	r25, Y+20	; 0x14
    5342:	20 e0       	ldi	r18, 0x00	; 0
    5344:	30 e0       	ldi	r19, 0x00	; 0
    5346:	4f e7       	ldi	r20, 0x7F	; 127
    5348:	53 e4       	ldi	r21, 0x43	; 67
    534a:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__gtsf2>
    534e:	18 16       	cp	r1, r24
    5350:	0c f0       	brlt	.+2      	; 0x5354 <ultasonic+0x178>
    5352:	7b c0       	rjmp	.+246    	; 0x544a <ultasonic+0x26e>
	{
		_delay_ms(__us / 1000.0);
    5354:	6d 89       	ldd	r22, Y+21	; 0x15
    5356:	7e 89       	ldd	r23, Y+22	; 0x16
    5358:	8f 89       	ldd	r24, Y+23	; 0x17
    535a:	98 8d       	ldd	r25, Y+24	; 0x18
    535c:	20 e0       	ldi	r18, 0x00	; 0
    535e:	30 e0       	ldi	r19, 0x00	; 0
    5360:	4a e7       	ldi	r20, 0x7A	; 122
    5362:	54 e4       	ldi	r21, 0x44	; 68
    5364:	0e 94 a6 10 	call	0x214c	; 0x214c <__divsf3>
    5368:	dc 01       	movw	r26, r24
    536a:	cb 01       	movw	r24, r22
    536c:	8c 87       	std	Y+12, r24	; 0x0c
    536e:	9d 87       	std	Y+13, r25	; 0x0d
    5370:	ae 87       	std	Y+14, r26	; 0x0e
    5372:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5374:	6c 85       	ldd	r22, Y+12	; 0x0c
    5376:	7d 85       	ldd	r23, Y+13	; 0x0d
    5378:	8e 85       	ldd	r24, Y+14	; 0x0e
    537a:	9f 85       	ldd	r25, Y+15	; 0x0f
    537c:	20 e0       	ldi	r18, 0x00	; 0
    537e:	30 e0       	ldi	r19, 0x00	; 0
    5380:	4a ef       	ldi	r20, 0xFA	; 250
    5382:	54 e4       	ldi	r21, 0x44	; 68
    5384:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    5388:	dc 01       	movw	r26, r24
    538a:	cb 01       	movw	r24, r22
    538c:	88 87       	std	Y+8, r24	; 0x08
    538e:	99 87       	std	Y+9, r25	; 0x09
    5390:	aa 87       	std	Y+10, r26	; 0x0a
    5392:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    5394:	68 85       	ldd	r22, Y+8	; 0x08
    5396:	79 85       	ldd	r23, Y+9	; 0x09
    5398:	8a 85       	ldd	r24, Y+10	; 0x0a
    539a:	9b 85       	ldd	r25, Y+11	; 0x0b
    539c:	20 e0       	ldi	r18, 0x00	; 0
    539e:	30 e0       	ldi	r19, 0x00	; 0
    53a0:	40 e8       	ldi	r20, 0x80	; 128
    53a2:	5f e3       	ldi	r21, 0x3F	; 63
    53a4:	0e 94 b2 11 	call	0x2364	; 0x2364 <__ltsf2>
    53a8:	88 23       	and	r24, r24
    53aa:	2c f4       	brge	.+10     	; 0x53b6 <ultasonic+0x1da>
		__ticks = 1;
    53ac:	81 e0       	ldi	r24, 0x01	; 1
    53ae:	90 e0       	ldi	r25, 0x00	; 0
    53b0:	9f 83       	std	Y+7, r25	; 0x07
    53b2:	8e 83       	std	Y+6, r24	; 0x06
    53b4:	3f c0       	rjmp	.+126    	; 0x5434 <ultasonic+0x258>
	else if (__tmp > 65535)
    53b6:	68 85       	ldd	r22, Y+8	; 0x08
    53b8:	79 85       	ldd	r23, Y+9	; 0x09
    53ba:	8a 85       	ldd	r24, Y+10	; 0x0a
    53bc:	9b 85       	ldd	r25, Y+11	; 0x0b
    53be:	20 e0       	ldi	r18, 0x00	; 0
    53c0:	3f ef       	ldi	r19, 0xFF	; 255
    53c2:	4f e7       	ldi	r20, 0x7F	; 127
    53c4:	57 e4       	ldi	r21, 0x47	; 71
    53c6:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__gtsf2>
    53ca:	18 16       	cp	r1, r24
    53cc:	4c f5       	brge	.+82     	; 0x5420 <ultasonic+0x244>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    53ce:	6c 85       	ldd	r22, Y+12	; 0x0c
    53d0:	7d 85       	ldd	r23, Y+13	; 0x0d
    53d2:	8e 85       	ldd	r24, Y+14	; 0x0e
    53d4:	9f 85       	ldd	r25, Y+15	; 0x0f
    53d6:	20 e0       	ldi	r18, 0x00	; 0
    53d8:	30 e0       	ldi	r19, 0x00	; 0
    53da:	40 e2       	ldi	r20, 0x20	; 32
    53dc:	51 e4       	ldi	r21, 0x41	; 65
    53de:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    53e2:	dc 01       	movw	r26, r24
    53e4:	cb 01       	movw	r24, r22
    53e6:	bc 01       	movw	r22, r24
    53e8:	cd 01       	movw	r24, r26
    53ea:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    53ee:	dc 01       	movw	r26, r24
    53f0:	cb 01       	movw	r24, r22
    53f2:	9f 83       	std	Y+7, r25	; 0x07
    53f4:	8e 83       	std	Y+6, r24	; 0x06
    53f6:	0f c0       	rjmp	.+30     	; 0x5416 <ultasonic+0x23a>
    53f8:	88 ec       	ldi	r24, 0xC8	; 200
    53fa:	90 e0       	ldi	r25, 0x00	; 0
    53fc:	9d 83       	std	Y+5, r25	; 0x05
    53fe:	8c 83       	std	Y+4, r24	; 0x04
    5400:	8c 81       	ldd	r24, Y+4	; 0x04
    5402:	9d 81       	ldd	r25, Y+5	; 0x05
    5404:	01 97       	sbiw	r24, 0x01	; 1
    5406:	f1 f7       	brne	.-4      	; 0x5404 <ultasonic+0x228>
    5408:	9d 83       	std	Y+5, r25	; 0x05
    540a:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    540c:	8e 81       	ldd	r24, Y+6	; 0x06
    540e:	9f 81       	ldd	r25, Y+7	; 0x07
    5410:	01 97       	sbiw	r24, 0x01	; 1
    5412:	9f 83       	std	Y+7, r25	; 0x07
    5414:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5416:	8e 81       	ldd	r24, Y+6	; 0x06
    5418:	9f 81       	ldd	r25, Y+7	; 0x07
    541a:	00 97       	sbiw	r24, 0x00	; 0
    541c:	69 f7       	brne	.-38     	; 0x53f8 <ultasonic+0x21c>
    541e:	24 c0       	rjmp	.+72     	; 0x5468 <ultasonic+0x28c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5420:	68 85       	ldd	r22, Y+8	; 0x08
    5422:	79 85       	ldd	r23, Y+9	; 0x09
    5424:	8a 85       	ldd	r24, Y+10	; 0x0a
    5426:	9b 85       	ldd	r25, Y+11	; 0x0b
    5428:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    542c:	dc 01       	movw	r26, r24
    542e:	cb 01       	movw	r24, r22
    5430:	9f 83       	std	Y+7, r25	; 0x07
    5432:	8e 83       	std	Y+6, r24	; 0x06
    5434:	8e 81       	ldd	r24, Y+6	; 0x06
    5436:	9f 81       	ldd	r25, Y+7	; 0x07
    5438:	9b 83       	std	Y+3, r25	; 0x03
    543a:	8a 83       	std	Y+2, r24	; 0x02
    543c:	8a 81       	ldd	r24, Y+2	; 0x02
    543e:	9b 81       	ldd	r25, Y+3	; 0x03
    5440:	01 97       	sbiw	r24, 0x01	; 1
    5442:	f1 f7       	brne	.-4      	; 0x5440 <ultasonic+0x264>
    5444:	9b 83       	std	Y+3, r25	; 0x03
    5446:	8a 83       	std	Y+2, r24	; 0x02
    5448:	0f c0       	rjmp	.+30     	; 0x5468 <ultasonic+0x28c>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    544a:	69 89       	ldd	r22, Y+17	; 0x11
    544c:	7a 89       	ldd	r23, Y+18	; 0x12
    544e:	8b 89       	ldd	r24, Y+19	; 0x13
    5450:	9c 89       	ldd	r25, Y+20	; 0x14
    5452:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5456:	dc 01       	movw	r26, r24
    5458:	cb 01       	movw	r24, r22
    545a:	88 8b       	std	Y+16, r24	; 0x10
    545c:	88 89       	ldd	r24, Y+16	; 0x10
    545e:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    5460:	89 81       	ldd	r24, Y+1	; 0x01
    5462:	8a 95       	dec	r24
    5464:	f1 f7       	brne	.-4      	; 0x5462 <ultasonic+0x286>
    5466:	89 83       	std	Y+1, r24	; 0x01
	_delay_us(10);
	DIO_WritePin(pb0,low);
    5468:	88 e0       	ldi	r24, 0x08	; 8
    546a:	60 e0       	ldi	r22, 0x00	; 0
    546c:	0e 94 2c 24 	call	0x4858	; 0x4858 <DIO_WritePin>
	//DIO_WritePin(pb6,high);
	time=g_timer2;
    5470:	80 91 8a 01 	lds	r24, 0x018A
    5474:	88 2f       	mov	r24, r24
    5476:	90 e0       	ldi	r25, 0x00	; 0
    5478:	98 a7       	std	Y+40, r25	; 0x28
    547a:	8f a3       	std	Y+39, r24	; 0x27
	dist=time*2.176;
    547c:	8f a1       	ldd	r24, Y+39	; 0x27
    547e:	98 a5       	ldd	r25, Y+40	; 0x28
    5480:	cc 01       	movw	r24, r24
    5482:	a0 e0       	ldi	r26, 0x00	; 0
    5484:	b0 e0       	ldi	r27, 0x00	; 0
    5486:	bc 01       	movw	r22, r24
    5488:	cd 01       	movw	r24, r26
    548a:	0e 94 36 12 	call	0x246c	; 0x246c <__floatunsisf>
    548e:	dc 01       	movw	r26, r24
    5490:	cb 01       	movw	r24, r22
    5492:	bc 01       	movw	r22, r24
    5494:	cd 01       	movw	r24, r26
    5496:	26 e9       	ldi	r18, 0x96	; 150
    5498:	33 e4       	ldi	r19, 0x43	; 67
    549a:	4b e0       	ldi	r20, 0x0B	; 11
    549c:	50 e4       	ldi	r21, 0x40	; 64
    549e:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    54a2:	dc 01       	movw	r26, r24
    54a4:	cb 01       	movw	r24, r22
    54a6:	bc 01       	movw	r22, r24
    54a8:	cd 01       	movw	r24, r26
    54aa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    54ae:	dc 01       	movw	r26, r24
    54b0:	cb 01       	movw	r24, r22
    54b2:	9a a7       	std	Y+42, r25	; 0x2a
    54b4:	89 a7       	std	Y+41, r24	; 0x29
	return dist;
    54b6:	89 a5       	ldd	r24, Y+41	; 0x29
    54b8:	9a a5       	ldd	r25, Y+42	; 0x2a
}
    54ba:	aa 96       	adiw	r28, 0x2a	; 42
    54bc:	0f b6       	in	r0, 0x3f	; 63
    54be:	f8 94       	cli
    54c0:	de bf       	out	0x3e, r29	; 62
    54c2:	0f be       	out	0x3f, r0	; 63
    54c4:	cd bf       	out	0x3d, r28	; 61
    54c6:	cf 91       	pop	r28
    54c8:	df 91       	pop	r29
    54ca:	08 95       	ret

000054cc <__vector_3>:
ISR(INT2_vect)
{
    54cc:	1f 92       	push	r1
    54ce:	0f 92       	push	r0
    54d0:	0f b6       	in	r0, 0x3f	; 63
    54d2:	0f 92       	push	r0
    54d4:	11 24       	eor	r1, r1
    54d6:	2f 93       	push	r18
    54d8:	3f 93       	push	r19
    54da:	4f 93       	push	r20
    54dc:	5f 93       	push	r21
    54de:	6f 93       	push	r22
    54e0:	7f 93       	push	r23
    54e2:	8f 93       	push	r24
    54e4:	9f 93       	push	r25
    54e6:	af 93       	push	r26
    54e8:	bf 93       	push	r27
    54ea:	ef 93       	push	r30
    54ec:	ff 93       	push	r31
    54ee:	df 93       	push	r29
    54f0:	cf 93       	push	r28
    54f2:	cd b7       	in	r28, 0x3d	; 61
    54f4:	de b7       	in	r29, 0x3e	; 62

	g_tick++;
    54f6:	80 91 8b 01 	lds	r24, 0x018B
    54fa:	8f 5f       	subi	r24, 0xFF	; 255
    54fc:	80 93 8b 01 	sts	0x018B, r24
	if(g_tick==1)
    5500:	80 91 8b 01 	lds	r24, 0x018B
    5504:	81 30       	cpi	r24, 0x01	; 1
    5506:	39 f4       	brne	.+14     	; 0x5516 <__vector_3+0x4a>
	{
		Timer2_init();
    5508:	0e 94 1b 30 	call	0x6036	; 0x6036 <Timer2_init>
		external_interrupt_init(interrupt2,falling_edge);
    550c:	82 e0       	ldi	r24, 0x02	; 2
    550e:	62 e0       	ldi	r22, 0x02	; 2
    5510:	0e 94 61 26 	call	0x4cc2	; 0x4cc2 <external_interrupt_init>
    5514:	11 c0       	rjmp	.+34     	; 0x5538 <__vector_3+0x6c>
	}
	else if(g_tick==2)
    5516:	80 91 8b 01 	lds	r24, 0x018B
    551a:	82 30       	cpi	r24, 0x02	; 2
    551c:	69 f4       	brne	.+26     	; 0x5538 <__vector_3+0x6c>
	{
		g_timer2=TCNT2;
    551e:	e4 e4       	ldi	r30, 0x44	; 68
    5520:	f0 e0       	ldi	r31, 0x00	; 0
    5522:	80 81       	ld	r24, Z
    5524:	80 93 8a 01 	sts	0x018A, r24
		external_interrupt_init(interrupt2,rising_edge);
    5528:	82 e0       	ldi	r24, 0x02	; 2
    552a:	63 e0       	ldi	r22, 0x03	; 3
    552c:	0e 94 61 26 	call	0x4cc2	; 0x4cc2 <external_interrupt_init>
		Timer2_deinit();
    5530:	0e 94 29 30 	call	0x6052	; 0x6052 <Timer2_deinit>
		g_tick=0;
    5534:	10 92 8b 01 	sts	0x018B, r1
	}
}
    5538:	cf 91       	pop	r28
    553a:	df 91       	pop	r29
    553c:	ff 91       	pop	r31
    553e:	ef 91       	pop	r30
    5540:	bf 91       	pop	r27
    5542:	af 91       	pop	r26
    5544:	9f 91       	pop	r25
    5546:	8f 91       	pop	r24
    5548:	7f 91       	pop	r23
    554a:	6f 91       	pop	r22
    554c:	5f 91       	pop	r21
    554e:	4f 91       	pop	r20
    5550:	3f 91       	pop	r19
    5552:	2f 91       	pop	r18
    5554:	0f 90       	pop	r0
    5556:	0f be       	out	0x3f, r0	; 63
    5558:	0f 90       	pop	r0
    555a:	1f 90       	pop	r1
    555c:	18 95       	reti

0000555e <timer_init>:

#include "timer0.h"


void timer_init(uint8 mode,uint8 prescaler)
{
    555e:	df 93       	push	r29
    5560:	cf 93       	push	r28
    5562:	00 d0       	rcall	.+0      	; 0x5564 <timer_init+0x6>
    5564:	cd b7       	in	r28, 0x3d	; 61
    5566:	de b7       	in	r29, 0x3e	; 62
    5568:	89 83       	std	Y+1, r24	; 0x01
    556a:	6a 83       	std	Y+2, r22	; 0x02
	if (mode==overFlow)
    556c:	89 81       	ldd	r24, Y+1	; 0x01
    556e:	88 23       	and	r24, r24
    5570:	a9 f5       	brne	.+106    	; 0x55dc <timer_init+0x7e>
	{
		TCCR0 |=(1<<7);	//force o/p compare off
    5572:	a3 e5       	ldi	r26, 0x53	; 83
    5574:	b0 e0       	ldi	r27, 0x00	; 0
    5576:	e3 e5       	ldi	r30, 0x53	; 83
    5578:	f0 e0       	ldi	r31, 0x00	; 0
    557a:	80 81       	ld	r24, Z
    557c:	80 68       	ori	r24, 0x80	; 128
    557e:	8c 93       	st	X, r24
		TCCR0 &=~(1<<6); //normal mood waveform generation
    5580:	a3 e5       	ldi	r26, 0x53	; 83
    5582:	b0 e0       	ldi	r27, 0x00	; 0
    5584:	e3 e5       	ldi	r30, 0x53	; 83
    5586:	f0 e0       	ldi	r31, 0x00	; 0
    5588:	80 81       	ld	r24, Z
    558a:	8f 7b       	andi	r24, 0xBF	; 191
    558c:	8c 93       	st	X, r24
		TCCR0 &=~(1<<5); ///disable oc0 channel
    558e:	a3 e5       	ldi	r26, 0x53	; 83
    5590:	b0 e0       	ldi	r27, 0x00	; 0
    5592:	e3 e5       	ldi	r30, 0x53	; 83
    5594:	f0 e0       	ldi	r31, 0x00	; 0
    5596:	80 81       	ld	r24, Z
    5598:	8f 7d       	andi	r24, 0xDF	; 223
    559a:	8c 93       	st	X, r24
		TCCR0 &=~(1<<4); //disable oc0 channel
    559c:	a3 e5       	ldi	r26, 0x53	; 83
    559e:	b0 e0       	ldi	r27, 0x00	; 0
    55a0:	e3 e5       	ldi	r30, 0x53	; 83
    55a2:	f0 e0       	ldi	r31, 0x00	; 0
    55a4:	80 81       	ld	r24, Z
    55a6:	8f 7e       	andi	r24, 0xEF	; 239
    55a8:	8c 93       	st	X, r24
		TCCR0 &=~(1<<3); ///normal mood waveform generation
    55aa:	a3 e5       	ldi	r26, 0x53	; 83
    55ac:	b0 e0       	ldi	r27, 0x00	; 0
    55ae:	e3 e5       	ldi	r30, 0x53	; 83
    55b0:	f0 e0       	ldi	r31, 0x00	; 0
    55b2:	80 81       	ld	r24, Z
    55b4:	87 7f       	andi	r24, 0xF7	; 247
    55b6:	8c 93       	st	X, r24
		TCCR0|=(prescaler & 0x0f);
    55b8:	a3 e5       	ldi	r26, 0x53	; 83
    55ba:	b0 e0       	ldi	r27, 0x00	; 0
    55bc:	e3 e5       	ldi	r30, 0x53	; 83
    55be:	f0 e0       	ldi	r31, 0x00	; 0
    55c0:	80 81       	ld	r24, Z
    55c2:	98 2f       	mov	r25, r24
    55c4:	8a 81       	ldd	r24, Y+2	; 0x02
    55c6:	8f 70       	andi	r24, 0x0F	; 15
    55c8:	89 2b       	or	r24, r25
    55ca:	8c 93       	st	X, r24
#if((interruptEnable == true)&&(mode == overFlow))
		TIMSK |=(1<<TOIE0);// enable overflow interrupt
    55cc:	a9 e5       	ldi	r26, 0x59	; 89
    55ce:	b0 e0       	ldi	r27, 0x00	; 0
    55d0:	e9 e5       	ldi	r30, 0x59	; 89
    55d2:	f0 e0       	ldi	r31, 0x00	; 0
    55d4:	80 81       	ld	r24, Z
    55d6:	81 60       	ori	r24, 0x01	; 1
    55d8:	8c 93       	st	X, r24
    55da:	17 c0       	rjmp	.+46     	; 0x560a <timer_init+0xac>
#elif((interruptEnable == true) && (mode == ctc))
		TIMSK |=(1<<OCIE0);// enable overflow interrupt
#endif
	}
	else if(mode==ctc)
    55dc:	89 81       	ldd	r24, Y+1	; 0x01
    55de:	81 30       	cpi	r24, 0x01	; 1
    55e0:	a1 f4       	brne	.+40     	; 0x560a <timer_init+0xac>
	{
		TCNT0 = 0; //timer initial value
    55e2:	e2 e5       	ldi	r30, 0x52	; 82
    55e4:	f0 e0       	ldi	r31, 0x00	; 0
    55e6:	10 82       	st	Z, r1
		OCR0  = 249; //compare value
    55e8:	ec e5       	ldi	r30, 0x5C	; 92
    55ea:	f0 e0       	ldi	r31, 0x00	; 0
    55ec:	89 ef       	ldi	r24, 0xF9	; 249
    55ee:	80 83       	st	Z, r24
		TCCR0 =  (1<<WGM01) | (prescaler & 0x0f);
    55f0:	e3 e5       	ldi	r30, 0x53	; 83
    55f2:	f0 e0       	ldi	r31, 0x00	; 0
    55f4:	8a 81       	ldd	r24, Y+2	; 0x02
    55f6:	87 70       	andi	r24, 0x07	; 7
    55f8:	88 60       	ori	r24, 0x08	; 8
    55fa:	80 83       	st	Z, r24
		Set_Bit(TIFR,OCF0);
    55fc:	a8 e5       	ldi	r26, 0x58	; 88
    55fe:	b0 e0       	ldi	r27, 0x00	; 0
    5600:	e8 e5       	ldi	r30, 0x58	; 88
    5602:	f0 e0       	ldi	r31, 0x00	; 0
    5604:	80 81       	ld	r24, Z
    5606:	82 60       	ori	r24, 0x02	; 2
    5608:	8c 93       	st	X, r24
	}

}
    560a:	0f 90       	pop	r0
    560c:	0f 90       	pop	r0
    560e:	cf 91       	pop	r28
    5610:	df 91       	pop	r29
    5612:	08 95       	ret

00005614 <timer_delay>:

void timer_delay(volatile uint32 n)
{
    5614:	df 93       	push	r29
    5616:	cf 93       	push	r28
    5618:	00 d0       	rcall	.+0      	; 0x561a <timer_delay+0x6>
    561a:	00 d0       	rcall	.+0      	; 0x561c <timer_delay+0x8>
    561c:	cd b7       	in	r28, 0x3d	; 61
    561e:	de b7       	in	r29, 0x3e	; 62
    5620:	69 83       	std	Y+1, r22	; 0x01
    5622:	7a 83       	std	Y+2, r23	; 0x02
    5624:	8b 83       	std	Y+3, r24	; 0x03
    5626:	9c 83       	std	Y+4, r25	; 0x04
	TCNT0 = 0; //timer initial value
    5628:	e2 e5       	ldi	r30, 0x52	; 82
    562a:	f0 e0       	ldi	r31, 0x00	; 0
    562c:	10 82       	st	Z, r1
	OCR0  = 249; //compare value
    562e:	ec e5       	ldi	r30, 0x5C	; 92
    5630:	f0 e0       	ldi	r31, 0x00	; 0
    5632:	89 ef       	ldi	r24, 0xF9	; 249
    5634:	80 83       	st	Z, r24
	TCCR0 =  (1<<WGM01) | (1<<CS01) | (1<<CS00);
    5636:	e3 e5       	ldi	r30, 0x53	; 83
    5638:	f0 e0       	ldi	r31, 0x00	; 0
    563a:	8b e0       	ldi	r24, 0x0B	; 11
    563c:	80 83       	st	Z, r24
	n=n/2;
    563e:	89 81       	ldd	r24, Y+1	; 0x01
    5640:	9a 81       	ldd	r25, Y+2	; 0x02
    5642:	ab 81       	ldd	r26, Y+3	; 0x03
    5644:	bc 81       	ldd	r27, Y+4	; 0x04
    5646:	b6 95       	lsr	r27
    5648:	a7 95       	ror	r26
    564a:	97 95       	ror	r25
    564c:	87 95       	ror	r24
    564e:	89 83       	std	Y+1, r24	; 0x01
    5650:	9a 83       	std	Y+2, r25	; 0x02
    5652:	ab 83       	std	Y+3, r26	; 0x03
    5654:	bc 83       	std	Y+4, r27	; 0x04
    5656:	1e c0       	rjmp	.+60     	; 0x5694 <timer_delay+0x80>
	while(n)
	{
		while((Get_Bit(TIFR,OCF0))==0);
    5658:	e8 e5       	ldi	r30, 0x58	; 88
    565a:	f0 e0       	ldi	r31, 0x00	; 0
    565c:	80 81       	ld	r24, Z
    565e:	88 2f       	mov	r24, r24
    5660:	90 e0       	ldi	r25, 0x00	; 0
    5662:	82 70       	andi	r24, 0x02	; 2
    5664:	90 70       	andi	r25, 0x00	; 0
    5666:	00 97       	sbiw	r24, 0x00	; 0
    5668:	b9 f3       	breq	.-18     	; 0x5658 <timer_delay+0x44>
		Set_Bit(TIFR,OCF0);
    566a:	a8 e5       	ldi	r26, 0x58	; 88
    566c:	b0 e0       	ldi	r27, 0x00	; 0
    566e:	e8 e5       	ldi	r30, 0x58	; 88
    5670:	f0 e0       	ldi	r31, 0x00	; 0
    5672:	80 81       	ld	r24, Z
    5674:	82 60       	ori	r24, 0x02	; 2
    5676:	8c 93       	st	X, r24
		TCNT0 = 0;
    5678:	e2 e5       	ldi	r30, 0x52	; 82
    567a:	f0 e0       	ldi	r31, 0x00	; 0
    567c:	10 82       	st	Z, r1
		n--;
    567e:	89 81       	ldd	r24, Y+1	; 0x01
    5680:	9a 81       	ldd	r25, Y+2	; 0x02
    5682:	ab 81       	ldd	r26, Y+3	; 0x03
    5684:	bc 81       	ldd	r27, Y+4	; 0x04
    5686:	01 97       	sbiw	r24, 0x01	; 1
    5688:	a1 09       	sbc	r26, r1
    568a:	b1 09       	sbc	r27, r1
    568c:	89 83       	std	Y+1, r24	; 0x01
    568e:	9a 83       	std	Y+2, r25	; 0x02
    5690:	ab 83       	std	Y+3, r26	; 0x03
    5692:	bc 83       	std	Y+4, r27	; 0x04
{
	TCNT0 = 0; //timer initial value
	OCR0  = 249; //compare value
	TCCR0 =  (1<<WGM01) | (1<<CS01) | (1<<CS00);
	n=n/2;
	while(n)
    5694:	89 81       	ldd	r24, Y+1	; 0x01
    5696:	9a 81       	ldd	r25, Y+2	; 0x02
    5698:	ab 81       	ldd	r26, Y+3	; 0x03
    569a:	bc 81       	ldd	r27, Y+4	; 0x04
    569c:	00 97       	sbiw	r24, 0x00	; 0
    569e:	a1 05       	cpc	r26, r1
    56a0:	b1 05       	cpc	r27, r1
    56a2:	d1 f6       	brne	.-76     	; 0x5658 <timer_delay+0x44>
		while((Get_Bit(TIFR,OCF0))==0);
		Set_Bit(TIFR,OCF0);
		TCNT0 = 0;
		n--;
	}
}
    56a4:	0f 90       	pop	r0
    56a6:	0f 90       	pop	r0
    56a8:	0f 90       	pop	r0
    56aa:	0f 90       	pop	r0
    56ac:	cf 91       	pop	r28
    56ae:	df 91       	pop	r29
    56b0:	08 95       	ret

000056b2 <timer_microSecond>:
void timer_microSecond(volatile uint64 n)
{
    56b2:	af 92       	push	r10
    56b4:	bf 92       	push	r11
    56b6:	cf 92       	push	r12
    56b8:	df 92       	push	r13
    56ba:	ef 92       	push	r14
    56bc:	ff 92       	push	r15
    56be:	0f 93       	push	r16
    56c0:	1f 93       	push	r17
    56c2:	df 93       	push	r29
    56c4:	cf 93       	push	r28
    56c6:	cd b7       	in	r28, 0x3d	; 61
    56c8:	de b7       	in	r29, 0x3e	; 62
    56ca:	c8 57       	subi	r28, 0x78	; 120
    56cc:	d0 40       	sbci	r29, 0x00	; 0
    56ce:	0f b6       	in	r0, 0x3f	; 63
    56d0:	f8 94       	cli
    56d2:	de bf       	out	0x3e, r29	; 62
    56d4:	0f be       	out	0x3f, r0	; 63
    56d6:	cd bf       	out	0x3d, r28	; 61
    56d8:	29 8b       	std	Y+17, r18	; 0x11
    56da:	3a 8b       	std	Y+18, r19	; 0x12
    56dc:	4b 8b       	std	Y+19, r20	; 0x13
    56de:	5c 8b       	std	Y+20, r21	; 0x14
    56e0:	6d 8b       	std	Y+21, r22	; 0x15
    56e2:	7e 8b       	std	Y+22, r23	; 0x16
    56e4:	8f 8b       	std	Y+23, r24	; 0x17
    56e6:	98 8f       	std	Y+24, r25	; 0x18
	uint64 div,rem;
	if(n<=250)
    56e8:	89 89       	ldd	r24, Y+17	; 0x11
    56ea:	8b a3       	std	Y+35, r24	; 0x23
    56ec:	9a 89       	ldd	r25, Y+18	; 0x12
    56ee:	9c a3       	std	Y+36, r25	; 0x24
    56f0:	8b 89       	ldd	r24, Y+19	; 0x13
    56f2:	8d a3       	std	Y+37, r24	; 0x25
    56f4:	9c 89       	ldd	r25, Y+20	; 0x14
    56f6:	9e a3       	std	Y+38, r25	; 0x26
    56f8:	8d 89       	ldd	r24, Y+21	; 0x15
    56fa:	8f a3       	std	Y+39, r24	; 0x27
    56fc:	9e 89       	ldd	r25, Y+22	; 0x16
    56fe:	98 a7       	std	Y+40, r25	; 0x28
    5700:	8f 89       	ldd	r24, Y+23	; 0x17
    5702:	89 a7       	std	Y+41, r24	; 0x29
    5704:	98 8d       	ldd	r25, Y+24	; 0x18
    5706:	9a a7       	std	Y+42, r25	; 0x2a
    5708:	8a a5       	ldd	r24, Y+42	; 0x2a
    570a:	88 23       	and	r24, r24
    570c:	09 f0       	breq	.+2      	; 0x5710 <timer_microSecond+0x5e>
    570e:	c0 c1       	rjmp	.+896    	; 0x5a90 <timer_microSecond+0x3de>
    5710:	9a a5       	ldd	r25, Y+42	; 0x2a
    5712:	99 23       	and	r25, r25
    5714:	71 f5       	brne	.+92     	; 0x5772 <timer_microSecond+0xc0>
    5716:	89 a5       	ldd	r24, Y+41	; 0x29
    5718:	88 23       	and	r24, r24
    571a:	09 f0       	breq	.+2      	; 0x571e <timer_microSecond+0x6c>
    571c:	b9 c1       	rjmp	.+882    	; 0x5a90 <timer_microSecond+0x3de>
    571e:	99 a5       	ldd	r25, Y+41	; 0x29
    5720:	99 23       	and	r25, r25
    5722:	39 f5       	brne	.+78     	; 0x5772 <timer_microSecond+0xc0>
    5724:	88 a5       	ldd	r24, Y+40	; 0x28
    5726:	88 23       	and	r24, r24
    5728:	09 f0       	breq	.+2      	; 0x572c <timer_microSecond+0x7a>
    572a:	b2 c1       	rjmp	.+868    	; 0x5a90 <timer_microSecond+0x3de>
    572c:	98 a5       	ldd	r25, Y+40	; 0x28
    572e:	99 23       	and	r25, r25
    5730:	01 f5       	brne	.+64     	; 0x5772 <timer_microSecond+0xc0>
    5732:	8f a1       	ldd	r24, Y+39	; 0x27
    5734:	88 23       	and	r24, r24
    5736:	09 f0       	breq	.+2      	; 0x573a <timer_microSecond+0x88>
    5738:	ab c1       	rjmp	.+854    	; 0x5a90 <timer_microSecond+0x3de>
    573a:	9f a1       	ldd	r25, Y+39	; 0x27
    573c:	99 23       	and	r25, r25
    573e:	c9 f4       	brne	.+50     	; 0x5772 <timer_microSecond+0xc0>
    5740:	8e a1       	ldd	r24, Y+38	; 0x26
    5742:	88 23       	and	r24, r24
    5744:	09 f0       	breq	.+2      	; 0x5748 <timer_microSecond+0x96>
    5746:	a4 c1       	rjmp	.+840    	; 0x5a90 <timer_microSecond+0x3de>
    5748:	9e a1       	ldd	r25, Y+38	; 0x26
    574a:	99 23       	and	r25, r25
    574c:	91 f4       	brne	.+36     	; 0x5772 <timer_microSecond+0xc0>
    574e:	8d a1       	ldd	r24, Y+37	; 0x25
    5750:	88 23       	and	r24, r24
    5752:	09 f0       	breq	.+2      	; 0x5756 <timer_microSecond+0xa4>
    5754:	9d c1       	rjmp	.+826    	; 0x5a90 <timer_microSecond+0x3de>
    5756:	9d a1       	ldd	r25, Y+37	; 0x25
    5758:	99 23       	and	r25, r25
    575a:	59 f4       	brne	.+22     	; 0x5772 <timer_microSecond+0xc0>
    575c:	8c a1       	ldd	r24, Y+36	; 0x24
    575e:	88 23       	and	r24, r24
    5760:	09 f0       	breq	.+2      	; 0x5764 <timer_microSecond+0xb2>
    5762:	96 c1       	rjmp	.+812    	; 0x5a90 <timer_microSecond+0x3de>
    5764:	9c a1       	ldd	r25, Y+36	; 0x24
    5766:	99 23       	and	r25, r25
    5768:	21 f4       	brne	.+8      	; 0x5772 <timer_microSecond+0xc0>
    576a:	8b a1       	ldd	r24, Y+35	; 0x23
    576c:	8b 3f       	cpi	r24, 0xFB	; 251
    576e:	08 f0       	brcs	.+2      	; 0x5772 <timer_microSecond+0xc0>
    5770:	8f c1       	rjmp	.+798    	; 0x5a90 <timer_microSecond+0x3de>
	{

		//uint16 time;
		TCNT0 = 0; //timer initial value
    5772:	e2 e5       	ldi	r30, 0x52	; 82
    5774:	f0 e0       	ldi	r31, 0x00	; 0
    5776:	10 82       	st	Z, r1
		OCR0  = n; //compare value
    5778:	ec e5       	ldi	r30, 0x5C	; 92
    577a:	f0 e0       	ldi	r31, 0x00	; 0
    577c:	29 89       	ldd	r18, Y+17	; 0x11
    577e:	3a 89       	ldd	r19, Y+18	; 0x12
    5780:	4b 89       	ldd	r20, Y+19	; 0x13
    5782:	5c 89       	ldd	r21, Y+20	; 0x14
    5784:	6d 89       	ldd	r22, Y+21	; 0x15
    5786:	7e 89       	ldd	r23, Y+22	; 0x16
    5788:	8f 89       	ldd	r24, Y+23	; 0x17
    578a:	98 8d       	ldd	r25, Y+24	; 0x18
    578c:	82 2f       	mov	r24, r18
    578e:	80 83       	st	Z, r24
		TCCR0 =  (1<<WGM01) | (1<<CS01);
    5790:	e3 e5       	ldi	r30, 0x53	; 83
    5792:	f0 e0       	ldi	r31, 0x00	; 0
    5794:	8a e0       	ldi	r24, 0x0A	; 10
    5796:	80 83       	st	Z, r24
    5798:	13 c0       	rjmp	.+38     	; 0x57c0 <timer_microSecond+0x10e>
		while(n--)
		{
			while((Get_Bit(TIFR,OCF0))==0);
    579a:	e8 e5       	ldi	r30, 0x58	; 88
    579c:	f0 e0       	ldi	r31, 0x00	; 0
    579e:	80 81       	ld	r24, Z
    57a0:	88 2f       	mov	r24, r24
    57a2:	90 e0       	ldi	r25, 0x00	; 0
    57a4:	82 70       	andi	r24, 0x02	; 2
    57a6:	90 70       	andi	r25, 0x00	; 0
    57a8:	00 97       	sbiw	r24, 0x00	; 0
    57aa:	b9 f3       	breq	.-18     	; 0x579a <timer_microSecond+0xe8>
			Set_Bit(TIFR,OCF0);
    57ac:	a8 e5       	ldi	r26, 0x58	; 88
    57ae:	b0 e0       	ldi	r27, 0x00	; 0
    57b0:	e8 e5       	ldi	r30, 0x58	; 88
    57b2:	f0 e0       	ldi	r31, 0x00	; 0
    57b4:	80 81       	ld	r24, Z
    57b6:	82 60       	ori	r24, 0x02	; 2
    57b8:	8c 93       	st	X, r24
			TCNT0 = 0;
    57ba:	e2 e5       	ldi	r30, 0x52	; 82
    57bc:	f0 e0       	ldi	r31, 0x00	; 0
    57be:	10 82       	st	Z, r1

		//uint16 time;
		TCNT0 = 0; //timer initial value
		OCR0  = n; //compare value
		TCCR0 =  (1<<WGM01) | (1<<CS01);
		while(n--)
    57c0:	99 89       	ldd	r25, Y+17	; 0x11
    57c2:	9b 8f       	std	Y+27, r25	; 0x1b
    57c4:	8a 89       	ldd	r24, Y+18	; 0x12
    57c6:	8c 8f       	std	Y+28, r24	; 0x1c
    57c8:	9b 89       	ldd	r25, Y+19	; 0x13
    57ca:	9d 8f       	std	Y+29, r25	; 0x1d
    57cc:	8c 89       	ldd	r24, Y+20	; 0x14
    57ce:	8e 8f       	std	Y+30, r24	; 0x1e
    57d0:	9d 89       	ldd	r25, Y+21	; 0x15
    57d2:	9f 8f       	std	Y+31, r25	; 0x1f
    57d4:	8e 89       	ldd	r24, Y+22	; 0x16
    57d6:	88 a3       	std	Y+32, r24	; 0x20
    57d8:	9f 89       	ldd	r25, Y+23	; 0x17
    57da:	99 a3       	std	Y+33, r25	; 0x21
    57dc:	88 8d       	ldd	r24, Y+24	; 0x18
    57de:	8a a3       	std	Y+34, r24	; 0x22
    57e0:	1a 8e       	std	Y+26, r1	; 0x1a
    57e2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    57e4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    57e6:	89 2b       	or	r24, r25
    57e8:	9d 8d       	ldd	r25, Y+29	; 0x1d
    57ea:	89 2b       	or	r24, r25
    57ec:	9e 8d       	ldd	r25, Y+30	; 0x1e
    57ee:	89 2b       	or	r24, r25
    57f0:	9f 8d       	ldd	r25, Y+31	; 0x1f
    57f2:	89 2b       	or	r24, r25
    57f4:	98 a1       	ldd	r25, Y+32	; 0x20
    57f6:	89 2b       	or	r24, r25
    57f8:	99 a1       	ldd	r25, Y+33	; 0x21
    57fa:	89 2b       	or	r24, r25
    57fc:	9a a1       	ldd	r25, Y+34	; 0x22
    57fe:	89 2b       	or	r24, r25
    5800:	88 23       	and	r24, r24
    5802:	11 f0       	breq	.+4      	; 0x5808 <timer_microSecond+0x156>
    5804:	81 e0       	ldi	r24, 0x01	; 1
    5806:	8a 8f       	std	Y+26, r24	; 0x1a
    5808:	9f ef       	ldi	r25, 0xFF	; 255
    580a:	9b a7       	std	Y+43, r25	; 0x2b
    580c:	8f ef       	ldi	r24, 0xFF	; 255
    580e:	8c a7       	std	Y+44, r24	; 0x2c
    5810:	9f ef       	ldi	r25, 0xFF	; 255
    5812:	9d a7       	std	Y+45, r25	; 0x2d
    5814:	8f ef       	ldi	r24, 0xFF	; 255
    5816:	8e a7       	std	Y+46, r24	; 0x2e
    5818:	9f ef       	ldi	r25, 0xFF	; 255
    581a:	9f a7       	std	Y+47, r25	; 0x2f
    581c:	8f ef       	ldi	r24, 0xFF	; 255
    581e:	88 ab       	std	Y+48, r24	; 0x30
    5820:	9f ef       	ldi	r25, 0xFF	; 255
    5822:	99 ab       	std	Y+49, r25	; 0x31
    5824:	8f ef       	ldi	r24, 0xFF	; 255
    5826:	8a ab       	std	Y+50, r24	; 0x32
    5828:	9b 8d       	ldd	r25, Y+27	; 0x1b
    582a:	8b a5       	ldd	r24, Y+43	; 0x2b
    582c:	98 0f       	add	r25, r24
    582e:	9b ab       	std	Y+51, r25	; 0x33
    5830:	91 e0       	ldi	r25, 0x01	; 1
    5832:	9b af       	std	Y+59, r25	; 0x3b
    5834:	8b a9       	ldd	r24, Y+51	; 0x33
    5836:	9b 8d       	ldd	r25, Y+27	; 0x1b
    5838:	89 17       	cp	r24, r25
    583a:	08 f0       	brcs	.+2      	; 0x583e <timer_microSecond+0x18c>
    583c:	1b ae       	std	Y+59, r1	; 0x3b
    583e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    5840:	9c a5       	ldd	r25, Y+44	; 0x2c
    5842:	89 0f       	add	r24, r25
    5844:	8c ab       	std	Y+52, r24	; 0x34
    5846:	81 e0       	ldi	r24, 0x01	; 1
    5848:	8c af       	std	Y+60, r24	; 0x3c
    584a:	9c a9       	ldd	r25, Y+52	; 0x34
    584c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    584e:	98 17       	cp	r25, r24
    5850:	08 f0       	brcs	.+2      	; 0x5854 <timer_microSecond+0x1a2>
    5852:	1c ae       	std	Y+60, r1	; 0x3c
    5854:	9b ad       	ldd	r25, Y+59	; 0x3b
    5856:	8c a9       	ldd	r24, Y+52	; 0x34
    5858:	98 0f       	add	r25, r24
    585a:	9d af       	std	Y+61, r25	; 0x3d
    585c:	91 e0       	ldi	r25, 0x01	; 1
    585e:	9e af       	std	Y+62, r25	; 0x3e
    5860:	8d ad       	ldd	r24, Y+61	; 0x3d
    5862:	9c a9       	ldd	r25, Y+52	; 0x34
    5864:	89 17       	cp	r24, r25
    5866:	08 f0       	brcs	.+2      	; 0x586a <timer_microSecond+0x1b8>
    5868:	1e ae       	std	Y+62, r1	; 0x3e
    586a:	8c ad       	ldd	r24, Y+60	; 0x3c
    586c:	9e ad       	ldd	r25, Y+62	; 0x3e
    586e:	89 2b       	or	r24, r25
    5870:	8c af       	std	Y+60, r24	; 0x3c
    5872:	8d ad       	ldd	r24, Y+61	; 0x3d
    5874:	8c ab       	std	Y+52, r24	; 0x34
    5876:	9d 8d       	ldd	r25, Y+29	; 0x1d
    5878:	8d a5       	ldd	r24, Y+45	; 0x2d
    587a:	98 0f       	add	r25, r24
    587c:	9d ab       	std	Y+53, r25	; 0x35
    587e:	91 e0       	ldi	r25, 0x01	; 1
    5880:	9f af       	std	Y+63, r25	; 0x3f
    5882:	8d a9       	ldd	r24, Y+53	; 0x35
    5884:	9d 8d       	ldd	r25, Y+29	; 0x1d
    5886:	89 17       	cp	r24, r25
    5888:	08 f0       	brcs	.+2      	; 0x588c <timer_microSecond+0x1da>
    588a:	1f ae       	std	Y+63, r1	; 0x3f
    588c:	8c ad       	ldd	r24, Y+60	; 0x3c
    588e:	9d a9       	ldd	r25, Y+53	; 0x35
    5890:	89 0f       	add	r24, r25
    5892:	21 96       	adiw	r28, 0x01	; 1
    5894:	8f af       	std	Y+63, r24	; 0x3f
    5896:	21 97       	sbiw	r28, 0x01	; 1
    5898:	81 e0       	ldi	r24, 0x01	; 1
    589a:	22 96       	adiw	r28, 0x02	; 2
    589c:	8f af       	std	Y+63, r24	; 0x3f
    589e:	22 97       	sbiw	r28, 0x02	; 2
    58a0:	21 96       	adiw	r28, 0x01	; 1
    58a2:	9f ad       	ldd	r25, Y+63	; 0x3f
    58a4:	21 97       	sbiw	r28, 0x01	; 1
    58a6:	8d a9       	ldd	r24, Y+53	; 0x35
    58a8:	98 17       	cp	r25, r24
    58aa:	18 f0       	brcs	.+6      	; 0x58b2 <timer_microSecond+0x200>
    58ac:	22 96       	adiw	r28, 0x02	; 2
    58ae:	1f ae       	std	Y+63, r1	; 0x3f
    58b0:	22 97       	sbiw	r28, 0x02	; 2
    58b2:	9f ad       	ldd	r25, Y+63	; 0x3f
    58b4:	22 96       	adiw	r28, 0x02	; 2
    58b6:	8f ad       	ldd	r24, Y+63	; 0x3f
    58b8:	22 97       	sbiw	r28, 0x02	; 2
    58ba:	98 2b       	or	r25, r24
    58bc:	9f af       	std	Y+63, r25	; 0x3f
    58be:	21 96       	adiw	r28, 0x01	; 1
    58c0:	9f ad       	ldd	r25, Y+63	; 0x3f
    58c2:	21 97       	sbiw	r28, 0x01	; 1
    58c4:	9d ab       	std	Y+53, r25	; 0x35
    58c6:	8e 8d       	ldd	r24, Y+30	; 0x1e
    58c8:	9e a5       	ldd	r25, Y+46	; 0x2e
    58ca:	89 0f       	add	r24, r25
    58cc:	8e ab       	std	Y+54, r24	; 0x36
    58ce:	81 e0       	ldi	r24, 0x01	; 1
    58d0:	23 96       	adiw	r28, 0x03	; 3
    58d2:	8f af       	std	Y+63, r24	; 0x3f
    58d4:	23 97       	sbiw	r28, 0x03	; 3
    58d6:	9e a9       	ldd	r25, Y+54	; 0x36
    58d8:	8e 8d       	ldd	r24, Y+30	; 0x1e
    58da:	98 17       	cp	r25, r24
    58dc:	18 f0       	brcs	.+6      	; 0x58e4 <timer_microSecond+0x232>
    58de:	23 96       	adiw	r28, 0x03	; 3
    58e0:	1f ae       	std	Y+63, r1	; 0x3f
    58e2:	23 97       	sbiw	r28, 0x03	; 3
    58e4:	9f ad       	ldd	r25, Y+63	; 0x3f
    58e6:	8e a9       	ldd	r24, Y+54	; 0x36
    58e8:	98 0f       	add	r25, r24
    58ea:	24 96       	adiw	r28, 0x04	; 4
    58ec:	9f af       	std	Y+63, r25	; 0x3f
    58ee:	24 97       	sbiw	r28, 0x04	; 4
    58f0:	91 e0       	ldi	r25, 0x01	; 1
    58f2:	25 96       	adiw	r28, 0x05	; 5
    58f4:	9f af       	std	Y+63, r25	; 0x3f
    58f6:	25 97       	sbiw	r28, 0x05	; 5
    58f8:	24 96       	adiw	r28, 0x04	; 4
    58fa:	8f ad       	ldd	r24, Y+63	; 0x3f
    58fc:	24 97       	sbiw	r28, 0x04	; 4
    58fe:	9e a9       	ldd	r25, Y+54	; 0x36
    5900:	89 17       	cp	r24, r25
    5902:	18 f0       	brcs	.+6      	; 0x590a <timer_microSecond+0x258>
    5904:	25 96       	adiw	r28, 0x05	; 5
    5906:	1f ae       	std	Y+63, r1	; 0x3f
    5908:	25 97       	sbiw	r28, 0x05	; 5
    590a:	23 96       	adiw	r28, 0x03	; 3
    590c:	8f ad       	ldd	r24, Y+63	; 0x3f
    590e:	23 97       	sbiw	r28, 0x03	; 3
    5910:	25 96       	adiw	r28, 0x05	; 5
    5912:	9f ad       	ldd	r25, Y+63	; 0x3f
    5914:	25 97       	sbiw	r28, 0x05	; 5
    5916:	89 2b       	or	r24, r25
    5918:	23 96       	adiw	r28, 0x03	; 3
    591a:	8f af       	std	Y+63, r24	; 0x3f
    591c:	23 97       	sbiw	r28, 0x03	; 3
    591e:	24 96       	adiw	r28, 0x04	; 4
    5920:	8f ad       	ldd	r24, Y+63	; 0x3f
    5922:	24 97       	sbiw	r28, 0x04	; 4
    5924:	8e ab       	std	Y+54, r24	; 0x36
    5926:	9f 8d       	ldd	r25, Y+31	; 0x1f
    5928:	8f a5       	ldd	r24, Y+47	; 0x2f
    592a:	98 0f       	add	r25, r24
    592c:	9f ab       	std	Y+55, r25	; 0x37
    592e:	91 e0       	ldi	r25, 0x01	; 1
    5930:	26 96       	adiw	r28, 0x06	; 6
    5932:	9f af       	std	Y+63, r25	; 0x3f
    5934:	26 97       	sbiw	r28, 0x06	; 6
    5936:	8f a9       	ldd	r24, Y+55	; 0x37
    5938:	9f 8d       	ldd	r25, Y+31	; 0x1f
    593a:	89 17       	cp	r24, r25
    593c:	18 f0       	brcs	.+6      	; 0x5944 <timer_microSecond+0x292>
    593e:	26 96       	adiw	r28, 0x06	; 6
    5940:	1f ae       	std	Y+63, r1	; 0x3f
    5942:	26 97       	sbiw	r28, 0x06	; 6
    5944:	23 96       	adiw	r28, 0x03	; 3
    5946:	8f ad       	ldd	r24, Y+63	; 0x3f
    5948:	23 97       	sbiw	r28, 0x03	; 3
    594a:	9f a9       	ldd	r25, Y+55	; 0x37
    594c:	89 0f       	add	r24, r25
    594e:	27 96       	adiw	r28, 0x07	; 7
    5950:	8f af       	std	Y+63, r24	; 0x3f
    5952:	27 97       	sbiw	r28, 0x07	; 7
    5954:	81 e0       	ldi	r24, 0x01	; 1
    5956:	28 96       	adiw	r28, 0x08	; 8
    5958:	8f af       	std	Y+63, r24	; 0x3f
    595a:	28 97       	sbiw	r28, 0x08	; 8
    595c:	27 96       	adiw	r28, 0x07	; 7
    595e:	9f ad       	ldd	r25, Y+63	; 0x3f
    5960:	27 97       	sbiw	r28, 0x07	; 7
    5962:	8f a9       	ldd	r24, Y+55	; 0x37
    5964:	98 17       	cp	r25, r24
    5966:	18 f0       	brcs	.+6      	; 0x596e <timer_microSecond+0x2bc>
    5968:	28 96       	adiw	r28, 0x08	; 8
    596a:	1f ae       	std	Y+63, r1	; 0x3f
    596c:	28 97       	sbiw	r28, 0x08	; 8
    596e:	26 96       	adiw	r28, 0x06	; 6
    5970:	9f ad       	ldd	r25, Y+63	; 0x3f
    5972:	26 97       	sbiw	r28, 0x06	; 6
    5974:	28 96       	adiw	r28, 0x08	; 8
    5976:	8f ad       	ldd	r24, Y+63	; 0x3f
    5978:	28 97       	sbiw	r28, 0x08	; 8
    597a:	98 2b       	or	r25, r24
    597c:	26 96       	adiw	r28, 0x06	; 6
    597e:	9f af       	std	Y+63, r25	; 0x3f
    5980:	26 97       	sbiw	r28, 0x06	; 6
    5982:	27 96       	adiw	r28, 0x07	; 7
    5984:	9f ad       	ldd	r25, Y+63	; 0x3f
    5986:	27 97       	sbiw	r28, 0x07	; 7
    5988:	9f ab       	std	Y+55, r25	; 0x37
    598a:	88 a1       	ldd	r24, Y+32	; 0x20
    598c:	98 a9       	ldd	r25, Y+48	; 0x30
    598e:	89 0f       	add	r24, r25
    5990:	88 af       	std	Y+56, r24	; 0x38
    5992:	81 e0       	ldi	r24, 0x01	; 1
    5994:	29 96       	adiw	r28, 0x09	; 9
    5996:	8f af       	std	Y+63, r24	; 0x3f
    5998:	29 97       	sbiw	r28, 0x09	; 9
    599a:	98 ad       	ldd	r25, Y+56	; 0x38
    599c:	88 a1       	ldd	r24, Y+32	; 0x20
    599e:	98 17       	cp	r25, r24
    59a0:	18 f0       	brcs	.+6      	; 0x59a8 <timer_microSecond+0x2f6>
    59a2:	29 96       	adiw	r28, 0x09	; 9
    59a4:	1f ae       	std	Y+63, r1	; 0x3f
    59a6:	29 97       	sbiw	r28, 0x09	; 9
    59a8:	26 96       	adiw	r28, 0x06	; 6
    59aa:	9f ad       	ldd	r25, Y+63	; 0x3f
    59ac:	26 97       	sbiw	r28, 0x06	; 6
    59ae:	88 ad       	ldd	r24, Y+56	; 0x38
    59b0:	98 0f       	add	r25, r24
    59b2:	2a 96       	adiw	r28, 0x0a	; 10
    59b4:	9f af       	std	Y+63, r25	; 0x3f
    59b6:	2a 97       	sbiw	r28, 0x0a	; 10
    59b8:	91 e0       	ldi	r25, 0x01	; 1
    59ba:	2b 96       	adiw	r28, 0x0b	; 11
    59bc:	9f af       	std	Y+63, r25	; 0x3f
    59be:	2b 97       	sbiw	r28, 0x0b	; 11
    59c0:	2a 96       	adiw	r28, 0x0a	; 10
    59c2:	8f ad       	ldd	r24, Y+63	; 0x3f
    59c4:	2a 97       	sbiw	r28, 0x0a	; 10
    59c6:	98 ad       	ldd	r25, Y+56	; 0x38
    59c8:	89 17       	cp	r24, r25
    59ca:	18 f0       	brcs	.+6      	; 0x59d2 <timer_microSecond+0x320>
    59cc:	2b 96       	adiw	r28, 0x0b	; 11
    59ce:	1f ae       	std	Y+63, r1	; 0x3f
    59d0:	2b 97       	sbiw	r28, 0x0b	; 11
    59d2:	29 96       	adiw	r28, 0x09	; 9
    59d4:	8f ad       	ldd	r24, Y+63	; 0x3f
    59d6:	29 97       	sbiw	r28, 0x09	; 9
    59d8:	2b 96       	adiw	r28, 0x0b	; 11
    59da:	9f ad       	ldd	r25, Y+63	; 0x3f
    59dc:	2b 97       	sbiw	r28, 0x0b	; 11
    59de:	89 2b       	or	r24, r25
    59e0:	29 96       	adiw	r28, 0x09	; 9
    59e2:	8f af       	std	Y+63, r24	; 0x3f
    59e4:	29 97       	sbiw	r28, 0x09	; 9
    59e6:	2a 96       	adiw	r28, 0x0a	; 10
    59e8:	8f ad       	ldd	r24, Y+63	; 0x3f
    59ea:	2a 97       	sbiw	r28, 0x0a	; 10
    59ec:	88 af       	std	Y+56, r24	; 0x38
    59ee:	99 a1       	ldd	r25, Y+33	; 0x21
    59f0:	89 a9       	ldd	r24, Y+49	; 0x31
    59f2:	98 0f       	add	r25, r24
    59f4:	99 af       	std	Y+57, r25	; 0x39
    59f6:	91 e0       	ldi	r25, 0x01	; 1
    59f8:	2c 96       	adiw	r28, 0x0c	; 12
    59fa:	9f af       	std	Y+63, r25	; 0x3f
    59fc:	2c 97       	sbiw	r28, 0x0c	; 12
    59fe:	89 ad       	ldd	r24, Y+57	; 0x39
    5a00:	99 a1       	ldd	r25, Y+33	; 0x21
    5a02:	89 17       	cp	r24, r25
    5a04:	18 f0       	brcs	.+6      	; 0x5a0c <timer_microSecond+0x35a>
    5a06:	2c 96       	adiw	r28, 0x0c	; 12
    5a08:	1f ae       	std	Y+63, r1	; 0x3f
    5a0a:	2c 97       	sbiw	r28, 0x0c	; 12
    5a0c:	29 96       	adiw	r28, 0x09	; 9
    5a0e:	8f ad       	ldd	r24, Y+63	; 0x3f
    5a10:	29 97       	sbiw	r28, 0x09	; 9
    5a12:	99 ad       	ldd	r25, Y+57	; 0x39
    5a14:	89 0f       	add	r24, r25
    5a16:	2d 96       	adiw	r28, 0x0d	; 13
    5a18:	8f af       	std	Y+63, r24	; 0x3f
    5a1a:	2d 97       	sbiw	r28, 0x0d	; 13
    5a1c:	81 e0       	ldi	r24, 0x01	; 1
    5a1e:	2e 96       	adiw	r28, 0x0e	; 14
    5a20:	8f af       	std	Y+63, r24	; 0x3f
    5a22:	2e 97       	sbiw	r28, 0x0e	; 14
    5a24:	2d 96       	adiw	r28, 0x0d	; 13
    5a26:	9f ad       	ldd	r25, Y+63	; 0x3f
    5a28:	2d 97       	sbiw	r28, 0x0d	; 13
    5a2a:	89 ad       	ldd	r24, Y+57	; 0x39
    5a2c:	98 17       	cp	r25, r24
    5a2e:	18 f0       	brcs	.+6      	; 0x5a36 <timer_microSecond+0x384>
    5a30:	2e 96       	adiw	r28, 0x0e	; 14
    5a32:	1f ae       	std	Y+63, r1	; 0x3f
    5a34:	2e 97       	sbiw	r28, 0x0e	; 14
    5a36:	2c 96       	adiw	r28, 0x0c	; 12
    5a38:	9f ad       	ldd	r25, Y+63	; 0x3f
    5a3a:	2c 97       	sbiw	r28, 0x0c	; 12
    5a3c:	2e 96       	adiw	r28, 0x0e	; 14
    5a3e:	8f ad       	ldd	r24, Y+63	; 0x3f
    5a40:	2e 97       	sbiw	r28, 0x0e	; 14
    5a42:	98 2b       	or	r25, r24
    5a44:	2c 96       	adiw	r28, 0x0c	; 12
    5a46:	9f af       	std	Y+63, r25	; 0x3f
    5a48:	2c 97       	sbiw	r28, 0x0c	; 12
    5a4a:	2d 96       	adiw	r28, 0x0d	; 13
    5a4c:	9f ad       	ldd	r25, Y+63	; 0x3f
    5a4e:	2d 97       	sbiw	r28, 0x0d	; 13
    5a50:	99 af       	std	Y+57, r25	; 0x39
    5a52:	8a a1       	ldd	r24, Y+34	; 0x22
    5a54:	9a a9       	ldd	r25, Y+50	; 0x32
    5a56:	89 0f       	add	r24, r25
    5a58:	8a af       	std	Y+58, r24	; 0x3a
    5a5a:	2c 96       	adiw	r28, 0x0c	; 12
    5a5c:	8f ad       	ldd	r24, Y+63	; 0x3f
    5a5e:	2c 97       	sbiw	r28, 0x0c	; 12
    5a60:	9a ad       	ldd	r25, Y+58	; 0x3a
    5a62:	89 0f       	add	r24, r25
    5a64:	8a af       	std	Y+58, r24	; 0x3a
    5a66:	2b a9       	ldd	r18, Y+51	; 0x33
    5a68:	3c a9       	ldd	r19, Y+52	; 0x34
    5a6a:	4d a9       	ldd	r20, Y+53	; 0x35
    5a6c:	5e a9       	ldd	r21, Y+54	; 0x36
    5a6e:	6f a9       	ldd	r22, Y+55	; 0x37
    5a70:	78 ad       	ldd	r23, Y+56	; 0x38
    5a72:	89 ad       	ldd	r24, Y+57	; 0x39
    5a74:	9a ad       	ldd	r25, Y+58	; 0x3a
    5a76:	29 8b       	std	Y+17, r18	; 0x11
    5a78:	3a 8b       	std	Y+18, r19	; 0x12
    5a7a:	4b 8b       	std	Y+19, r20	; 0x13
    5a7c:	5c 8b       	std	Y+20, r21	; 0x14
    5a7e:	6d 8b       	std	Y+21, r22	; 0x15
    5a80:	7e 8b       	std	Y+22, r23	; 0x16
    5a82:	8f 8b       	std	Y+23, r24	; 0x17
    5a84:	98 8f       	std	Y+24, r25	; 0x18
    5a86:	8a 8d       	ldd	r24, Y+26	; 0x1a
    5a88:	88 23       	and	r24, r24
    5a8a:	09 f0       	breq	.+2      	; 0x5a8e <timer_microSecond+0x3dc>
    5a8c:	86 ce       	rjmp	.-756    	; 0x579a <timer_microSecond+0xe8>
    5a8e:	c1 c2       	rjmp	.+1410   	; 0x6012 <timer_microSecond+0x960>
		}
		return;
	}
	else
	{
		div=n/250;
    5a90:	a9 88       	ldd	r10, Y+17	; 0x11
    5a92:	ba 88       	ldd	r11, Y+18	; 0x12
    5a94:	cb 88       	ldd	r12, Y+19	; 0x13
    5a96:	dc 88       	ldd	r13, Y+20	; 0x14
    5a98:	ed 88       	ldd	r14, Y+21	; 0x15
    5a9a:	fe 88       	ldd	r15, Y+22	; 0x16
    5a9c:	0f 89       	ldd	r16, Y+23	; 0x17
    5a9e:	18 8d       	ldd	r17, Y+24	; 0x18
    5aa0:	2a 2d       	mov	r18, r10
    5aa2:	3b 2d       	mov	r19, r11
    5aa4:	4c 2d       	mov	r20, r12
    5aa6:	5d 2d       	mov	r21, r13
    5aa8:	6e 2d       	mov	r22, r14
    5aaa:	7f 2d       	mov	r23, r15
    5aac:	80 2f       	mov	r24, r16
    5aae:	91 2f       	mov	r25, r17
    5ab0:	0f 2e       	mov	r0, r31
    5ab2:	fa ef       	ldi	r31, 0xFA	; 250
    5ab4:	af 2e       	mov	r10, r31
    5ab6:	f0 2d       	mov	r31, r0
    5ab8:	bb 24       	eor	r11, r11
    5aba:	cc 24       	eor	r12, r12
    5abc:	dd 24       	eor	r13, r13
    5abe:	ee 24       	eor	r14, r14
    5ac0:	ff 24       	eor	r15, r15
    5ac2:	00 e0       	ldi	r16, 0x00	; 0
    5ac4:	10 e0       	ldi	r17, 0x00	; 0
    5ac6:	0e 94 1d 01 	call	0x23a	; 0x23a <__udivdi3>
    5aca:	a2 2e       	mov	r10, r18
    5acc:	b3 2e       	mov	r11, r19
    5ace:	c4 2e       	mov	r12, r20
    5ad0:	d5 2e       	mov	r13, r21
    5ad2:	e6 2e       	mov	r14, r22
    5ad4:	f7 2e       	mov	r15, r23
    5ad6:	08 2f       	mov	r16, r24
    5ad8:	19 2f       	mov	r17, r25
    5ada:	a9 86       	std	Y+9, r10	; 0x09
    5adc:	ba 86       	std	Y+10, r11	; 0x0a
    5ade:	cb 86       	std	Y+11, r12	; 0x0b
    5ae0:	dc 86       	std	Y+12, r13	; 0x0c
    5ae2:	ed 86       	std	Y+13, r14	; 0x0d
    5ae4:	fe 86       	std	Y+14, r15	; 0x0e
    5ae6:	0f 87       	std	Y+15, r16	; 0x0f
    5ae8:	18 8b       	std	Y+16, r17	; 0x10
		rem=n%250;
    5aea:	a9 88       	ldd	r10, Y+17	; 0x11
    5aec:	ba 88       	ldd	r11, Y+18	; 0x12
    5aee:	cb 88       	ldd	r12, Y+19	; 0x13
    5af0:	dc 88       	ldd	r13, Y+20	; 0x14
    5af2:	ed 88       	ldd	r14, Y+21	; 0x15
    5af4:	fe 88       	ldd	r15, Y+22	; 0x16
    5af6:	0f 89       	ldd	r16, Y+23	; 0x17
    5af8:	18 8d       	ldd	r17, Y+24	; 0x18
    5afa:	2a 2d       	mov	r18, r10
    5afc:	3b 2d       	mov	r19, r11
    5afe:	4c 2d       	mov	r20, r12
    5b00:	5d 2d       	mov	r21, r13
    5b02:	6e 2d       	mov	r22, r14
    5b04:	7f 2d       	mov	r23, r15
    5b06:	80 2f       	mov	r24, r16
    5b08:	91 2f       	mov	r25, r17
    5b0a:	0f 2e       	mov	r0, r31
    5b0c:	fa ef       	ldi	r31, 0xFA	; 250
    5b0e:	af 2e       	mov	r10, r31
    5b10:	f0 2d       	mov	r31, r0
    5b12:	bb 24       	eor	r11, r11
    5b14:	cc 24       	eor	r12, r12
    5b16:	dd 24       	eor	r13, r13
    5b18:	ee 24       	eor	r14, r14
    5b1a:	ff 24       	eor	r15, r15
    5b1c:	00 e0       	ldi	r16, 0x00	; 0
    5b1e:	10 e0       	ldi	r17, 0x00	; 0
    5b20:	0e 94 92 07 	call	0xf24	; 0xf24 <__umoddi3>
    5b24:	a2 2e       	mov	r10, r18
    5b26:	b3 2e       	mov	r11, r19
    5b28:	c4 2e       	mov	r12, r20
    5b2a:	d5 2e       	mov	r13, r21
    5b2c:	e6 2e       	mov	r14, r22
    5b2e:	f7 2e       	mov	r15, r23
    5b30:	08 2f       	mov	r16, r24
    5b32:	19 2f       	mov	r17, r25
    5b34:	a9 82       	std	Y+1, r10	; 0x01
    5b36:	ba 82       	std	Y+2, r11	; 0x02
    5b38:	cb 82       	std	Y+3, r12	; 0x03
    5b3a:	dc 82       	std	Y+4, r13	; 0x04
    5b3c:	ed 82       	std	Y+5, r14	; 0x05
    5b3e:	fe 82       	std	Y+6, r15	; 0x06
    5b40:	0f 83       	std	Y+7, r16	; 0x07
    5b42:	18 87       	std	Y+8, r17	; 0x08
		TCNT0 = 0; //timer initial value
    5b44:	e2 e5       	ldi	r30, 0x52	; 82
    5b46:	f0 e0       	ldi	r31, 0x00	; 0
    5b48:	10 82       	st	Z, r1
		OCR0  = 249; //compare val
    5b4a:	ec e5       	ldi	r30, 0x5C	; 92
    5b4c:	f0 e0       	ldi	r31, 0x00	; 0
    5b4e:	89 ef       	ldi	r24, 0xF9	; 249
    5b50:	80 83       	st	Z, r24
		TCCR0 =  (1<<WGM01) | (1<<CS01);
    5b52:	e3 e5       	ldi	r30, 0x53	; 83
    5b54:	f0 e0       	ldi	r31, 0x00	; 0
    5b56:	8a e0       	ldi	r24, 0x0A	; 10
    5b58:	80 83       	st	Z, r24
    5b5a:	10 c0       	rjmp	.+32     	; 0x5b7c <timer_microSecond+0x4ca>
		while(div--)
		{
			while(Get_Bit(TIFR,OCF0)==0);
    5b5c:	e8 e5       	ldi	r30, 0x58	; 88
    5b5e:	f0 e0       	ldi	r31, 0x00	; 0
    5b60:	80 81       	ld	r24, Z
    5b62:	88 2f       	mov	r24, r24
    5b64:	90 e0       	ldi	r25, 0x00	; 0
    5b66:	82 70       	andi	r24, 0x02	; 2
    5b68:	90 70       	andi	r25, 0x00	; 0
    5b6a:	00 97       	sbiw	r24, 0x00	; 0
    5b6c:	b9 f3       	breq	.-18     	; 0x5b5c <timer_microSecond+0x4aa>
			Set_Bit(TIFR,OCF0);
    5b6e:	a8 e5       	ldi	r26, 0x58	; 88
    5b70:	b0 e0       	ldi	r27, 0x00	; 0
    5b72:	e8 e5       	ldi	r30, 0x58	; 88
    5b74:	f0 e0       	ldi	r31, 0x00	; 0
    5b76:	80 81       	ld	r24, Z
    5b78:	82 60       	ori	r24, 0x02	; 2
    5b7a:	8c 93       	st	X, r24
		div=n/250;
		rem=n%250;
		TCNT0 = 0; //timer initial value
		OCR0  = 249; //compare val
		TCCR0 =  (1<<WGM01) | (1<<CS01);
		while(div--)
    5b7c:	19 8e       	std	Y+25, r1	; 0x19
    5b7e:	89 85       	ldd	r24, Y+9	; 0x09
    5b80:	9a 85       	ldd	r25, Y+10	; 0x0a
    5b82:	89 2b       	or	r24, r25
    5b84:	9b 85       	ldd	r25, Y+11	; 0x0b
    5b86:	89 2b       	or	r24, r25
    5b88:	9c 85       	ldd	r25, Y+12	; 0x0c
    5b8a:	89 2b       	or	r24, r25
    5b8c:	9d 85       	ldd	r25, Y+13	; 0x0d
    5b8e:	89 2b       	or	r24, r25
    5b90:	9e 85       	ldd	r25, Y+14	; 0x0e
    5b92:	89 2b       	or	r24, r25
    5b94:	9f 85       	ldd	r25, Y+15	; 0x0f
    5b96:	89 2b       	or	r24, r25
    5b98:	98 89       	ldd	r25, Y+16	; 0x10
    5b9a:	89 2b       	or	r24, r25
    5b9c:	88 23       	and	r24, r24
    5b9e:	11 f0       	breq	.+4      	; 0x5ba4 <timer_microSecond+0x4f2>
    5ba0:	91 e0       	ldi	r25, 0x01	; 1
    5ba2:	99 8f       	std	Y+25, r25	; 0x19
    5ba4:	89 85       	ldd	r24, Y+9	; 0x09
    5ba6:	2f 96       	adiw	r28, 0x0f	; 15
    5ba8:	8f af       	std	Y+63, r24	; 0x3f
    5baa:	2f 97       	sbiw	r28, 0x0f	; 15
    5bac:	9a 85       	ldd	r25, Y+10	; 0x0a
    5bae:	60 96       	adiw	r28, 0x10	; 16
    5bb0:	9f af       	std	Y+63, r25	; 0x3f
    5bb2:	60 97       	sbiw	r28, 0x10	; 16
    5bb4:	8b 85       	ldd	r24, Y+11	; 0x0b
    5bb6:	61 96       	adiw	r28, 0x11	; 17
    5bb8:	8f af       	std	Y+63, r24	; 0x3f
    5bba:	61 97       	sbiw	r28, 0x11	; 17
    5bbc:	9c 85       	ldd	r25, Y+12	; 0x0c
    5bbe:	62 96       	adiw	r28, 0x12	; 18
    5bc0:	9f af       	std	Y+63, r25	; 0x3f
    5bc2:	62 97       	sbiw	r28, 0x12	; 18
    5bc4:	8d 85       	ldd	r24, Y+13	; 0x0d
    5bc6:	63 96       	adiw	r28, 0x13	; 19
    5bc8:	8f af       	std	Y+63, r24	; 0x3f
    5bca:	63 97       	sbiw	r28, 0x13	; 19
    5bcc:	9e 85       	ldd	r25, Y+14	; 0x0e
    5bce:	64 96       	adiw	r28, 0x14	; 20
    5bd0:	9f af       	std	Y+63, r25	; 0x3f
    5bd2:	64 97       	sbiw	r28, 0x14	; 20
    5bd4:	8f 85       	ldd	r24, Y+15	; 0x0f
    5bd6:	65 96       	adiw	r28, 0x15	; 21
    5bd8:	8f af       	std	Y+63, r24	; 0x3f
    5bda:	65 97       	sbiw	r28, 0x15	; 21
    5bdc:	98 89       	ldd	r25, Y+16	; 0x10
    5bde:	66 96       	adiw	r28, 0x16	; 22
    5be0:	9f af       	std	Y+63, r25	; 0x3f
    5be2:	66 97       	sbiw	r28, 0x16	; 22
    5be4:	8f ef       	ldi	r24, 0xFF	; 255
    5be6:	67 96       	adiw	r28, 0x17	; 23
    5be8:	8f af       	std	Y+63, r24	; 0x3f
    5bea:	67 97       	sbiw	r28, 0x17	; 23
    5bec:	9f ef       	ldi	r25, 0xFF	; 255
    5bee:	68 96       	adiw	r28, 0x18	; 24
    5bf0:	9f af       	std	Y+63, r25	; 0x3f
    5bf2:	68 97       	sbiw	r28, 0x18	; 24
    5bf4:	8f ef       	ldi	r24, 0xFF	; 255
    5bf6:	69 96       	adiw	r28, 0x19	; 25
    5bf8:	8f af       	std	Y+63, r24	; 0x3f
    5bfa:	69 97       	sbiw	r28, 0x19	; 25
    5bfc:	9f ef       	ldi	r25, 0xFF	; 255
    5bfe:	6a 96       	adiw	r28, 0x1a	; 26
    5c00:	9f af       	std	Y+63, r25	; 0x3f
    5c02:	6a 97       	sbiw	r28, 0x1a	; 26
    5c04:	8f ef       	ldi	r24, 0xFF	; 255
    5c06:	6b 96       	adiw	r28, 0x1b	; 27
    5c08:	8f af       	std	Y+63, r24	; 0x3f
    5c0a:	6b 97       	sbiw	r28, 0x1b	; 27
    5c0c:	9f ef       	ldi	r25, 0xFF	; 255
    5c0e:	6c 96       	adiw	r28, 0x1c	; 28
    5c10:	9f af       	std	Y+63, r25	; 0x3f
    5c12:	6c 97       	sbiw	r28, 0x1c	; 28
    5c14:	8f ef       	ldi	r24, 0xFF	; 255
    5c16:	6d 96       	adiw	r28, 0x1d	; 29
    5c18:	8f af       	std	Y+63, r24	; 0x3f
    5c1a:	6d 97       	sbiw	r28, 0x1d	; 29
    5c1c:	9f ef       	ldi	r25, 0xFF	; 255
    5c1e:	6e 96       	adiw	r28, 0x1e	; 30
    5c20:	9f af       	std	Y+63, r25	; 0x3f
    5c22:	6e 97       	sbiw	r28, 0x1e	; 30
    5c24:	2f 96       	adiw	r28, 0x0f	; 15
    5c26:	8f ad       	ldd	r24, Y+63	; 0x3f
    5c28:	2f 97       	sbiw	r28, 0x0f	; 15
    5c2a:	67 96       	adiw	r28, 0x17	; 23
    5c2c:	9f ad       	ldd	r25, Y+63	; 0x3f
    5c2e:	67 97       	sbiw	r28, 0x17	; 23
    5c30:	89 0f       	add	r24, r25
    5c32:	6f 96       	adiw	r28, 0x1f	; 31
    5c34:	8f af       	std	Y+63, r24	; 0x3f
    5c36:	6f 97       	sbiw	r28, 0x1f	; 31
    5c38:	81 e0       	ldi	r24, 0x01	; 1
    5c3a:	a7 96       	adiw	r28, 0x27	; 39
    5c3c:	8f af       	std	Y+63, r24	; 0x3f
    5c3e:	a7 97       	sbiw	r28, 0x27	; 39
    5c40:	6f 96       	adiw	r28, 0x1f	; 31
    5c42:	9f ad       	ldd	r25, Y+63	; 0x3f
    5c44:	6f 97       	sbiw	r28, 0x1f	; 31
    5c46:	2f 96       	adiw	r28, 0x0f	; 15
    5c48:	8f ad       	ldd	r24, Y+63	; 0x3f
    5c4a:	2f 97       	sbiw	r28, 0x0f	; 15
    5c4c:	98 17       	cp	r25, r24
    5c4e:	18 f0       	brcs	.+6      	; 0x5c56 <timer_microSecond+0x5a4>
    5c50:	a7 96       	adiw	r28, 0x27	; 39
    5c52:	1f ae       	std	Y+63, r1	; 0x3f
    5c54:	a7 97       	sbiw	r28, 0x27	; 39
    5c56:	60 96       	adiw	r28, 0x10	; 16
    5c58:	9f ad       	ldd	r25, Y+63	; 0x3f
    5c5a:	60 97       	sbiw	r28, 0x10	; 16
    5c5c:	68 96       	adiw	r28, 0x18	; 24
    5c5e:	8f ad       	ldd	r24, Y+63	; 0x3f
    5c60:	68 97       	sbiw	r28, 0x18	; 24
    5c62:	98 0f       	add	r25, r24
    5c64:	a0 96       	adiw	r28, 0x20	; 32
    5c66:	9f af       	std	Y+63, r25	; 0x3f
    5c68:	a0 97       	sbiw	r28, 0x20	; 32
    5c6a:	91 e0       	ldi	r25, 0x01	; 1
    5c6c:	a8 96       	adiw	r28, 0x28	; 40
    5c6e:	9f af       	std	Y+63, r25	; 0x3f
    5c70:	a8 97       	sbiw	r28, 0x28	; 40
    5c72:	a0 96       	adiw	r28, 0x20	; 32
    5c74:	8f ad       	ldd	r24, Y+63	; 0x3f
    5c76:	a0 97       	sbiw	r28, 0x20	; 32
    5c78:	60 96       	adiw	r28, 0x10	; 16
    5c7a:	9f ad       	ldd	r25, Y+63	; 0x3f
    5c7c:	60 97       	sbiw	r28, 0x10	; 16
    5c7e:	89 17       	cp	r24, r25
    5c80:	18 f0       	brcs	.+6      	; 0x5c88 <timer_microSecond+0x5d6>
    5c82:	a8 96       	adiw	r28, 0x28	; 40
    5c84:	1f ae       	std	Y+63, r1	; 0x3f
    5c86:	a8 97       	sbiw	r28, 0x28	; 40
    5c88:	a7 96       	adiw	r28, 0x27	; 39
    5c8a:	8f ad       	ldd	r24, Y+63	; 0x3f
    5c8c:	a7 97       	sbiw	r28, 0x27	; 39
    5c8e:	a0 96       	adiw	r28, 0x20	; 32
    5c90:	9f ad       	ldd	r25, Y+63	; 0x3f
    5c92:	a0 97       	sbiw	r28, 0x20	; 32
    5c94:	89 0f       	add	r24, r25
    5c96:	a9 96       	adiw	r28, 0x29	; 41
    5c98:	8f af       	std	Y+63, r24	; 0x3f
    5c9a:	a9 97       	sbiw	r28, 0x29	; 41
    5c9c:	81 e0       	ldi	r24, 0x01	; 1
    5c9e:	aa 96       	adiw	r28, 0x2a	; 42
    5ca0:	8f af       	std	Y+63, r24	; 0x3f
    5ca2:	aa 97       	sbiw	r28, 0x2a	; 42
    5ca4:	a9 96       	adiw	r28, 0x29	; 41
    5ca6:	9f ad       	ldd	r25, Y+63	; 0x3f
    5ca8:	a9 97       	sbiw	r28, 0x29	; 41
    5caa:	a0 96       	adiw	r28, 0x20	; 32
    5cac:	8f ad       	ldd	r24, Y+63	; 0x3f
    5cae:	a0 97       	sbiw	r28, 0x20	; 32
    5cb0:	98 17       	cp	r25, r24
    5cb2:	18 f0       	brcs	.+6      	; 0x5cba <timer_microSecond+0x608>
    5cb4:	aa 96       	adiw	r28, 0x2a	; 42
    5cb6:	1f ae       	std	Y+63, r1	; 0x3f
    5cb8:	aa 97       	sbiw	r28, 0x2a	; 42
    5cba:	a8 96       	adiw	r28, 0x28	; 40
    5cbc:	9f ad       	ldd	r25, Y+63	; 0x3f
    5cbe:	a8 97       	sbiw	r28, 0x28	; 40
    5cc0:	aa 96       	adiw	r28, 0x2a	; 42
    5cc2:	8f ad       	ldd	r24, Y+63	; 0x3f
    5cc4:	aa 97       	sbiw	r28, 0x2a	; 42
    5cc6:	98 2b       	or	r25, r24
    5cc8:	a8 96       	adiw	r28, 0x28	; 40
    5cca:	9f af       	std	Y+63, r25	; 0x3f
    5ccc:	a8 97       	sbiw	r28, 0x28	; 40
    5cce:	a9 96       	adiw	r28, 0x29	; 41
    5cd0:	9f ad       	ldd	r25, Y+63	; 0x3f
    5cd2:	a9 97       	sbiw	r28, 0x29	; 41
    5cd4:	a0 96       	adiw	r28, 0x20	; 32
    5cd6:	9f af       	std	Y+63, r25	; 0x3f
    5cd8:	a0 97       	sbiw	r28, 0x20	; 32
    5cda:	61 96       	adiw	r28, 0x11	; 17
    5cdc:	8f ad       	ldd	r24, Y+63	; 0x3f
    5cde:	61 97       	sbiw	r28, 0x11	; 17
    5ce0:	69 96       	adiw	r28, 0x19	; 25
    5ce2:	9f ad       	ldd	r25, Y+63	; 0x3f
    5ce4:	69 97       	sbiw	r28, 0x19	; 25
    5ce6:	89 0f       	add	r24, r25
    5ce8:	a1 96       	adiw	r28, 0x21	; 33
    5cea:	8f af       	std	Y+63, r24	; 0x3f
    5cec:	a1 97       	sbiw	r28, 0x21	; 33
    5cee:	81 e0       	ldi	r24, 0x01	; 1
    5cf0:	ab 96       	adiw	r28, 0x2b	; 43
    5cf2:	8f af       	std	Y+63, r24	; 0x3f
    5cf4:	ab 97       	sbiw	r28, 0x2b	; 43
    5cf6:	a1 96       	adiw	r28, 0x21	; 33
    5cf8:	9f ad       	ldd	r25, Y+63	; 0x3f
    5cfa:	a1 97       	sbiw	r28, 0x21	; 33
    5cfc:	61 96       	adiw	r28, 0x11	; 17
    5cfe:	8f ad       	ldd	r24, Y+63	; 0x3f
    5d00:	61 97       	sbiw	r28, 0x11	; 17
    5d02:	98 17       	cp	r25, r24
    5d04:	18 f0       	brcs	.+6      	; 0x5d0c <timer_microSecond+0x65a>
    5d06:	ab 96       	adiw	r28, 0x2b	; 43
    5d08:	1f ae       	std	Y+63, r1	; 0x3f
    5d0a:	ab 97       	sbiw	r28, 0x2b	; 43
    5d0c:	a8 96       	adiw	r28, 0x28	; 40
    5d0e:	9f ad       	ldd	r25, Y+63	; 0x3f
    5d10:	a8 97       	sbiw	r28, 0x28	; 40
    5d12:	a1 96       	adiw	r28, 0x21	; 33
    5d14:	8f ad       	ldd	r24, Y+63	; 0x3f
    5d16:	a1 97       	sbiw	r28, 0x21	; 33
    5d18:	98 0f       	add	r25, r24
    5d1a:	ac 96       	adiw	r28, 0x2c	; 44
    5d1c:	9f af       	std	Y+63, r25	; 0x3f
    5d1e:	ac 97       	sbiw	r28, 0x2c	; 44
    5d20:	91 e0       	ldi	r25, 0x01	; 1
    5d22:	ad 96       	adiw	r28, 0x2d	; 45
    5d24:	9f af       	std	Y+63, r25	; 0x3f
    5d26:	ad 97       	sbiw	r28, 0x2d	; 45
    5d28:	ac 96       	adiw	r28, 0x2c	; 44
    5d2a:	8f ad       	ldd	r24, Y+63	; 0x3f
    5d2c:	ac 97       	sbiw	r28, 0x2c	; 44
    5d2e:	a1 96       	adiw	r28, 0x21	; 33
    5d30:	9f ad       	ldd	r25, Y+63	; 0x3f
    5d32:	a1 97       	sbiw	r28, 0x21	; 33
    5d34:	89 17       	cp	r24, r25
    5d36:	18 f0       	brcs	.+6      	; 0x5d3e <timer_microSecond+0x68c>
    5d38:	ad 96       	adiw	r28, 0x2d	; 45
    5d3a:	1f ae       	std	Y+63, r1	; 0x3f
    5d3c:	ad 97       	sbiw	r28, 0x2d	; 45
    5d3e:	ab 96       	adiw	r28, 0x2b	; 43
    5d40:	8f ad       	ldd	r24, Y+63	; 0x3f
    5d42:	ab 97       	sbiw	r28, 0x2b	; 43
    5d44:	ad 96       	adiw	r28, 0x2d	; 45
    5d46:	9f ad       	ldd	r25, Y+63	; 0x3f
    5d48:	ad 97       	sbiw	r28, 0x2d	; 45
    5d4a:	89 2b       	or	r24, r25
    5d4c:	ab 96       	adiw	r28, 0x2b	; 43
    5d4e:	8f af       	std	Y+63, r24	; 0x3f
    5d50:	ab 97       	sbiw	r28, 0x2b	; 43
    5d52:	ac 96       	adiw	r28, 0x2c	; 44
    5d54:	8f ad       	ldd	r24, Y+63	; 0x3f
    5d56:	ac 97       	sbiw	r28, 0x2c	; 44
    5d58:	a1 96       	adiw	r28, 0x21	; 33
    5d5a:	8f af       	std	Y+63, r24	; 0x3f
    5d5c:	a1 97       	sbiw	r28, 0x21	; 33
    5d5e:	62 96       	adiw	r28, 0x12	; 18
    5d60:	9f ad       	ldd	r25, Y+63	; 0x3f
    5d62:	62 97       	sbiw	r28, 0x12	; 18
    5d64:	6a 96       	adiw	r28, 0x1a	; 26
    5d66:	8f ad       	ldd	r24, Y+63	; 0x3f
    5d68:	6a 97       	sbiw	r28, 0x1a	; 26
    5d6a:	98 0f       	add	r25, r24
    5d6c:	a2 96       	adiw	r28, 0x22	; 34
    5d6e:	9f af       	std	Y+63, r25	; 0x3f
    5d70:	a2 97       	sbiw	r28, 0x22	; 34
    5d72:	91 e0       	ldi	r25, 0x01	; 1
    5d74:	ae 96       	adiw	r28, 0x2e	; 46
    5d76:	9f af       	std	Y+63, r25	; 0x3f
    5d78:	ae 97       	sbiw	r28, 0x2e	; 46
    5d7a:	a2 96       	adiw	r28, 0x22	; 34
    5d7c:	8f ad       	ldd	r24, Y+63	; 0x3f
    5d7e:	a2 97       	sbiw	r28, 0x22	; 34
    5d80:	62 96       	adiw	r28, 0x12	; 18
    5d82:	9f ad       	ldd	r25, Y+63	; 0x3f
    5d84:	62 97       	sbiw	r28, 0x12	; 18
    5d86:	89 17       	cp	r24, r25
    5d88:	18 f0       	brcs	.+6      	; 0x5d90 <timer_microSecond+0x6de>
    5d8a:	ae 96       	adiw	r28, 0x2e	; 46
    5d8c:	1f ae       	std	Y+63, r1	; 0x3f
    5d8e:	ae 97       	sbiw	r28, 0x2e	; 46
    5d90:	ab 96       	adiw	r28, 0x2b	; 43
    5d92:	8f ad       	ldd	r24, Y+63	; 0x3f
    5d94:	ab 97       	sbiw	r28, 0x2b	; 43
    5d96:	a2 96       	adiw	r28, 0x22	; 34
    5d98:	9f ad       	ldd	r25, Y+63	; 0x3f
    5d9a:	a2 97       	sbiw	r28, 0x22	; 34
    5d9c:	89 0f       	add	r24, r25
    5d9e:	af 96       	adiw	r28, 0x2f	; 47
    5da0:	8f af       	std	Y+63, r24	; 0x3f
    5da2:	af 97       	sbiw	r28, 0x2f	; 47
    5da4:	81 e0       	ldi	r24, 0x01	; 1
    5da6:	e0 96       	adiw	r28, 0x30	; 48
    5da8:	8f af       	std	Y+63, r24	; 0x3f
    5daa:	e0 97       	sbiw	r28, 0x30	; 48
    5dac:	af 96       	adiw	r28, 0x2f	; 47
    5dae:	9f ad       	ldd	r25, Y+63	; 0x3f
    5db0:	af 97       	sbiw	r28, 0x2f	; 47
    5db2:	a2 96       	adiw	r28, 0x22	; 34
    5db4:	8f ad       	ldd	r24, Y+63	; 0x3f
    5db6:	a2 97       	sbiw	r28, 0x22	; 34
    5db8:	98 17       	cp	r25, r24
    5dba:	18 f0       	brcs	.+6      	; 0x5dc2 <timer_microSecond+0x710>
    5dbc:	e0 96       	adiw	r28, 0x30	; 48
    5dbe:	1f ae       	std	Y+63, r1	; 0x3f
    5dc0:	e0 97       	sbiw	r28, 0x30	; 48
    5dc2:	ae 96       	adiw	r28, 0x2e	; 46
    5dc4:	9f ad       	ldd	r25, Y+63	; 0x3f
    5dc6:	ae 97       	sbiw	r28, 0x2e	; 46
    5dc8:	e0 96       	adiw	r28, 0x30	; 48
    5dca:	8f ad       	ldd	r24, Y+63	; 0x3f
    5dcc:	e0 97       	sbiw	r28, 0x30	; 48
    5dce:	98 2b       	or	r25, r24
    5dd0:	ae 96       	adiw	r28, 0x2e	; 46
    5dd2:	9f af       	std	Y+63, r25	; 0x3f
    5dd4:	ae 97       	sbiw	r28, 0x2e	; 46
    5dd6:	af 96       	adiw	r28, 0x2f	; 47
    5dd8:	9f ad       	ldd	r25, Y+63	; 0x3f
    5dda:	af 97       	sbiw	r28, 0x2f	; 47
    5ddc:	a2 96       	adiw	r28, 0x22	; 34
    5dde:	9f af       	std	Y+63, r25	; 0x3f
    5de0:	a2 97       	sbiw	r28, 0x22	; 34
    5de2:	63 96       	adiw	r28, 0x13	; 19
    5de4:	8f ad       	ldd	r24, Y+63	; 0x3f
    5de6:	63 97       	sbiw	r28, 0x13	; 19
    5de8:	6b 96       	adiw	r28, 0x1b	; 27
    5dea:	9f ad       	ldd	r25, Y+63	; 0x3f
    5dec:	6b 97       	sbiw	r28, 0x1b	; 27
    5dee:	89 0f       	add	r24, r25
    5df0:	a3 96       	adiw	r28, 0x23	; 35
    5df2:	8f af       	std	Y+63, r24	; 0x3f
    5df4:	a3 97       	sbiw	r28, 0x23	; 35
    5df6:	81 e0       	ldi	r24, 0x01	; 1
    5df8:	e1 96       	adiw	r28, 0x31	; 49
    5dfa:	8f af       	std	Y+63, r24	; 0x3f
    5dfc:	e1 97       	sbiw	r28, 0x31	; 49
    5dfe:	a3 96       	adiw	r28, 0x23	; 35
    5e00:	9f ad       	ldd	r25, Y+63	; 0x3f
    5e02:	a3 97       	sbiw	r28, 0x23	; 35
    5e04:	63 96       	adiw	r28, 0x13	; 19
    5e06:	8f ad       	ldd	r24, Y+63	; 0x3f
    5e08:	63 97       	sbiw	r28, 0x13	; 19
    5e0a:	98 17       	cp	r25, r24
    5e0c:	18 f0       	brcs	.+6      	; 0x5e14 <timer_microSecond+0x762>
    5e0e:	e1 96       	adiw	r28, 0x31	; 49
    5e10:	1f ae       	std	Y+63, r1	; 0x3f
    5e12:	e1 97       	sbiw	r28, 0x31	; 49
    5e14:	ae 96       	adiw	r28, 0x2e	; 46
    5e16:	9f ad       	ldd	r25, Y+63	; 0x3f
    5e18:	ae 97       	sbiw	r28, 0x2e	; 46
    5e1a:	a3 96       	adiw	r28, 0x23	; 35
    5e1c:	8f ad       	ldd	r24, Y+63	; 0x3f
    5e1e:	a3 97       	sbiw	r28, 0x23	; 35
    5e20:	98 0f       	add	r25, r24
    5e22:	e2 96       	adiw	r28, 0x32	; 50
    5e24:	9f af       	std	Y+63, r25	; 0x3f
    5e26:	e2 97       	sbiw	r28, 0x32	; 50
    5e28:	91 e0       	ldi	r25, 0x01	; 1
    5e2a:	e3 96       	adiw	r28, 0x33	; 51
    5e2c:	9f af       	std	Y+63, r25	; 0x3f
    5e2e:	e3 97       	sbiw	r28, 0x33	; 51
    5e30:	e2 96       	adiw	r28, 0x32	; 50
    5e32:	8f ad       	ldd	r24, Y+63	; 0x3f
    5e34:	e2 97       	sbiw	r28, 0x32	; 50
    5e36:	a3 96       	adiw	r28, 0x23	; 35
    5e38:	9f ad       	ldd	r25, Y+63	; 0x3f
    5e3a:	a3 97       	sbiw	r28, 0x23	; 35
    5e3c:	89 17       	cp	r24, r25
    5e3e:	18 f0       	brcs	.+6      	; 0x5e46 <timer_microSecond+0x794>
    5e40:	e3 96       	adiw	r28, 0x33	; 51
    5e42:	1f ae       	std	Y+63, r1	; 0x3f
    5e44:	e3 97       	sbiw	r28, 0x33	; 51
    5e46:	e1 96       	adiw	r28, 0x31	; 49
    5e48:	8f ad       	ldd	r24, Y+63	; 0x3f
    5e4a:	e1 97       	sbiw	r28, 0x31	; 49
    5e4c:	e3 96       	adiw	r28, 0x33	; 51
    5e4e:	9f ad       	ldd	r25, Y+63	; 0x3f
    5e50:	e3 97       	sbiw	r28, 0x33	; 51
    5e52:	89 2b       	or	r24, r25
    5e54:	e1 96       	adiw	r28, 0x31	; 49
    5e56:	8f af       	std	Y+63, r24	; 0x3f
    5e58:	e1 97       	sbiw	r28, 0x31	; 49
    5e5a:	e2 96       	adiw	r28, 0x32	; 50
    5e5c:	8f ad       	ldd	r24, Y+63	; 0x3f
    5e5e:	e2 97       	sbiw	r28, 0x32	; 50
    5e60:	a3 96       	adiw	r28, 0x23	; 35
    5e62:	8f af       	std	Y+63, r24	; 0x3f
    5e64:	a3 97       	sbiw	r28, 0x23	; 35
    5e66:	64 96       	adiw	r28, 0x14	; 20
    5e68:	9f ad       	ldd	r25, Y+63	; 0x3f
    5e6a:	64 97       	sbiw	r28, 0x14	; 20
    5e6c:	6c 96       	adiw	r28, 0x1c	; 28
    5e6e:	8f ad       	ldd	r24, Y+63	; 0x3f
    5e70:	6c 97       	sbiw	r28, 0x1c	; 28
    5e72:	98 0f       	add	r25, r24
    5e74:	a4 96       	adiw	r28, 0x24	; 36
    5e76:	9f af       	std	Y+63, r25	; 0x3f
    5e78:	a4 97       	sbiw	r28, 0x24	; 36
    5e7a:	91 e0       	ldi	r25, 0x01	; 1
    5e7c:	e4 96       	adiw	r28, 0x34	; 52
    5e7e:	9f af       	std	Y+63, r25	; 0x3f
    5e80:	e4 97       	sbiw	r28, 0x34	; 52
    5e82:	a4 96       	adiw	r28, 0x24	; 36
    5e84:	8f ad       	ldd	r24, Y+63	; 0x3f
    5e86:	a4 97       	sbiw	r28, 0x24	; 36
    5e88:	64 96       	adiw	r28, 0x14	; 20
    5e8a:	9f ad       	ldd	r25, Y+63	; 0x3f
    5e8c:	64 97       	sbiw	r28, 0x14	; 20
    5e8e:	89 17       	cp	r24, r25
    5e90:	18 f0       	brcs	.+6      	; 0x5e98 <timer_microSecond+0x7e6>
    5e92:	e4 96       	adiw	r28, 0x34	; 52
    5e94:	1f ae       	std	Y+63, r1	; 0x3f
    5e96:	e4 97       	sbiw	r28, 0x34	; 52
    5e98:	e1 96       	adiw	r28, 0x31	; 49
    5e9a:	8f ad       	ldd	r24, Y+63	; 0x3f
    5e9c:	e1 97       	sbiw	r28, 0x31	; 49
    5e9e:	a4 96       	adiw	r28, 0x24	; 36
    5ea0:	9f ad       	ldd	r25, Y+63	; 0x3f
    5ea2:	a4 97       	sbiw	r28, 0x24	; 36
    5ea4:	89 0f       	add	r24, r25
    5ea6:	e5 96       	adiw	r28, 0x35	; 53
    5ea8:	8f af       	std	Y+63, r24	; 0x3f
    5eaa:	e5 97       	sbiw	r28, 0x35	; 53
    5eac:	81 e0       	ldi	r24, 0x01	; 1
    5eae:	e6 96       	adiw	r28, 0x36	; 54
    5eb0:	8f af       	std	Y+63, r24	; 0x3f
    5eb2:	e6 97       	sbiw	r28, 0x36	; 54
    5eb4:	e5 96       	adiw	r28, 0x35	; 53
    5eb6:	9f ad       	ldd	r25, Y+63	; 0x3f
    5eb8:	e5 97       	sbiw	r28, 0x35	; 53
    5eba:	a4 96       	adiw	r28, 0x24	; 36
    5ebc:	8f ad       	ldd	r24, Y+63	; 0x3f
    5ebe:	a4 97       	sbiw	r28, 0x24	; 36
    5ec0:	98 17       	cp	r25, r24
    5ec2:	18 f0       	brcs	.+6      	; 0x5eca <timer_microSecond+0x818>
    5ec4:	e6 96       	adiw	r28, 0x36	; 54
    5ec6:	1f ae       	std	Y+63, r1	; 0x3f
    5ec8:	e6 97       	sbiw	r28, 0x36	; 54
    5eca:	e4 96       	adiw	r28, 0x34	; 52
    5ecc:	9f ad       	ldd	r25, Y+63	; 0x3f
    5ece:	e4 97       	sbiw	r28, 0x34	; 52
    5ed0:	e6 96       	adiw	r28, 0x36	; 54
    5ed2:	8f ad       	ldd	r24, Y+63	; 0x3f
    5ed4:	e6 97       	sbiw	r28, 0x36	; 54
    5ed6:	98 2b       	or	r25, r24
    5ed8:	e4 96       	adiw	r28, 0x34	; 52
    5eda:	9f af       	std	Y+63, r25	; 0x3f
    5edc:	e4 97       	sbiw	r28, 0x34	; 52
    5ede:	e5 96       	adiw	r28, 0x35	; 53
    5ee0:	9f ad       	ldd	r25, Y+63	; 0x3f
    5ee2:	e5 97       	sbiw	r28, 0x35	; 53
    5ee4:	a4 96       	adiw	r28, 0x24	; 36
    5ee6:	9f af       	std	Y+63, r25	; 0x3f
    5ee8:	a4 97       	sbiw	r28, 0x24	; 36
    5eea:	65 96       	adiw	r28, 0x15	; 21
    5eec:	8f ad       	ldd	r24, Y+63	; 0x3f
    5eee:	65 97       	sbiw	r28, 0x15	; 21
    5ef0:	6d 96       	adiw	r28, 0x1d	; 29
    5ef2:	9f ad       	ldd	r25, Y+63	; 0x3f
    5ef4:	6d 97       	sbiw	r28, 0x1d	; 29
    5ef6:	89 0f       	add	r24, r25
    5ef8:	a5 96       	adiw	r28, 0x25	; 37
    5efa:	8f af       	std	Y+63, r24	; 0x3f
    5efc:	a5 97       	sbiw	r28, 0x25	; 37
    5efe:	81 e0       	ldi	r24, 0x01	; 1
    5f00:	e7 96       	adiw	r28, 0x37	; 55
    5f02:	8f af       	std	Y+63, r24	; 0x3f
    5f04:	e7 97       	sbiw	r28, 0x37	; 55
    5f06:	a5 96       	adiw	r28, 0x25	; 37
    5f08:	9f ad       	ldd	r25, Y+63	; 0x3f
    5f0a:	a5 97       	sbiw	r28, 0x25	; 37
    5f0c:	65 96       	adiw	r28, 0x15	; 21
    5f0e:	8f ad       	ldd	r24, Y+63	; 0x3f
    5f10:	65 97       	sbiw	r28, 0x15	; 21
    5f12:	98 17       	cp	r25, r24
    5f14:	18 f0       	brcs	.+6      	; 0x5f1c <timer_microSecond+0x86a>
    5f16:	e7 96       	adiw	r28, 0x37	; 55
    5f18:	1f ae       	std	Y+63, r1	; 0x3f
    5f1a:	e7 97       	sbiw	r28, 0x37	; 55
    5f1c:	e4 96       	adiw	r28, 0x34	; 52
    5f1e:	9f ad       	ldd	r25, Y+63	; 0x3f
    5f20:	e4 97       	sbiw	r28, 0x34	; 52
    5f22:	a5 96       	adiw	r28, 0x25	; 37
    5f24:	8f ad       	ldd	r24, Y+63	; 0x3f
    5f26:	a5 97       	sbiw	r28, 0x25	; 37
    5f28:	98 0f       	add	r25, r24
    5f2a:	e8 96       	adiw	r28, 0x38	; 56
    5f2c:	9f af       	std	Y+63, r25	; 0x3f
    5f2e:	e8 97       	sbiw	r28, 0x38	; 56
    5f30:	91 e0       	ldi	r25, 0x01	; 1
    5f32:	e9 96       	adiw	r28, 0x39	; 57
    5f34:	9f af       	std	Y+63, r25	; 0x3f
    5f36:	e9 97       	sbiw	r28, 0x39	; 57
    5f38:	e8 96       	adiw	r28, 0x38	; 56
    5f3a:	8f ad       	ldd	r24, Y+63	; 0x3f
    5f3c:	e8 97       	sbiw	r28, 0x38	; 56
    5f3e:	a5 96       	adiw	r28, 0x25	; 37
    5f40:	9f ad       	ldd	r25, Y+63	; 0x3f
    5f42:	a5 97       	sbiw	r28, 0x25	; 37
    5f44:	89 17       	cp	r24, r25
    5f46:	18 f0       	brcs	.+6      	; 0x5f4e <timer_microSecond+0x89c>
    5f48:	e9 96       	adiw	r28, 0x39	; 57
    5f4a:	1f ae       	std	Y+63, r1	; 0x3f
    5f4c:	e9 97       	sbiw	r28, 0x39	; 57
    5f4e:	e7 96       	adiw	r28, 0x37	; 55
    5f50:	8f ad       	ldd	r24, Y+63	; 0x3f
    5f52:	e7 97       	sbiw	r28, 0x37	; 55
    5f54:	e9 96       	adiw	r28, 0x39	; 57
    5f56:	9f ad       	ldd	r25, Y+63	; 0x3f
    5f58:	e9 97       	sbiw	r28, 0x39	; 57
    5f5a:	89 2b       	or	r24, r25
    5f5c:	e7 96       	adiw	r28, 0x37	; 55
    5f5e:	8f af       	std	Y+63, r24	; 0x3f
    5f60:	e7 97       	sbiw	r28, 0x37	; 55
    5f62:	e8 96       	adiw	r28, 0x38	; 56
    5f64:	8f ad       	ldd	r24, Y+63	; 0x3f
    5f66:	e8 97       	sbiw	r28, 0x38	; 56
    5f68:	a5 96       	adiw	r28, 0x25	; 37
    5f6a:	8f af       	std	Y+63, r24	; 0x3f
    5f6c:	a5 97       	sbiw	r28, 0x25	; 37
    5f6e:	66 96       	adiw	r28, 0x16	; 22
    5f70:	9f ad       	ldd	r25, Y+63	; 0x3f
    5f72:	66 97       	sbiw	r28, 0x16	; 22
    5f74:	6e 96       	adiw	r28, 0x1e	; 30
    5f76:	8f ad       	ldd	r24, Y+63	; 0x3f
    5f78:	6e 97       	sbiw	r28, 0x1e	; 30
    5f7a:	98 0f       	add	r25, r24
    5f7c:	a6 96       	adiw	r28, 0x26	; 38
    5f7e:	9f af       	std	Y+63, r25	; 0x3f
    5f80:	a6 97       	sbiw	r28, 0x26	; 38
    5f82:	e7 96       	adiw	r28, 0x37	; 55
    5f84:	8f ad       	ldd	r24, Y+63	; 0x3f
    5f86:	e7 97       	sbiw	r28, 0x37	; 55
    5f88:	a6 96       	adiw	r28, 0x26	; 38
    5f8a:	9f ad       	ldd	r25, Y+63	; 0x3f
    5f8c:	a6 97       	sbiw	r28, 0x26	; 38
    5f8e:	89 0f       	add	r24, r25
    5f90:	a6 96       	adiw	r28, 0x26	; 38
    5f92:	8f af       	std	Y+63, r24	; 0x3f
    5f94:	a6 97       	sbiw	r28, 0x26	; 38
    5f96:	6f 96       	adiw	r28, 0x1f	; 31
    5f98:	8f ad       	ldd	r24, Y+63	; 0x3f
    5f9a:	6f 97       	sbiw	r28, 0x1f	; 31
    5f9c:	89 87       	std	Y+9, r24	; 0x09
    5f9e:	a0 96       	adiw	r28, 0x20	; 32
    5fa0:	9f ad       	ldd	r25, Y+63	; 0x3f
    5fa2:	a0 97       	sbiw	r28, 0x20	; 32
    5fa4:	9a 87       	std	Y+10, r25	; 0x0a
    5fa6:	a1 96       	adiw	r28, 0x21	; 33
    5fa8:	8f ad       	ldd	r24, Y+63	; 0x3f
    5faa:	a1 97       	sbiw	r28, 0x21	; 33
    5fac:	8b 87       	std	Y+11, r24	; 0x0b
    5fae:	a2 96       	adiw	r28, 0x22	; 34
    5fb0:	9f ad       	ldd	r25, Y+63	; 0x3f
    5fb2:	a2 97       	sbiw	r28, 0x22	; 34
    5fb4:	9c 87       	std	Y+12, r25	; 0x0c
    5fb6:	a3 96       	adiw	r28, 0x23	; 35
    5fb8:	8f ad       	ldd	r24, Y+63	; 0x3f
    5fba:	a3 97       	sbiw	r28, 0x23	; 35
    5fbc:	8d 87       	std	Y+13, r24	; 0x0d
    5fbe:	a4 96       	adiw	r28, 0x24	; 36
    5fc0:	9f ad       	ldd	r25, Y+63	; 0x3f
    5fc2:	a4 97       	sbiw	r28, 0x24	; 36
    5fc4:	9e 87       	std	Y+14, r25	; 0x0e
    5fc6:	a5 96       	adiw	r28, 0x25	; 37
    5fc8:	8f ad       	ldd	r24, Y+63	; 0x3f
    5fca:	a5 97       	sbiw	r28, 0x25	; 37
    5fcc:	8f 87       	std	Y+15, r24	; 0x0f
    5fce:	a6 96       	adiw	r28, 0x26	; 38
    5fd0:	9f ad       	ldd	r25, Y+63	; 0x3f
    5fd2:	a6 97       	sbiw	r28, 0x26	; 38
    5fd4:	98 8b       	std	Y+16, r25	; 0x10
    5fd6:	89 8d       	ldd	r24, Y+25	; 0x19
    5fd8:	88 23       	and	r24, r24
    5fda:	09 f0       	breq	.+2      	; 0x5fde <timer_microSecond+0x92c>
    5fdc:	bf cd       	rjmp	.-1154   	; 0x5b5c <timer_microSecond+0x4aa>
		{
			while(Get_Bit(TIFR,OCF0)==0);
			Set_Bit(TIFR,OCF0);
		}
		TCNT0=0;
    5fde:	e2 e5       	ldi	r30, 0x52	; 82
    5fe0:	f0 e0       	ldi	r31, 0x00	; 0
    5fe2:	10 82       	st	Z, r1
		OCR0=rem;
    5fe4:	ec e5       	ldi	r30, 0x5C	; 92
    5fe6:	f0 e0       	ldi	r31, 0x00	; 0
    5fe8:	89 81       	ldd	r24, Y+1	; 0x01
    5fea:	80 83       	st	Z, r24
		while((Get_Bit(TIFR,OCF0))==0);
    5fec:	e8 e5       	ldi	r30, 0x58	; 88
    5fee:	f0 e0       	ldi	r31, 0x00	; 0
    5ff0:	80 81       	ld	r24, Z
    5ff2:	88 2f       	mov	r24, r24
    5ff4:	90 e0       	ldi	r25, 0x00	; 0
    5ff6:	82 70       	andi	r24, 0x02	; 2
    5ff8:	90 70       	andi	r25, 0x00	; 0
    5ffa:	00 97       	sbiw	r24, 0x00	; 0
    5ffc:	b9 f3       	breq	.-18     	; 0x5fec <timer_microSecond+0x93a>
		Set_Bit(TIFR,OCF0);
    5ffe:	a8 e5       	ldi	r26, 0x58	; 88
    6000:	b0 e0       	ldi	r27, 0x00	; 0
    6002:	e8 e5       	ldi	r30, 0x58	; 88
    6004:	f0 e0       	ldi	r31, 0x00	; 0
    6006:	80 81       	ld	r24, Z
    6008:	82 60       	ori	r24, 0x02	; 2
    600a:	8c 93       	st	X, r24
		TCNT0 = 0;
    600c:	e2 e5       	ldi	r30, 0x52	; 82
    600e:	f0 e0       	ldi	r31, 0x00	; 0
    6010:	10 82       	st	Z, r1
		return;
	}
}
    6012:	c8 58       	subi	r28, 0x88	; 136
    6014:	df 4f       	sbci	r29, 0xFF	; 255
    6016:	0f b6       	in	r0, 0x3f	; 63
    6018:	f8 94       	cli
    601a:	de bf       	out	0x3e, r29	; 62
    601c:	0f be       	out	0x3f, r0	; 63
    601e:	cd bf       	out	0x3d, r28	; 61
    6020:	cf 91       	pop	r28
    6022:	df 91       	pop	r29
    6024:	1f 91       	pop	r17
    6026:	0f 91       	pop	r16
    6028:	ff 90       	pop	r15
    602a:	ef 90       	pop	r14
    602c:	df 90       	pop	r13
    602e:	cf 90       	pop	r12
    6030:	bf 90       	pop	r11
    6032:	af 90       	pop	r10
    6034:	08 95       	ret

00006036 <Timer2_init>:
 *      Author: Mina
 */
#include "timer2.h"

void Timer2_init(void)
{
    6036:	df 93       	push	r29
    6038:	cf 93       	push	r28
    603a:	cd b7       	in	r28, 0x3d	; 61
    603c:	de b7       	in	r29, 0x3e	; 62
	TCNT2=0;
    603e:	e4 e4       	ldi	r30, 0x44	; 68
    6040:	f0 e0       	ldi	r31, 0x00	; 0
    6042:	10 82       	st	Z, r1
	TCCR2= (1<<0)|(1<<1)|(1<<2);
    6044:	e5 e4       	ldi	r30, 0x45	; 69
    6046:	f0 e0       	ldi	r31, 0x00	; 0
    6048:	87 e0       	ldi	r24, 0x07	; 7
    604a:	80 83       	st	Z, r24
}
    604c:	cf 91       	pop	r28
    604e:	df 91       	pop	r29
    6050:	08 95       	ret

00006052 <Timer2_deinit>:
void Timer2_deinit(void)
{
    6052:	df 93       	push	r29
    6054:	cf 93       	push	r28
    6056:	cd b7       	in	r28, 0x3d	; 61
    6058:	de b7       	in	r29, 0x3e	; 62
	TCNT2=0;
    605a:	e4 e4       	ldi	r30, 0x44	; 68
    605c:	f0 e0       	ldi	r31, 0x00	; 0
    605e:	10 82       	st	Z, r1
	TCCR2=0;
    6060:	e5 e4       	ldi	r30, 0x45	; 69
    6062:	f0 e0       	ldi	r31, 0x00	; 0
    6064:	10 82       	st	Z, r1
}
    6066:	cf 91       	pop	r28
    6068:	df 91       	pop	r29
    606a:	08 95       	ret

0000606c <__divmodsi4>:
    606c:	97 fb       	bst	r25, 7
    606e:	09 2e       	mov	r0, r25
    6070:	05 26       	eor	r0, r21
    6072:	0e d0       	rcall	.+28     	; 0x6090 <__divmodsi4_neg1>
    6074:	57 fd       	sbrc	r21, 7
    6076:	04 d0       	rcall	.+8      	; 0x6080 <__divmodsi4_neg2>
    6078:	33 d0       	rcall	.+102    	; 0x60e0 <__udivmodsi4>
    607a:	0a d0       	rcall	.+20     	; 0x6090 <__divmodsi4_neg1>
    607c:	00 1c       	adc	r0, r0
    607e:	38 f4       	brcc	.+14     	; 0x608e <__divmodsi4_exit>

00006080 <__divmodsi4_neg2>:
    6080:	50 95       	com	r21
    6082:	40 95       	com	r20
    6084:	30 95       	com	r19
    6086:	21 95       	neg	r18
    6088:	3f 4f       	sbci	r19, 0xFF	; 255
    608a:	4f 4f       	sbci	r20, 0xFF	; 255
    608c:	5f 4f       	sbci	r21, 0xFF	; 255

0000608e <__divmodsi4_exit>:
    608e:	08 95       	ret

00006090 <__divmodsi4_neg1>:
    6090:	f6 f7       	brtc	.-4      	; 0x608e <__divmodsi4_exit>
    6092:	90 95       	com	r25
    6094:	80 95       	com	r24
    6096:	70 95       	com	r23
    6098:	61 95       	neg	r22
    609a:	7f 4f       	sbci	r23, 0xFF	; 255
    609c:	8f 4f       	sbci	r24, 0xFF	; 255
    609e:	9f 4f       	sbci	r25, 0xFF	; 255
    60a0:	08 95       	ret

000060a2 <__mulsi3>:
    60a2:	62 9f       	mul	r22, r18
    60a4:	d0 01       	movw	r26, r0
    60a6:	73 9f       	mul	r23, r19
    60a8:	f0 01       	movw	r30, r0
    60aa:	82 9f       	mul	r24, r18
    60ac:	e0 0d       	add	r30, r0
    60ae:	f1 1d       	adc	r31, r1
    60b0:	64 9f       	mul	r22, r20
    60b2:	e0 0d       	add	r30, r0
    60b4:	f1 1d       	adc	r31, r1
    60b6:	92 9f       	mul	r25, r18
    60b8:	f0 0d       	add	r31, r0
    60ba:	83 9f       	mul	r24, r19
    60bc:	f0 0d       	add	r31, r0
    60be:	74 9f       	mul	r23, r20
    60c0:	f0 0d       	add	r31, r0
    60c2:	65 9f       	mul	r22, r21
    60c4:	f0 0d       	add	r31, r0
    60c6:	99 27       	eor	r25, r25
    60c8:	72 9f       	mul	r23, r18
    60ca:	b0 0d       	add	r27, r0
    60cc:	e1 1d       	adc	r30, r1
    60ce:	f9 1f       	adc	r31, r25
    60d0:	63 9f       	mul	r22, r19
    60d2:	b0 0d       	add	r27, r0
    60d4:	e1 1d       	adc	r30, r1
    60d6:	f9 1f       	adc	r31, r25
    60d8:	bd 01       	movw	r22, r26
    60da:	cf 01       	movw	r24, r30
    60dc:	11 24       	eor	r1, r1
    60de:	08 95       	ret

000060e0 <__udivmodsi4>:
    60e0:	a1 e2       	ldi	r26, 0x21	; 33
    60e2:	1a 2e       	mov	r1, r26
    60e4:	aa 1b       	sub	r26, r26
    60e6:	bb 1b       	sub	r27, r27
    60e8:	fd 01       	movw	r30, r26
    60ea:	0d c0       	rjmp	.+26     	; 0x6106 <__udivmodsi4_ep>

000060ec <__udivmodsi4_loop>:
    60ec:	aa 1f       	adc	r26, r26
    60ee:	bb 1f       	adc	r27, r27
    60f0:	ee 1f       	adc	r30, r30
    60f2:	ff 1f       	adc	r31, r31
    60f4:	a2 17       	cp	r26, r18
    60f6:	b3 07       	cpc	r27, r19
    60f8:	e4 07       	cpc	r30, r20
    60fa:	f5 07       	cpc	r31, r21
    60fc:	20 f0       	brcs	.+8      	; 0x6106 <__udivmodsi4_ep>
    60fe:	a2 1b       	sub	r26, r18
    6100:	b3 0b       	sbc	r27, r19
    6102:	e4 0b       	sbc	r30, r20
    6104:	f5 0b       	sbc	r31, r21

00006106 <__udivmodsi4_ep>:
    6106:	66 1f       	adc	r22, r22
    6108:	77 1f       	adc	r23, r23
    610a:	88 1f       	adc	r24, r24
    610c:	99 1f       	adc	r25, r25
    610e:	1a 94       	dec	r1
    6110:	69 f7       	brne	.-38     	; 0x60ec <__udivmodsi4_loop>
    6112:	60 95       	com	r22
    6114:	70 95       	com	r23
    6116:	80 95       	com	r24
    6118:	90 95       	com	r25
    611a:	9b 01       	movw	r18, r22
    611c:	ac 01       	movw	r20, r24
    611e:	bd 01       	movw	r22, r26
    6120:	cf 01       	movw	r24, r30
    6122:	08 95       	ret

00006124 <__prologue_saves__>:
    6124:	2f 92       	push	r2
    6126:	3f 92       	push	r3
    6128:	4f 92       	push	r4
    612a:	5f 92       	push	r5
    612c:	6f 92       	push	r6
    612e:	7f 92       	push	r7
    6130:	8f 92       	push	r8
    6132:	9f 92       	push	r9
    6134:	af 92       	push	r10
    6136:	bf 92       	push	r11
    6138:	cf 92       	push	r12
    613a:	df 92       	push	r13
    613c:	ef 92       	push	r14
    613e:	ff 92       	push	r15
    6140:	0f 93       	push	r16
    6142:	1f 93       	push	r17
    6144:	cf 93       	push	r28
    6146:	df 93       	push	r29
    6148:	cd b7       	in	r28, 0x3d	; 61
    614a:	de b7       	in	r29, 0x3e	; 62
    614c:	ca 1b       	sub	r28, r26
    614e:	db 0b       	sbc	r29, r27
    6150:	0f b6       	in	r0, 0x3f	; 63
    6152:	f8 94       	cli
    6154:	de bf       	out	0x3e, r29	; 62
    6156:	0f be       	out	0x3f, r0	; 63
    6158:	cd bf       	out	0x3d, r28	; 61
    615a:	09 94       	ijmp

0000615c <__epilogue_restores__>:
    615c:	2a 88       	ldd	r2, Y+18	; 0x12
    615e:	39 88       	ldd	r3, Y+17	; 0x11
    6160:	48 88       	ldd	r4, Y+16	; 0x10
    6162:	5f 84       	ldd	r5, Y+15	; 0x0f
    6164:	6e 84       	ldd	r6, Y+14	; 0x0e
    6166:	7d 84       	ldd	r7, Y+13	; 0x0d
    6168:	8c 84       	ldd	r8, Y+12	; 0x0c
    616a:	9b 84       	ldd	r9, Y+11	; 0x0b
    616c:	aa 84       	ldd	r10, Y+10	; 0x0a
    616e:	b9 84       	ldd	r11, Y+9	; 0x09
    6170:	c8 84       	ldd	r12, Y+8	; 0x08
    6172:	df 80       	ldd	r13, Y+7	; 0x07
    6174:	ee 80       	ldd	r14, Y+6	; 0x06
    6176:	fd 80       	ldd	r15, Y+5	; 0x05
    6178:	0c 81       	ldd	r16, Y+4	; 0x04
    617a:	1b 81       	ldd	r17, Y+3	; 0x03
    617c:	aa 81       	ldd	r26, Y+2	; 0x02
    617e:	b9 81       	ldd	r27, Y+1	; 0x01
    6180:	ce 0f       	add	r28, r30
    6182:	d1 1d       	adc	r29, r1
    6184:	0f b6       	in	r0, 0x3f	; 63
    6186:	f8 94       	cli
    6188:	de bf       	out	0x3e, r29	; 62
    618a:	0f be       	out	0x3f, r0	; 63
    618c:	cd bf       	out	0x3d, r28	; 61
    618e:	ed 01       	movw	r28, r26
    6190:	08 95       	ret

00006192 <_exit>:
    6192:	f8 94       	cli

00006194 <__stop_program>:
    6194:	ff cf       	rjmp	.-2      	; 0x6194 <__stop_program>
